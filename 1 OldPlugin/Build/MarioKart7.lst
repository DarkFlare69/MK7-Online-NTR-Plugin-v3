         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 00000068 t CTRPluginFramework::GetOldPointer5CC() [clone .part.10]
00101070 00000090 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
00101100 00000084 T CTRPluginFramework::IsInRace()
00101184 000000bc T CTRPluginFramework::GetRacePointer()
00101240 00000050 T CTRPluginFramework::GetFNsPointer()
00101290 00000070 T CTRPluginFramework::GetOldPointer5D0()
00101300 0000009c T CTRPluginFramework::GetItemPointer()
0010139c 000000b4 T CTRPluginFramework::GetTotalPlayers()
00101450 00000068 T CTRPluginFramework::GetTime()
001014b8 00000114 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
001015cc 00000078 T CTRPluginFramework::SubToTime(unsigned short)
00101644 0000005c T CTRPluginFramework::writeItem(unsigned long)
001016a0 000000c4 T CTRPluginFramework::writeSpeed(unsigned long)
00101764 00000048 T CTRPluginFramework::writeVR(unsigned long)
001017ac 0000004c T CTRPluginFramework::writeLocation(unsigned long)
001017f8 00000064 T CTRPluginFramework::writeFlag(unsigned short)
0010185c 00000030 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
0010188c 00000030 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
001018bc 0000002c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
001018e8 00000030 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
00101918 0000002c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
00101944 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
00101948 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
00101970 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
00101984 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
00101998 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
00101a00 0000003c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
00101a3c 000000a4 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
00101ae0 000000a4 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
00101b84 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
00101bd8 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
00101c4c 000000e4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
00101d30 000002cc T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
00101ffc 00000234 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
00102230 000000dc T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
0010230c 000002a8 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
001025b4 00000188 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
0010273c 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
0010274c 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
0010275c 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
0010276c 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
0010277c 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
001027c4 00000038 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
001027fc 00000070 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
0010286c 00000070 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
001028dc 00000134 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
00102a10 00000104 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
00102b14 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
00102b44 00000178 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
00102cbc 00000110 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
00102dcc 0000009c T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
00102e68 000000ac T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
00102f14 0000004c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
00102f60 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
00102f6c 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
00102f78 00000118 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
00103090 00000460 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
001034f0 0000028c T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
0010377c 0000028c T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
00103a08 00000060 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
00103a68 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
00103acc 0000012c T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
00103bf8 0000011c T CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)
00103d14 000000ec T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
00103e00 0000010c T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
00103f0c 00000088 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
00103f94 000000b4 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
00104048 00000048 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
00104090 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
001040ec 0000020c T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
001042f8 000000d0 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
001043c8 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
00104468 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0010446c 00001a78 T CTRPluginFramework::main()
00105ee4 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00105ee4 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00105f14 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00105f14 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00105fb4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
00105fb4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
00106064 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00106064 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00106130 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001063d8 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
0010640c 00000424 T CTRPluginFramework::KeepThreadMain(void*)
00106830 00000038 T onLoadCro
00106868 00000164 T CTRPluginFramework::Initialize()
001069cc 00000098 T CTRPluginFramework::ThreadExit()
00106a64 00000060 T abort
00106ac4 00000024 T CTRPluginFramework::ThreadInit(void*)
00106ae8 00000068 T LaunchMainThread
00106b50 0000000c t _GLOBAL__sub_I_g_mainThread
00106b5c 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00106b5c 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00106b74 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00106b74 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00106b94 00000008 T CTRPluginFramework::Color::ToU32() const
00106ba0 00000120 T CTRPluginFramework::Color::Fade(double)
00106cc0 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
00106d00 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
00106d80 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
00106f58 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
00107124 00000068 T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
0010718c 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010720c 00000004 T CTRPluginFramework::OSD::TryLock()
00107210 00000004 T CTRPluginFramework::OSD::Unlock()
00107214 000000d8 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
001072ec 0000007c T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
00107368 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0010742c 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
001074d4 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001074d4 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107524 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00107524 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0010758c 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
0010758c 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
001075b8 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
001075c0 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
001075c8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001075e4 00000028 T CTRPluginFramework::Keyboard::Open() const
0010760c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
00107684 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00107734 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00107788 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
001077f0 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
0010788c 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00107918 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
001079c0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00107aa8 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00107b34 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
00107bdc 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
00107cc4 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00107d50 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
00107df8 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
00107ee0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107ee0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107f2c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00107f2c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00107f5c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
00107f64 00000028 t __tcf_0
00107f8c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
00108004 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
0010800c 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
0010808c 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
00108108 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
001081e0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
001081e0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
001081fc 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
001081fc 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0010823c 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
0010824c 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
0010830c 00000020 T CTRPluginFramework::HotkeyManager::Count()
0010832c 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
00108460 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
00108588 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108588 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001085c8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
001085c8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
001085f0 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
00108600 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00108600 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0010866c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
00108680 00000038 T CTRPluginFramework::PluginMenu::Run() const
001086b8 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
001086c0 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
001086d0 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
001086dc 00000030 t CTRPluginFramework::GetCurrentTime()
0010870c 00000014 T CTRPluginFramework::Clock::Clock()
0010870c 00000014 T CTRPluginFramework::Clock::Clock()
00108720 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
00108758 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
00108788 00000044 T CTRPluginFramework::Clock::Restart()
001087cc 00000014 T CTRPluginFramework::Controller::GetKeysDown()
001087e0 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
001087fc 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00108818 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00108834 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
00108850 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
0010887c 0000002c T CTRPluginFramework::Controller::Update()
001088a8 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00108918 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
00108a40 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00108ac4 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
00108b40 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00108bb8 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00108c1c 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00108cac 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108dc0 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00108e34 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108ec0 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108f38 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108fb0 00000034 T CTRPluginFramework::Directory::Close() const
00108fe4 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001090e4 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
001090f8 00000008 T CTRPluginFramework::Directory::IsOpen() const
00109100 0000002c T CTRPluginFramework::Directory::Directory()
00109100 0000002c T CTRPluginFramework::Directory::Directory()
0010912c 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0010912c 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00109160 0000002c T CTRPluginFramework::Directory::~Directory()
00109160 0000002c T CTRPluginFramework::Directory::~Directory()
0010918c 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
0010928c 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001092d0 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
0010931c 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
001094a0 0000010c T CTRPluginFramework::Directory::_List() const
001095ac 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00109714 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00109874 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
001098ac 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010998c 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001099ec 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109a74 0000005c T CTRPluginFramework::File::Close() const
00109ad0 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00109bac 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
00109c5c 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
00109d44 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00109d70 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
00109e20 00000008 T CTRPluginFramework::File::Tell() const
00109e28 00000010 T CTRPluginFramework::File::Rewind() const
00109e38 00000008 T CTRPluginFramework::File::Flush() const
00109e40 00000044 T CTRPluginFramework::File::GetSize() const
00109e84 00000008 T CTRPluginFramework::File::IsOpen() const
00109e8c 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
00109ea0 00000034 T CTRPluginFramework::File::File()
00109ea0 00000034 T CTRPluginFramework::File::File()
00109ed4 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00109ed4 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00109f14 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0010a014 00000010 T CTRPluginFramework::Process::GetHandle()
0010a024 00000010 T CTRPluginFramework::Process::GetTitleID()
0010a034 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010a094 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010a0cc 00000024 T CTRPluginFramework::Process::GetTextSize()
0010a0f0 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
0010a14c 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
0010a1c0 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0010a268 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0010a320 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0010a3d0 0000003c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0010a40c 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0010a434 00000020 T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0010a454 00000028 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0010a47c 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0010a4bc 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0010a4e8 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0010a50c 00000024 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0010a530 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0010a578 00000010 T CTRPluginFramework::System::IsNew3DS()
0010a588 00000010 T CTRPluginFramework::System::IsLoaderNTR()
0010a598 00000014 T CTRPluginFramework::Time::Time()
0010a598 00000014 T CTRPluginFramework::Time::Time()
0010a5ac 00000020 T CTRPluginFramework::Time::AsSeconds() const
0010a5cc 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0010a5e4 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0010a5ec 00000028 T CTRPluginFramework::Seconds(float)
0010a614 00000010 T CTRPluginFramework::Milliseconds(int)
0010a624 00000008 T CTRPluginFramework::Microseconds(long long)
0010a62c 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0010a640 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0010a654 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0010a668 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0010a688 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0010a6d4 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0010a6ec 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
0010a750 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0010a7c4 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0010a820 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0010a8a0 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010a954 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010aa94 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0010aacc 0000001c T CTRPluginFramework::InitializeRandomEngine()
0010aae8 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0010abf4 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0010ac5c 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0010ac78 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
0010acf0 0000001c W CTRPluginFramework::File::~File()
0010acf0 0000001c W CTRPluginFramework::File::~File()
0010ad0c 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010ad0c 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010adac 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0010adac 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0010ae0c 00000010 W CTRPluginFramework::BMPImage::DataClear()
0010ae1c 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0010af50 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0010af7c 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0010b0b4 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0010b34c 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
0010b41c 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0010b4d4 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0010b58c 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0010b5e8 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
0010b77c 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0010b7fc 000001ec T CTRPluginFramework::Preferences::WriteSettings()
0010b9e8 00000004 T CTRPluginFramework::Preferences::Initialize()
0010b9ec 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0010ba64 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
0010ba6c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0010bae4 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
0010baf0 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
0010bafc 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
0010bbfc 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010bbfc 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010bc2c 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0010bcf8 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
0010be0c 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0010c010 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
0010c068 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
0010c53c 00000010 T CTRPluginFramework::Glyph::Width() const
0010c54c 00000060 T CTRPluginFramework::Font::Initialize()
0010c5ac 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0010c900 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0010cc08 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0010ccfc 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0010cd64 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0010cd84 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010cd84 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010cdb0 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010cdb0 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010cdd0 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
0010ce88 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
0010cedc 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010cedc 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010cf78 0000000c T CTRPluginFramework::OSDImpl::Lock()
0010cf84 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0010cfa0 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0010cfac 000000e4 T CTRPluginFramework::OSDImpl::Draw()
0010d090 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0010d168 000001b8 T CTRPluginFramework::InstallOSD()
0010d320 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
0010d348 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0010d428 00000108 T CTRPluginFramework::OSDImpl::Update()
0010d530 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0010db48 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0010dbb0 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0010dc14 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0010dc40 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0010dc64 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0010dc9c 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0010dcd4 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0010dd04 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0010dd2c 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0010dd4c 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0010dd88 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0010ddd0 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0010de14 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0010df18 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
0010df54 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0010dfc4 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010e048 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010e0c0 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010e158 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010e1fc 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010e29c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
0010e2bc 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0010e2f8 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0010e570 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
0010e690 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
0010e6ac 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010e6f0 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0010e798 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010e840 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010e900 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0010e994 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0010ea3c 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010ea90 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010ea90 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010ead4 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0010eb28 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010ecbc 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010ed6c 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010edb0 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010f43c 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010f478 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010f5b8 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010f6fc 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010f7c4 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010f988 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010f9b8 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010fae8 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010fbbc 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010fd08 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010fe0c 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010ff60 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
001100f8 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
001102e4 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
00110354 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
001103c0 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
001103e4 00000028 T CTRPluginFramework::Window::~Window()
001103e4 00000028 T CTRPluginFramework::Window::~Window()
0011040c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0011040c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
00110410 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0011042c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
00110440 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
001104a4 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
001104a4 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0011056c 00000064 T CTRPluginFramework::Window::Draw() const
001105d0 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
001106a8 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
001106c0 00000018 T CTRPluginFramework::Window::MustClose() const
001106d8 00000014 T CTRPluginFramework::Window::Close() const
001106ec 00000004 T CTRPluginFramework::Window::GetRect() const
001106f0 0000002c T CTRPluginFramework::Window::Initialize()
0011071c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011079c 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
00110844 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
001109f4 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
00110a20 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
00110a5c 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
00110a98 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
00110ad4 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
00110b10 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
00110b4c 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
00110b78 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
00110bb4 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
00110bf0 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
00110c2c 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
00110c68 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
00110c94 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
00110cd0 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
00110cfc 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
00110d28 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
00110d54 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
00110d90 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
00110dbc 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
00110df8 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
00110e24 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
00110e58 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
00110e94 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
00110ec0 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
00110efc 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
00110f28 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
00110f54 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
00110f80 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
00110fac 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
00110fd8 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
00111004 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
00111030 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0011105c 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
00111098 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
001110b4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
001110b4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
001110b8 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
001110cc 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
00111130 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
001111b4 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
0011127c 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0011130c 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
00111428 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
00111498 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
00111538 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
00111564 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
00111564 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
00111594 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
00111668 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
001116a4 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001116a4 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001117c0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00111840 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
001118b8 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
0011195c 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011195c 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111aa0 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111aa0 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111be8 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00111be8 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00111c4c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
00111c54 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
00111c5c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
00111c64 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
00111c6c 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
00111c74 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
00111dd8 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0011226c 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
001122d0 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
00112360 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
001123e0 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
00112464 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
001125c4 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
00112844 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
00112dc0 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
00112e28 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
00112e78 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
00112ee8 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
00112ef0 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
00112ef0 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
00112f34 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
00112f64 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0011303c 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00113208 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
00113234 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
00113234 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0011325c 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
00113378 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
00113408 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
00113cfc 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
001145f0 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
00115934 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
00117074 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
001170b8 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0011730c 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
0011735c 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
001173c4 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0011740c 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00117730 00000250 T CTRPluginFramework::KeyboardImpl::Run()
00117980 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
001179f8 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00117a00 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00117a14 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00117a14 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00117a3c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00117a3c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00117a64 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
00117a80 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00117a9c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00117bb4 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117bb4 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117c8c 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117c8c 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117d68 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
00117d70 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
00117d7c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
00117d84 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00117da8 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
00117dd8 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
00117df4 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
00117e5c 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00117e5c 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00117f28 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00117f44 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117f44 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00118000 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00118000 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001180c0 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
001180d4 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
00118124 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
0011813c 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
00118160 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
00118170 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
00118194 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0011826c 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
001182cc 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
001182dc 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
001182ec 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
001182fc 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001182fc 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00118300 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00118300 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00118304 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00118320 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
0011833c 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00118350 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00118364 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0011838c 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
001183f0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00118454 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011847c 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
001184a0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
00118518 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00118584 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
00118658 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
001186f8 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
001186f8 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00118960 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
00118974 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
001189cc 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00118a20 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
00118b40 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00118b40 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00118b7c 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
00118cf0 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118d70 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118df0 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
00118f50 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
00118ff8 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011917c 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
00119304 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
00119310 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
00119494 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
001194d8 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00119508 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
001195dc 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
00119664 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
001197d8 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
00119848 00000030 W CTRPluginFramework::ARCode::~ARCode()
00119848 00000030 W CTRPluginFramework::ARCode::~ARCode()
00119878 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
001199bc 0000001c W CTRPluginFramework::ARCode::~ARCode()
001199d8 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00119a30 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00119a30 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00119a5c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
00119a68 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
00119a74 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00119b90 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
00119bcc 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00119bd8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00119be4 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00119c04 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
00119cdc 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00119e78 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
00119ecc 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0011a02c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0011a044 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0011a168 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0011a240 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0011a3fc 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0011a4d4 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0011a558 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
0011a76c 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0011a970 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
0011ab74 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
0011ad88 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011ade0 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011ae54 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011aec8 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011af20 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
0011afa8 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
0011afb4 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011afb4 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011afdc 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011aff8 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
0011b08c 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011b08c 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011b0b4 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011b0d0 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011b0d0 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011b0f8 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011b114 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011b114 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011b13c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011b158 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011b158 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011b178 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011b178 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011b1a8 0000001c W CTRPluginFramework::TextBox::~TextBox()
0011b1c4 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011b1c4 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011b2b4 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0011b2bc 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011b2bc 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011b350 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0011b370 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011b4fc 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011b51c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0011b538 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0011b554 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0011b55c 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0011b564 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011b564 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011b584 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0011b678 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
0011bdd4 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0011be2c 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0011be5c 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0011bf20 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011bf54 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011c084 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011c1c0 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0011c284 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011c38c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011c38c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011c3f4 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0011c4f0 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0011c630 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011c7c8 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c848 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c8bc 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c930 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c9b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
0011ca28 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
0011ca6c 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0011cba8 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0011cc10 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0011cd7c 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0011cdcc 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0011ce78 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0011d344 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0011d3b4 000000f4 t CTRPluginFramework::ClearSearchFolder()
0011d4a8 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011d4a8 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011d600 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
0011d65c 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011d65c 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011dc9c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0011dcd0 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0011def0 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0011df18 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0011df80 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0011dfb0 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0011e084 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0011e130 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0011e170 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0011e3dc 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011e764 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0011e840 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011e878 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0011eaf4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0011eb08 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0011eb1c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0011eb30 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0011ec44 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0011ec48 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0011ec4c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0011ec64 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0011ec7c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0011ec94 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0011ecac 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0011ecc4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0011ecdc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0011ecf4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011ed0c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011ed24 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011ed9c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011ee00 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011ef20 0000005c t CTRPluginFramework::Reboot()
0011ef7c 00000064 t CTRPluginFramework::Shutdown()
0011efe0 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011f0d8 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011f218 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011f3e0 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011f5d4 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011fdd0 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011fdd0 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011ff24 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
00120030 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
001200d4 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
00120114 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
00120150 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0012018c 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00120294 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0012031c 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
001203bc 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
00120438 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
001204ec 0000018c T CTRPluginFramework::SearchMenu::_Edit()
00120678 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
001206c0 0000014c T CTRPluginFramework::SearchMenu::_Export()
0012080c 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
00120968 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
00120b14 00000030 W std::__cxx11::to_string(unsigned long)
00120b44 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00120bc8 00000584 T CTRPluginFramework::SearchMenu::Draw()
0012114c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0012114c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
00121200 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
00121230 00000230 T CTRPluginFramework::SearchMenu::Update()
00121460 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0012196c 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
001219d0 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001219d0 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00121a64 0000001c T CTRPluginFramework::SubMenu::operator()()
00121a80 00000214 T CTRPluginFramework::SubMenu::Draw()
00121c94 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
00121d50 00000008 T CTRPluginFramework::SubMenu::IsOpen()
00121d58 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
00121d74 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00121f0c 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00121f54 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
00122018 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
001220d8 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
00122114 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
0012218c 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
0012242c 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
001226e8 00000040 W CTRPluginFramework::Search::~Search()
001226e8 00000040 W CTRPluginFramework::Search::~Search()
00122728 00000044 T CTRPluginFramework::Search32::~Search32()
00122728 00000044 T CTRPluginFramework::Search32::~Search32()
0012276c 0000001c T CTRPluginFramework::Search32::~Search32()
00122788 0000001c W CTRPluginFramework::Search::~Search()
001227a4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
001227a4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
001229cc 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001229cc 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001229ec 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
001229ec 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00122a48 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00122b80 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00122bc8 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
00122d0c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
00122e50 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00122e94 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
00122ec0 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
00122fac 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
00122fe0 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
00123014 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00123120 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00123168 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
00123480 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
001236e0 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00123958 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00123bb8 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
00123bec 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00123f10 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012473c 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125008 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001258b4 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126664 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127218 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012790c 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127cec 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128488 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001288cc 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128d14 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00129158 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00129788 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012a044 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012a904 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012b1c0 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012be10 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012be54 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0012bfe8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
0012c060 00000008 T CTRPluginFramework::Search::GetHeader() const
0012c068 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0012c0c0 0000000c T CTRPluginFramework::Search::GetType() const
0012c0cc 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0012c0e4 00000070 T CTRPluginFramework::Search::WriteHeader()
0012c154 00000058 T CTRPluginFramework::Search::WriteResults()
0012c1ac 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0012c1f8 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0012c418 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012c418 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012c658 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0012c730 0000008c T CTRPluginFramework::Search::CreateIndexTable()
0012c7bc 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012c7bc 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012c964 00000080 T CTRPluginFramework::Search::Cancel()
0012c9e4 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0012cafc 00000090 T CTRPluginFramework::EventManager::EventManager()
0012cafc 00000090 T CTRPluginFramework::EventManager::EventManager()
0012cb8c 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0012ccf4 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0012cd38 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
0012cfc4 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0012d0c8 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0012d0d0 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012d0f4 00000004 t addrMapNodeDestructor(rbtree_node*)
0012d0f8 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0012d208 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0012d210 00000050 T CTRPluginFramework::Heap::Free(void*)
0012d260 0000000c T CTRPluginFramework::Heap::SpaceFree()
0012d26c 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
0012d394 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
0012d3e0 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
0012d3f8 00000018 T IsPaused
0012d410 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
0012d598 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
0012d6f0 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
0012d750 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0012d768 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012d768 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012d798 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
0012d7f8 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0012d8a0 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
0012d908 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
0012d9bc 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
0012da74 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0012da7c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0012dad8 00000118 T CTRPluginFramework::ScreenImpl::Flush()
0012dbf0 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
0012dd08 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0012dd60 00000078 T CTRPluginFramework::ScreenImpl::Clean()
0012ddd8 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0012de4c 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012de54 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0012de5c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0012de64 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0012de80 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0012de9c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0012def0 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0012df20 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0012df78 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0012dfec 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
0012e0dc 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
0012e0ec 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
0012e0fc 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0012e124 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012e124 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012e144 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012e1cc 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012e1cc 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012e304 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012e408 0000006c T CTRPluginFramework::ARCode::Update()
0012e474 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012e474 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012e538 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012e538 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012e578 00000040 T CTRPluginFramework::ARCodeContext::Update()
0012e5b8 00000048 T CTRPluginFramework::ARCodeContext::Clear()
0012e600 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012e674 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0012e6d4 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0012e7a0 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
0012e7a0 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012e7ac 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012e834 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0012e890 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012f000 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012f000 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012f080 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012f080 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012f080 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012f080 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012f0d0 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012fbe0 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012fbe0 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012fd80 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
00130064 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
00130080 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
00130108 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
00130140 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
001302c4 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
00130308 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0013036c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
00130398 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
00130398 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
001303c0 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0013040c 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
00130470 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0013052c 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
00130854 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
00130d14 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0013117c 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00131638 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
00131728 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
00131728 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
00131748 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
00131764 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00131878 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
001318f0 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
00131908 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001319fc 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00131a0c 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
00131ae4 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
00131b38 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131b7c 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131bc4 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0013209c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0013209c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
001320e0 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
001320e0 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
001320f4 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
00132114 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
001322a0 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
00132408 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
00132c28 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132cec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
00132d64 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
001330a8 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
001330fc 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
001330fc 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0013315c 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
00133178 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00133178 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001331c8 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
00133264 0000002c W MemBlock::Create(unsigned char*, unsigned long)
00133290 00000034 W MemPool::DelBlock(MemBlock*)
001332c4 0000005c T MemPool::CoalesceRight(MemBlock*)
00133320 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
0013343c 00000100 T MemPool::Deallocate(MemChunk const&)
0013353c 00000020 T MemPool::GetFreeSpace()
0013355c 00000124 T __system_allocateHeaps
00133680 00000034 T arm11kSetKProcessId
001336b4 00000028 T arm11kGetCurrentKProcess
001336dc 00000024 T arm11kMemcpy
00133700 00000064 T arm11kSvcControlMemory
00133764 00000018 T getKernelObjectPtr
0013377c 000000a0 T cfguInit
0013381c 00000034 T cfguExit
00133850 00000044 T CFGU_GetConfigInfoBlk2
00133894 00000014 T CFGU_GetSystemLanguage
001338a8 000000a8 T fontEnsureMapped
00133950 0000011c T fontGlyphIndexFromCodePoint
00133a6c 00000074 T fontGetCharWidthInfo
00133ae0 00000050 T srvExit
00133b30 00000034 T srvRegisterClient
00133b64 00000064 T srvInit
00133bc8 00000068 T srvGetServiceHandleDirect
00133c30 00000004 T srvGetServiceHandle
00133c34 00000034 T srvPublishToSubscriber
00133c68 0000000c T __sync_init
00133c74 00000018 T __sync_fini
00133c8c 00000018 T LightLock_Init
00133ca4 0000008c T LightLock_Lock
00133d30 00000034 T LightLock_TryLock
00133d64 00000050 T LightLock_Unlock
00133db4 00000018 T RecursiveLock_Init
00133dcc 00000030 T RecursiveLock_Lock
00133dfc 00000044 T RecursiveLock_TryLock
00133e40 00000034 T RecursiveLock_Unlock
00133e74 00000030 T LightEvent_Init
00133ea4 00000060 T LightEvent_Clear
00133f04 00000060 T LightEvent_Pulse
00133f64 000000b4 T LightEvent_Signal
00134018 000000a8 T LightEvent_Wait
001340c0 00000168 T threadCreate
00134228 0000001c T threadFree
00134244 00000024 T threadJoin
00134268 00000030 T threadGetCurrent
00134298 0000003c T threadExit
001342d4 0000003c t _thread_begin
00134310 00000088 T acInit
00134398 00000034 T acExit
001343cc 000000a0 T amInit
0013446c 00000034 T amExit
001344a0 00000128 T aptSendCommand
001345c8 0000006c T APT_CheckNew3DS
00134634 00000048 T APT_GetSharedFont
0013467c 00000028 t fsSession
001346a4 00000040 t fsSessionForArchive
001346e4 00000038 T fsExit
0013471c 00000028 T FSUSER_Initialize
00134744 000000b0 T fsInit
001347f4 00000080 T FSUSER_OpenFile
00134874 00000068 T FSUSER_DeleteFile
001348dc 000000a4 T FSUSER_RenameFile
00134980 00000070 T FSUSER_CreateDirectory
001349f0 0000006c T FSUSER_OpenDirectory
00134a5c 00000074 T FSUSER_OpenArchive
00134ad0 00000058 T FSFILE_Read
00134b28 00000060 T FSFILE_Write
00134b88 00000038 T FSFILE_GetSize
00134bc0 00000028 T FSFILE_SetSize
00134be8 0000003c T FSFILE_Close
00134c24 00000024 T FSFILE_Flush
00134c48 00000050 T FSDIR_Read
00134c98 0000003c T FSDIR_Close
00134cd4 000000e8 t gspEventThreadMain
00134dbc 00000098 T gspInitEventHandler
00134e54 00000040 T gspExitEventHandler
00134e94 0000008c T gspExit
00134f20 0000005c T gspWaitForEvent
00134f7c 00000044 T GSPGPU_FlushDataCache
00134fc0 00000044 T GSPGPU_InvalidateDataCache
00135004 00000064 T GSPGPU_RegisterInterruptRelayQueue
00135068 000000dc T gspInit
00135144 0000002c T GSPGPU_SaveVramSysArea
00135170 0000002c T GSPGPU_RestoreVramSysArea
0013519c 000000bc T hidExit
00135258 00000034 T hidCheckSectionUpdateTime
0013528c 0000016c T hidScanInput
001353f8 00000010 T hidKeysHeld
00135408 00000010 T hidKeysDown
00135418 00000010 T hidKeysUp
00135428 00000018 T hidTouchRead
00135440 00000090 T HIDUSER_GetHandles
001354d0 00000174 T hidInit
00135644 00000034 T irrstCheckSectionUpdateTime
00135678 00000070 T irrstScanInput
001356e8 0000001c T irrstKeysHeld
00135704 00000050 T IRRST_GetHandles
00135754 00000034 T IRRST_Initialize
00135788 00000124 T irrstInit
001358ac 0000002c T IRRST_Shutdown
001358d8 000000a8 T irrstExit
00135980 0000002c t __ctru_get_reent
001359ac 000000f0 T __system_initSyscalls
00135a9c 0000005c T decode_utf16
00135af8 00000138 T decode_utf8
00135c30 00000054 T encode_utf16
00135c84 000000e0 T encode_utf8
00135d64 000000d4 T utf16_to_utf8
00135e38 000000ac T utf8_to_utf16
00135ee4 00000054 T rbtree_find
00135f38 00000010 T rbtree_init
00135f48 00000174 t do_insert
001360bc 00000008 T rbtree_insert
001360c4 00000014 t is_black
001360d8 000002c8 T rbtree_remove
001363a0 00000094 T rbtree_rotate
00136434 T loadCROHooked
00136450 T svcControlMemory
00136470 T svcQueryMemory
001364a0 T svcCreateThread
001364c0 T svcExitThread
001364c8 T svcSleepThread
001364d0 T svcSetThreadPriority
001364d8 T svcReleaseMutex
001364e0 T svcCreateEvent
001364f4 T svcSignalEvent
001364fc T svcClearEvent
00136504 T svcMapMemoryBlock
0013650c T svcUnmapMemoryBlock
00136514 T svcCreateAddressArbiter
00136528 T svcArbitrateAddress
00136540 T svcCloseHandle
00136548 T svcWaitSynchronization
00136550 T svcGetSystemTick
00136558 T svcGetSystemInfo
00136570 T svcGetProcessInfo
00136588 T svcConnectToPort
0013659c T svcSendSyncRequest
001365a4 T svcOpenProcess
001365b8 T svcBreak
001365c0 T svcInvalidateProcessDataCache
001365c8 T svcFlushProcessDataCache
001365d0 T svcControlProcessMemory
001365e8 T svcBackdoor
001365f0 T svcKernelSetState
001365f8 T svcQueryProcessMemory
0013661c 0000004c T Hook::Hook()
0013661c 0000004c T Hook::Hook()
00136668 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00136730 00000060 T Hook::Enable()
00136790 00000060 T Hook::Disable()
001367f0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001367f0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013682c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013682c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136860 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00136860 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0013689c 00000008 T CTRPluginFramework::MessageBox::operator()() const
001368a4 00000014 T CTRPluginFramework::Touch::IsDown()
001368b8 00000028 T CTRPluginFramework::Touch::GetPosition()
001368e0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
001368e0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0013690c 00000018 T CTRPluginFramework::LineReader::~LineReader()
0013690c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00136924 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00136a38 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00136a38 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00136a60 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00136ae0 00000048 T CTRPluginFramework::LineWriter::Flush()
00136b28 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00136b28 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00136b44 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00136bb4 00000018 T CTRPluginFramework::LineWriter::Close()
00136bcc 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00136c08 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
00136c2c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00136c50 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00136cec 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00136cec 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00136cf0 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
00136d04 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136de8 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00136de8 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00136e48 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
00136e50 000000ac T CTRPluginFramework::ComboBox::Draw()
00136efc 000000ac T CTRPluginFramework::ComboBox::operator()()
00136fa8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00136fa8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00136ff4 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
00137010 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00137010 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00137060 00000038 T CTRPluginFramework::ComboBox::Clear()
00137098 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001370f0 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137180 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00137180 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00137184 00000014 T CTRPluginFramework::FloatingButton::Draw()
00137198 00000014 T CTRPluginFramework::FloatingButton::operator()()
001371ac 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
001371c0 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
00137380 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00137380 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
001373c4 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001373c4 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013759c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013759c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013770c 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
00137784 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
00137a40 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
00137b44 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00137b44 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00137b64 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00137b80 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00137c14 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
00137c4c 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
00137cb4 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
00137dac 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
00137dbc 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
00137dcc 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
00137dd4 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00137de0 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00137de0 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00137e48 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137ec8 00000008 W CTRPluginFramework::Drawable::operator()()
00137ed0 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137ed4 000002e0 T CTRPluginFramework::TextBox::Draw()
001381b4 000000ec T CTRPluginFramework::TextBox::TextBox()
001381b4 000000ec T CTRPluginFramework::TextBox::TextBox()
001382a0 0000000c T CTRPluginFramework::TextBox::Open() const
001382ac 0000000c T CTRPluginFramework::TextBox::Close() const
001382b8 00000008 T CTRPluginFramework::TextBox::IsOpen() const
001382c0 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0013850c 0000000c T CTRPluginFramework::TextBox::DrawConst() const
00138518 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
001385b0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
00138664 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
0013873c 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
00138778 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
00138960 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00138960 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00138af8 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00138be0 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00138be0 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00138be4 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00138bf8 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00138c98 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00138c98 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00138cf4 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00138cf4 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00138d94 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00138d94 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00138df0 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
00138df8 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
00138f20 00000088 T CTRPluginFramework::TouchKey::Draw()
00138fa8 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00139040 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00139040 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
001390ec 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
0013919c 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0013923c 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
00139254 00000030 T CTRPluginFramework::TouchKeyString::operator()()
00139284 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00139284 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00139298 00000024 T CTRPluginFramework::UIContainer::Draw()
001392bc 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
001392f0 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
00139314 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
001393ec 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
00139430 000000e4 T CTRPluginFramework::Converter::Converter()
00139430 000000e4 T CTRPluginFramework::Converter::Converter()
00139514 00000010 T CTRPluginFramework::Converter::Instance()
00139524 00000108 T CTRPluginFramework::Converter::_Draw()
0013962c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0013962c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00139640 000001e0 T CTRPluginFramework::Converter::operator()()
00139820 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00139898 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00139898 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
001398e4 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
001399a0 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
00139a88 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00139aec 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
00139e00 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
00139ef8 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0013a140 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
0013a3c0 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
0013a3c0 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
0013a3c4 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
0013a3e0 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
0013a3f4 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
0013a458 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0013a4d0 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0013a590 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0013a84c 00000228 T CTRPluginFramework::GuideReader::GuideReader()
0013a84c 00000228 T CTRPluginFramework::GuideReader::GuideReader()
0013aa74 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
0013ae88 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0013aea0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013af20 00000154 T CTRPluginFramework::GuideReader::Draw()
0013b074 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0013b0e4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013b0e4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013b0e8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
0013b104 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013b118 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
0013b17c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
0013b1f4 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0013b210 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
0013b23c 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
0013b2bc 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0013b3d4 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0013b404 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
0013b448 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0013b48c 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0013b4c0 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
0013b514 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
0013b568 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0013b7e8 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
0013b820 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
0013be04 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013be04 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013c030 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0013c074 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0013c25c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0013c2b4 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
0013c39c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013c41c 00000044 T CTRPluginFramework::HexEditor::_Update()
0013c460 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
0013c5b0 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0013c860 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0013c8d8 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013c8d8 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013c9b4 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013c9b4 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013cacc 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0013cb08 00000030 T CTRPluginFramework::Menu::~Menu()
0013cb08 00000030 T CTRPluginFramework::Menu::~Menu()
0013cb38 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0013cb44 00000008 T CTRPluginFramework::Menu::GetFolder() const
0013cb4c 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0013cb54 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
0013cb7c 000003a4 T CTRPluginFramework::Menu::Draw() const
0013cf20 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
0013cfa4 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
0013d028 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0013d258 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0013d3c8 00000068 T CTRPluginFramework::Menu::ShowNote()
0013d430 00000008 T CTRPluginFramework::Menu::CloseNote()
0013d438 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0013d440 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0013d480 00000044 T CTRPluginFramework::Menu::Pop()
0013d4c4 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0013d580 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013d580 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013d5a0 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013d5bc 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013d5bc 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013d650 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d650 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d6b0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d6b0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d710 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013d714 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
0013d720 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
0013d72c 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
0013d738 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
0013d744 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013d744 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013d748 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013d748 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013d74c 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013d768 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013d784 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013d798 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013d7ac 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0013d894 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0013d8d0 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0013d928 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013d9dc 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013dabc 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0013db48 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0013db74 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013dbd8 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013dc3c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
0013dcb4 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
0013dcf8 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0013dd04 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
0013e030 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0013e134 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0013e394 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0013e498 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0013e874 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0013e944 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013e9c4 0000006c T CTRPluginFramework::PluginMenuHome::Init()
0013ea30 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0013eab4 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0013eb10 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013eb10 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013ec68 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
0013eca0 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013eca0 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013f3bc 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013f434 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013f4b4 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013f534 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013f640 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013f648 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013f66c 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013f690 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013f6b4 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013f6dc 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013f704 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013f72c 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013f74c 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00140b90 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
00140bf4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
00140c14 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00140c38 00000004 t addrMapNodeDestructor(rbtree_node*)
00140c3c 000000d8 T mappableAlloc
00140d14 00000050 T mappableFree
00140d64 00000008 T envGetHandle
00140d6c 0000005c t getSysTime
00140dc8 000000fc T __libctru_gtod
00140ec4 00000014 W __appExit
00140ed8 00000078 W __libctru_exit
00140f50 00000050 T rbtree_node_next
00140fa0 00000004 T operator delete[](void*)
00140fa4 00000004 T operator new[](unsigned int)
00140fa8 0000005c T __cxa_guard_acquire
00141004 0000000c T __cxa_guard_release
00141010 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00141070 00000070 T __cxa_init_primary_exception
001410e0 00000054 T __cxa_throw
00141134 000000b0 T __cxa_rethrow
001411e4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
001411e4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00141204 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
00141230 00000004 T std::exception::~exception()
00141230 00000004 T std::exception::~exception()
00141234 00000004 T std::bad_exception::~bad_exception()
00141234 00000004 T std::bad_exception::~bad_exception()
00141238 0000000c T transaction clone for std::exception::what() const
00141238 0000000c T std::exception::what() const
00141244 0000000c T transaction clone for std::bad_exception::what() const
00141244 0000000c T std::bad_exception::what() const
00141250 00000018 T std::bad_exception::~bad_exception()
00141268 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00141268 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00141288 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001412b4 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00141320 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001413f4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00141438 0000000c T __cxa_get_globals_fast
00141444 0000000c T __cxa_get_globals
00141450 00000004 T operator delete(void*, unsigned int)
00141454 000000d0 T __cxa_begin_catch
00141524 000000d8 T __cxa_end_catch
001415fc 00000004 T std::type_info::~type_info()
001415fc 00000004 T std::type_info::~type_info()
00141600 00000008 T std::type_info::__is_pointer_p() const
00141600 00000008 T std::type_info::__is_function_p() const
00141608 0000004c T std::type_info::operator==(std::type_info const&) const
00141654 00000008 T __cxa_pure_virtual
0014165c 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
001417c4 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
00141824 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00141904 0000074c T __gxx_personality_v0
00142050 00000004 T operator delete(void*)
00142054 0000005c T operator new(unsigned int)
001420b0 00000010 T __aeabi_atexit
001420c0 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
00142190 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
00142244 00000044 T __cxa_allocate_exception
00142288 00000030 T __cxa_free_exception
001422b8 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
001422f8 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00142354 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00142368 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00142368 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00142388 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
001423b4 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0014241c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00142448 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0014248c 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
001424a4 00000014 T std::__detail::_List_node_base::_M_unhook()
001424b8 0000002c T std::__throw_bad_alloc()
001424e4 00000040 T std::__throw_logic_error(char const*)
00142524 00000040 T std::__throw_invalid_argument(char const*)
00142564 00000040 T std::__throw_length_error(char const*)
001425a4 00000040 T std::__throw_out_of_range(char const*)
001425e4 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
00142660 00000038 T std::logic_error::logic_error(char const*)
00142660 00000038 T std::logic_error::logic_error(char const*)
00142698 00000020 T std::invalid_argument::invalid_argument(char const*)
00142698 00000020 T std::invalid_argument::invalid_argument(char const*)
001426b8 00000020 T std::length_error::length_error(char const*)
001426b8 00000020 T std::length_error::length_error(char const*)
001426d8 00000020 T std::out_of_range::out_of_range(char const*)
001426d8 00000020 T std::out_of_range::out_of_range(char const*)
001426f8 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0014277c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00142780 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
00142830 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00142830 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00142870 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
001428c4 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
001428d8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
001428fc 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
00142920 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001429d8 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
00142ae8 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
00142b5c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00142b5c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00142bc8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00142bc8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00142bec 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00142c7c 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00142d90 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
00142dfc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
00142e68 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00142e90 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00142ed4 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
00142eec 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
00142ff0 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
00143038 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
001432c0 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
001432f8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00143344 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
001433a4 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
00143438 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00143448 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00143458 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
00143484 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
001434cc 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
00143514 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
001435bc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
001435cc 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0014363c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0014366c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
001436b8 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
00143768 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00143768 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00143798 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
00143848 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
001438c0 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
00143930 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
001439a8 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
00143aa8 00000014 T std::get_new_handler()
00143abc 00000034 T __cxxabiv1::__terminate(void (*)())
00143af0 00000018 T std::terminate()
00143b08 0000000c T __cxxabiv1::__unexpected(void (*)())
00143b14 00000018 T std::unexpected()
00143b2c 00000014 T std::get_terminate()
00143b40 00000014 T std::get_unexpected()
00143b54 0000000c T std::bad_alloc::what() const
00143b60 00000020 T std::bad_alloc::~bad_alloc()
00143b60 00000020 T std::bad_alloc::~bad_alloc()
00143b80 0000002c T std::bad_alloc::~bad_alloc()
00143bac T __cxa_end_cleanup
00143bbc 00000138 T __cxa_type_match
00143cf4 000000b4 T __cxa_begin_cleanup
00143da8 000000b4 T __gnu_end_cleanup
00143e5c 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
00143ecc 0000002c T __cxa_call_terminate
00143ef8 0000013c T __cxa_call_unexpected
00144034 00000008 T std::logic_error::what() const
0014403c 00000064 T std::logic_error::~logic_error()
0014403c 00000064 T std::logic_error::~logic_error()
001440a0 0000001c T std::logic_error::~logic_error()
001440bc 00000020 T std::invalid_argument::~invalid_argument()
001440bc 00000020 T std::invalid_argument::~invalid_argument()
001440dc 00000028 T std::invalid_argument::~invalid_argument()
00144104 00000020 T std::length_error::~length_error()
00144104 00000020 T std::length_error::~length_error()
00144124 00000028 T std::length_error::~length_error()
0014414c 00000020 T std::out_of_range::~out_of_range()
0014414c 00000020 T std::out_of_range::~out_of_range()
0014416c 00000028 T std::out_of_range::~out_of_range()
00144198 00000174 T ceil
0014430c 000000b8 T ceilf
001443c8 00000174 T floor
0014453c 00000088 T roundf
001445c8 00000020 T log2
001445e8 00000100 T sqrtf
001446e8 0000015c T log
00144844 000000e8 T __ieee754_sqrtf
00144930 000002c4 T __ieee754_log
00144bf4 00000008 T matherr
00144c00 00000010 T nan
00144c10 0000002c t __aeabi_f2lz
00144c10 0000002c T __fixsfdi
00144c40 00000050 t __aeabi_f2ulz
00144c40 00000050 T __fixunssfdi
00144c90 00000158 t __udivmoddi4
00144de8 00000018 t selfrel_offset31
00144e00 0000008c t search_EIT_table
00144e8c 00000040 t __gnu_unwind_get_pr_addr
00144ecc 00000118 t get_eit_entry
00144fe4 00000088 t restore_non_core_regs
0014506c 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
00145080 00000004 t _Unwind_DebugHook
00145084 00000068 t unwind_phase2
001450ec 00000134 t unwind_phase2_forced
00145220 000000a8 t __gnu_Unwind_RaiseException
001452c8 00000024 t __gnu_Unwind_ForcedUnwind
001452ec 00000074 t __gnu_Unwind_Resume
00145360 00000020 t __gnu_Unwind_Resume_or_Rethrow
00145380 00000004 t _Unwind_Complete
00145384 00000018 t _Unwind_DeleteException
0014539c 00000068 t _Unwind_VRS_Get
00145404 0000002c t _Unwind_GetGR
00145430 00000068 t _Unwind_VRS_Set
00145498 0000002c t _Unwind_SetGR
001454c4 000000c0 t __gnu_Unwind_Backtrace
00145584 0000044c t __gnu_unwind_pr_common
001459d0 00000008 T __aeabi_unwind_cpp_pr0
001459d8 00000008 W __aeabi_unwind_cpp_pr1
001459e0 00000008 W __aeabi_unwind_cpp_pr2
001459e8 00000418 t _Unwind_VRS_Pop
00145e00 00000060 t next_unwind_byte
00145e60 0000002c t _Unwind_GetGR.constprop.0
00145e8c 00000004 t unwind_UCB_from_context
00145e90 000003c8 t __gnu_unwind_execute
00146258 00000048 t __gnu_unwind_frame
001462a0 00000010 t _Unwind_GetRegionStart
001462b0 0000001c t _Unwind_GetLanguageSpecificData
001462cc 00000008 t _Unwind_GetDataRelBase
001462d4 00000008 t _Unwind_GetTextRelBase
001462dc 00000010 T ctime
001462ec 00000014 T __cxa_atexit
00146300 0000000c T __errno
0014630c 00000034 T exit
00146340 00000040 T __libc_fini_array
00146380 0000007c T __libc_init_array
001463fc 0000001c T isspace
00146418 0000001c T isxdigit
00146434 0000001c T localtime
00146450 00000364 T localtime_r
001467b4 00000024 T __locale_mb_cur_max
001467d8 00000008 T __locale_ctype_ptr_l
001467e0 00000024 T __locale_ctype_ptr
00146804 00000018 T malloc
0014681c 00000018 T free
00146834 000007a8 T _malloc_r
00146fdc 000002fc T __utf8_mbtowc
001472d8 00000100 T memchr
001473d8 000000fc T memcmp
001474d4 0000010c T memcpy
001475e0 0000013c T memmove
0014771c 00000110 T memset
0014782c 0000000c T __malloc_lock
00147838 0000000c T __malloc_unlock
00147844 00000044 T rand
00147888 00000064 T sprintf
001478ec 00000008 T __seofread
001478f4 000000f0 T strcpy
001479e4 00000158 t iso_year_adjust
00147b3c 00001024 t __strftime
00148b60 00000050 T strftime
00148bb0 0000005c T strlen
00148c0c 000000f8 T strncmp
00148d04 000000d8 T strncpy
00148ddc 00000054 t sulp
00148e30 00001464 T _strtod_l
0014a298 000000b8 T strtof
0014a350 000001bc t _strtol_l.isra.0
0014a50c 00000050 T _strtol_r
0014a560 00000260 t _strtoull_l.isra.0
0014a7c0 00000050 T _strtoull_r
0014a810 000001d0 t _strtoul_l.isra.0
0014a9e0 00000050 T _strtoul_r
0014aa30 00000054 T strtoul
0014aa84 000074a0 t get_arg
00151f28 00003e2c T _svfprintf_r
00155d54 00000038 T time
00155d8c 00000218 T __tzcalc_limits
00155fa4 0000000c T __tz_lock
00155fb0 0000000c T __tz_unlock
00155fbc 00000010 T _tzset_unlocked
00155fcc 0000049c T _tzset_unlocked_r
00156468 000000a0 T _vsnprintf_r
00156508 00000038 T vsnprintf
00156540 000000a0 T _wcrtomb_r
001565e0 00000020 T _wcsrtombs_r
00156600 000000e8 T __utf8_wctomb
001566e8 0000000c T abs
001566f4 0000001c T asctime
00156710 00000078 T asctime_r
00156788 000000f4 T __register_exitproc
0015687c 00000170 T __call_exitprocs
001569ec 000001bc t quorem
00156ba8 00001224 T _dtoa_r
00157dcc 000000f8 T _malloc_trim_r
00157ec4 000002e4 T _free_r
001581a8 00000104 t rshift
001582ac 000007f8 T __gethex
00158aa4 00000060 T __match
00158b04 00000254 T __hexnan
00158d58 000000c8 T _findenv_r
00158e20 00000018 T _getenv_r
00158e38 0000000c T __gettzinfo
00158e44 00000280 T gmtime_r
001590c4 0000000c T labs
001590d0 00000008 T __localeconv_l
001590d8 00000024 T _localeconv_r
001590fc 00000088 T _Balloc
00159184 0000001c T _Bfree
001591a0 000000d0 T __multadd
00159270 000000e0 T __s2b
00159350 00000058 T __hi0bits
001593a8 0000009c T __lo0bits
00159444 00000020 T __i2b
00159464 000001d4 T __multiply
00159638 00000100 T __pow5mult
00159738 000000e8 T __lshift
00159820 0000005c T __mcmp
0015987c 00000168 T __mdiff
001599e4 00000078 T __ulp
00159a5c 000000d0 T __b2d
00159b2c 00000104 T __d2b
00159c30 00000084 T __ratio
00159cb4 00000088 T __copybits
00159d3c 00000078 T __any_on
00159db4 0000000c T nanf
00159dc0 0000009c T frexp
00159e5c 00000064 T siprintf
00159ec0 00000074 T siscanf
00159f34 000000c8 T sniprintf
00159ffc 000074a0 t get_arg
0016149c 00000188 T __ssprint_r
00161624 0000295c T _svfiprintf_r
00163f80 000000dc T _sungetc_r
0016405c 0000006c T __ssrefill_r
001640c8 000000c8 T _sfread_r
00164190 00001d84 T __ssvfiscanf_r
00165f14 000000a4 T __submore
00165fb8 00000170 T _wcsnrtombs_l
00166128 00000064 T _wcsnrtombs_r
0016618c 00000090 T _calloc_r
0016621c 0000000c T __env_lock
00166228 0000000c T __env_unlock
00166234 00000074 T iswspace
001662a8 000001e0 t __jp2uc
00166488 000000c4 T _jp2uc
0016654c 000000b4 T _mbrtowc_r
00166600 000004d0 T _realloc_r
00166ad0 000000cc T __sccl
00166b9c 00000274 t _strtoll_l.isra.0
00166e10 00000050 T _strtoll_r
00166e60 0000002c T _gettimeofday_r
00166e8c 00000070 T _sbrk_r
00166efc 00000024 T _exit
00166f20 00000018 T __libc_lock_acquire
00166f38 00000018 T __libc_lock_release
00166f50 00000018 T __libc_lock_acquire_recursive
00166f68 00000018 T __libc_lock_release_recursive
00166f80 00000028 T __getreent
00166fa8 T _fini
00166ff8 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
001671e0 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
001671ec 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
00167200 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
00167228 00000030 r ._184
00167260 00000058 r CTRPluginFramework::g_OSDPattern
001672b8 00000a00 r font
00167cb8 00000038 r CTRPluginFramework::stable
00167cf0 00000038 r CTRPluginFramework::ktable
00167d28 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
00167d44 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
00167d58 00000030 r ._184
00167da8 00000038 R vtable for CTRPluginFramework::Search32
00167de0 00000038 R vtable for CTRPluginFramework::Search
00167e18 00000005 r CSWTCH.47
00167e20 00000014 R vtable for CTRPluginFramework::ARCode
00167e34 0000002d r ._89
00167e64 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
00167ee4 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
00167ef0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
00167ef8 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
00167f00 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
00167f08 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
00167f24 00000004 R About15_array_length
00167f28 00000384 r About15_array
001682ac 00000004 R AddFavorite25_array_length
001682b0 000009c4 r AddFavorite25_array
00168c74 00000004 R AddFavoriteFilled25_array_length
00168c78 000009c4 r AddFavoriteFilled25_array
0016963c 00000004 R CapsLockOn15_array_length
00169640 00000384 r CapsLockOn15_array
001699c4 00000004 R CapsLockOnFilled15_array_length
001699c8 00000384 r CapsLockOnFilled15_array
00169d4c 00000004 R CheckedCheckbox_array_length
00169d50 00000384 r CheckedCheckbox_array
0016a0d4 00000004 R ClearSymbol15_array_length
0016a0d8 00000384 r ClearSymbol15_array
0016a45c 00000004 R ClearSymbolFilled15_array_length
0016a460 00000384 r ClearSymbolFilled15_array
0016a7e4 00000004 R Clipboard25_array_length
0016a7e8 000009c4 r Clipboard25_array
0016b1ac 00000004 R ClipboardFilled25_array_length
0016b1b0 000009c4 r ClipboardFilled25_array
0016bb74 00000004 R CloseWindow20_array_length
0016bb78 00000640 r CloseWindow20_array
0016c1b8 00000004 R CloseWindowFilled20_array_length
0016c1bc 00000640 r CloseWindowFilled20_array
0016c7fc 00000004 R Controller15_array_length
0016c800 00000384 r Controller15_array
0016cb84 00000004 R Cut25_array_length
0016cb88 000009c4 r Cut25_array
0016d54c 00000004 R CutFilled25_array_length
0016d550 000009c4 r CutFilled25_array
0016df14 00000004 R Duplicate25_array_length
0016df18 000009c4 r Duplicate25_array
0016e8dc 00000004 R DuplicateFilled25_array_length
0016e8e0 000009c4 r DuplicateFilled25_array
0016f2a4 00000004 R Edit25_array_length
0016f2a8 000009c4 r Edit25_array
0016fc6c 00000004 R EditFilled25_array_length
0016fc70 000009c4 r EditFilled25_array
00170634 00000004 R EnterKey15_array_length
00170638 00000384 r EnterKey15_array
001709bc 00000004 R EnterKeyFilled15_array_length
001709c0 00000384 r EnterKeyFilled15_array
00170d44 00000004 R File15_array_length
00170d48 00000384 r File15_array
001710cc 00000004 R FolderFilled_array_length
001710d0 00000384 r FolderFilled_array
00171454 00000004 R GameController15_array_length
00171458 00000384 r GameController15_array
001717dc 00000004 R GameController25_array_length
001717e0 000009c4 r GameController25_array
001721a4 00000004 R GameControllerFilled25_array_length
001721a8 000009c4 r GameControllerFilled25_array
00172b6c 00000004 R Grid15_array_length
00172b70 00000384 r Grid15_array
00172ef4 00000004 R HandCursor15_array_length
00172ef8 00000384 r HandCursor15_array
0017327c 00000004 R Info25_array_length
00173280 000009c4 r Info25_array
00173c44 00000004 R InfoFilled25_array_length
00173c48 000009c4 r InfoFilled25_array
0017460c 00000004 R Keyboard25_array_length
00174610 000009c4 r Keyboard25_array
00174fd4 00000004 R KeyboardFilled25_array_length
00174fd8 000009c4 r KeyboardFilled25_array
0017599c 00000004 R Maintenance15_array_length
001759a0 00000384 r Maintenance15_array
00175d24 00000004 R More15_array_length
00175d28 00000384 r More15_array
001760ac 00000004 R Plus25_array_length
001760b0 000009c4 r Plus25_array
00176a74 00000004 R PlusFilled25_array_length
00176a78 000009c4 r PlusFilled25_array
0017743c 00000004 R RAM15_array_length
00177440 00000384 r RAM15_array
001777c4 00000004 R Restart15_array_length
001777c8 00000384 r Restart15_array
00177b4c 00000004 R Rocket40_array_length
00177b50 00001900 r Rocket40_array
00179450 00000004 R Save25_array_length
00179454 000009c4 r Save25_array
00179e18 00000004 R Search15_array_length
00179e1c 00000384 r Search15_array
0017a1a0 00000004 R Settings15_array_length
0017a1a4 00000384 r Settings15_array
0017a528 00000004 R Shutdown15_array_length
0017a52c 00000384 r Shutdown15_array
0017a8b0 00000004 R Star15_array_length
0017a8b4 00000384 r Star15_array
0017ac38 00000004 R Trash25_array_length
0017ac3c 000009c4 r Trash25_array
0017b600 00000004 R TrashFilled25_array_length
0017b604 000009c4 r TrashFilled25_array
0017bfc8 00000004 R UnCheckedCheckbox_array_length
0017bfcc 00000384 r UnCheckedCheckbox_array
0017c350 00000004 R UserManualFilled15_array_length
0017c354 00000384 r UserManualFilled15_array
0017c6d8 0000001c R vtable for CTRPluginFramework::CheckBox
0017c6f4 0000001c R vtable for CTRPluginFramework::ComboBox
0017c710 0000001c R vtable for CTRPluginFramework::FloatingButton
0017c72c 0000001c R vtable for CTRPluginFramework::NumericTextBox
0017c748 0000001c R vtable for CTRPluginFramework::TextBox
0017c764 0000001c R vtable for CTRPluginFramework::TouchKey
0017c780 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
0017c7a0 00000280 r CTRPluginFramework::_cursorPositions
0017ca20 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0017ca28 00000048 r CTRPluginFramework::g_ctrpf
0017ca70 00000030 r CTRPluginFramework::g_byme
0017eb28 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
0017eb44 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
0017ecac 00000014 V vtable for CTRPluginFramework::MenuItem
0017ecc0 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017ecdc 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017ed4c 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
0017ed68 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
0017ed84 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
0017eda0 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0017fdc8 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0017fdec 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0017ff6c 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0017ff88 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0017ffa4 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0017fff0 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0017fffc 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
00180020 00000014 R vtable for __gnu_cxx::recursive_init_error
00180058 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00180060 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00180068 0000000c R typeinfo for std::bad_exception
00180074 00000008 R typeinfo for std::exception
0018007c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0018009c 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
001800c0 00000012 R typeinfo name for std::bad_exception
001800d4 0000000d R typeinfo name for std::exception
001800e4 00000014 R vtable for std::bad_exception
001800f8 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00180104 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0018012c 0000002c R vtable for __cxxabiv1::__si_class_type_info
00180158 00000008 R typeinfo for std::type_info
00180160 0000000d R typeinfo name for std::type_info
00180170 0000000c R typeinfo for __cxxabiv1::__class_type_info
0018017c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
001801a0 0000002c R vtable for __cxxabiv1::__class_type_info
001803b4 0000000c R typeinfo for std::bad_alloc
001803c0 0000000d R typeinfo name for std::bad_alloc
001803d0 00000014 R vtable for std::bad_alloc
001803e4 0000000c R typeinfo for std::logic_error
001803f0 0000000c R typeinfo for std::length_error
001803fc 0000000c R typeinfo for std::out_of_range
00180408 0000000c R typeinfo for std::invalid_argument
00180414 00000010 R typeinfo name for std::logic_error
00180424 00000011 R typeinfo name for std::length_error
00180438 00000011 R typeinfo name for std::out_of_range
0018044c 00000015 R typeinfo name for std::invalid_argument
00180464 00000014 R vtable for std::logic_error
00180478 00000014 R vtable for std::length_error
0018048c 00000014 R vtable for std::out_of_range
001804a0 00000014 R vtable for std::invalid_argument
001804c0 00000004 R _global_impure_ptr
00180508 00000060 R __month_lengths
001805f4 00000014 r fpi.7439
00180608 00000014 r fpinan.7475
00180620 00000028 r tinytens
0018068c 00000010 r blanks.8562
0018069c 00000010 r zeroes.8563
001806ac 000000fc R _C_time_locale
00180974 00000015 r day_name.6011
0018098c 00000024 r mon_name.6012
001809b0 00000101 R _ctype_
00180ac4 00000100 R __hexdig
00180bc8 00000028 R __mprec_bigtens
00180bf0 000000c8 R __mprec_tens
00180cb8 0000000c r p05.7353
00180cc4 0000006c R __action_table
00180d30 00000100 R __chclass
00180e30 0000006c R __state_table
00180e9c 00000010 r blanks.8541
00180eac 00000010 r zeroes.8542
00180ebc 00000022 r basefix.8096
00180ef4 000000bc r a1
00180fb0 000000bc r a2
0018106c 0000005b r a3
001810c8 00000070 r a6
00181138 000000a2 r a7
001811dc 00000040 r a8
0018121c 0000172a r b02cf
00182948 00001a7c r d02f4
00184630 R __exidx_start
00184850 R __exidx_end
00184850 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
00184854 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
00184858 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
0018485c 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
00184860 00000001 D CTRPluginFramework::g_keepRunning
00184864 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
00184868 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0018486c 00000001 D CTRPluginFramework::PrivColor::_format
00184870 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00184874 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00184878 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
00184879 00000001 D CTRPluginFramework::SystemImpl::_language
0018487c 00000004 D g_KProcessPIDOffset
00184880 00000004 D About15
00184884 00000004 D AddFavorite25
00184888 00000004 D AddFavoriteFilled25
0018488c 00000004 D CapsLockOn15
00184890 00000004 D CapsLockOnFilled15
00184894 00000004 D CheckedCheckbox
00184898 00000004 D ClearSymbol15
0018489c 00000004 D ClearSymbolFilled15
001848a0 00000004 D Clipboard25
001848a4 00000004 D ClipboardFilled25
001848a8 00000004 D CloseWindow20
001848ac 00000004 D CloseWindowFilled20
001848b0 00000004 D Controller15
001848b4 00000004 D Cut25
001848b8 00000004 D CutFilled25
001848bc 00000004 D Duplicate25
001848c0 00000004 D DuplicateFilled25
001848c4 00000004 D Edit25
001848c8 00000004 D EditFilled25
001848cc 00000004 D EnterKey15
001848d0 00000004 D EnterKeyFilled15
001848d4 00000004 D File15
001848d8 00000004 D FolderFilled
001848dc 00000004 D GameController15
001848e0 00000004 D GameController25
001848e4 00000004 D GameControllerFilled25
001848e8 00000004 D Grid15
001848ec 00000004 D HandCursor15
001848f0 00000004 D Info25
001848f4 00000004 D InfoFilled25
001848f8 00000004 D Keyboard25
001848fc 00000004 D KeyboardFilled25
00184900 00000004 D Maintenance15
00184904 00000004 D More15
00184908 00000004 D Plus25
0018490c 00000004 D PlusFilled25
00184910 00000004 D RAM15
00184914 00000004 D Restart15
00184918 00000004 D Rocket40
0018491c 00000004 D Save25
00184920 00000004 D Search15
00184924 00000004 D Settings15
00184928 00000004 D Shutdown15
0018492c 00000004 D Star15
00184930 00000004 D Trash25
00184934 00000004 D TrashFilled25
00184938 00000004 D UnCheckedCheckbox
0018493c 00000004 D UserManualFilled15
00184940 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
00184944 D __dso_handle
00184948 00000004 D __cxxabiv1::__unexpected_handler
0018494c 00000004 D __cxxabiv1::__terminate_handler
00184950 00000001 D __fdlib_version
00184954 00000004 D _impure_ptr
00184958 00000460 d impure_data
00184db8 0000016c D __global_locale
00184f24 00000408 D __malloc_av_
0018532c 00000004 D __malloc_sbrk_base
00185330 00000004 D __malloc_trim_threshold
00185334 0000000c d __malloc_lock_object
00185340 00000004 d __tz_lock_object
00185344 00000008 D _tzname
0018534c 0000000c D __atexit_lock
00185358 00000040 d tzinfo
00185398 00000004 D environ
0018539c 0000000c d __env_lock_object
001853a8 a _DYNAMIC
00185480 a _GLOBAL_OFFSET_TABLE_
00185498 t __frame_dummy_init_array_entry
00185498 T __init_array_start
00185498 B __preinit_array_end
00185498 B __preinit_array_start
00185498 D __tdata_lma
00185498 D __tdata_lma_end
00185498 D __TMC_END__
001854e4 t __do_global_dtors_aux_fini_array_entry
001854e4 T __fini_array_start
001854e4 T __init_array_end
001854e8 T __fini_array_end
001854e8 r __rel_dyn_start
0019bc90 B __c_bss_start
0019bc90 r __rel_dyn_end
0019bc90 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::ok
0019bc94 00000004 B CTRPluginFramework::offset
0019bc98 00000004 B CTRPluginFramework::g_FNsPointer
0019bc9c 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0019bca0 00000004 B CTRPluginFramework::g_itemPointer
0019bca4 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0019bca8 00000004 B CTRPluginFramework::data
0019bcac 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0019bcb0 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0019bcb4 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0019bcb8 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0019bcbc 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0019bcc0 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
0019bcc4 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
0019bcc8 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
0019bccc 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
0019bccd 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
0019bcce 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0019bccf 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019bcd0 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::item
0019bcd1 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::execute
0019bcd2 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0019bcd3 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0019bcd4 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0019bcd8 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0019bcdc 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0019bce0 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
0019bce4 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019bce5 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
0019bce6 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019bce8 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
0019bcec 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::execute
0019bcf0 00000004 B CTRPluginFramework::random
0019bcf4 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0019bcf6 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0019bcf8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019bcf9 00000001 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019bcfc 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0019bd00 00000004 B CTRPluginFramework::g_oldRacePointer5CC
0019bd04 00000004 B CTRPluginFramework::g_raceCondition
0019bd08 00000004 B CTRPluginFramework::g_racePointer
0019bd0c 00000004 B CTRPluginFramework::dataZ
0019bd10 00000004 B CTRPluginFramework::dataY
0019bd14 00000004 B CTRPluginFramework::dataX
0019bd18 00000050 B CTRPluginFramework::QuickMenu::_instance
0019bd68 00000008 B CTRPluginFramework::_sdmcArchive
0019bd70 00000004 B CTRPluginFramework::g_continueGameEvent
0019bd74 00000004 B __ctru_heap_size
0019bd78 00000004 B g_gspEventThreadPriority
0019bd7c 00000004 B CTRPluginFramework::g_keepEvent
0019bd80 00000004 B g_mainThread
0019bd84 00000004 b onLoadCroLock
0019bd88 00000038 b g_loadCroHook
0019bdc0 00000004 B croReturn
0019bdc4 00000004 B CTRPluginFramework::g_keepThreadHandle
0019bdc8 00000004 B CTRPluginFramework::g_resumeEvent
0019bdd0 00004000 b CTRPluginFramework::keepThreadStack
0019fdd0 00010000 b CTRPluginFramework::threadStack
001afdd0 00000004 B CTRPluginFramework::Color::Black
001afdd4 00000004 B CTRPluginFramework::Color::Blank
001afdd8 00000004 B CTRPluginFramework::Color::Blue
001afddc 00000004 B CTRPluginFramework::Color::BlackGrey
001afde0 00000004 B CTRPluginFramework::Color::Brown
001afde4 00000004 B CTRPluginFramework::Color::Cyan
001afde8 00000004 B CTRPluginFramework::Color::DarkGrey
001afdec 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001afdf0 00000004 B CTRPluginFramework::Color::DimGrey
001afdf4 00000004 B CTRPluginFramework::Color::DodgerBlue
001afdf8 00000004 B CTRPluginFramework::Color::Gainsboro
001afdfc 00000004 B CTRPluginFramework::Color::ForestGreen
001afe00 00000004 B CTRPluginFramework::Color::Green
001afe04 00000004 B CTRPluginFramework::Color::Grey
001afe08 00000004 B CTRPluginFramework::Color::LimeGreen
001afe0c 00000004 B CTRPluginFramework::Color::Magenta
001afe10 00000004 B CTRPluginFramework::Color::Orange
001afe14 00000004 B CTRPluginFramework::Color::Red
001afe18 00000004 B CTRPluginFramework::Color::Silver
001afe1c 00000004 B CTRPluginFramework::Color::SkyBlue
001afe20 00000004 B CTRPluginFramework::Color::Turquoise
001afe24 00000004 B CTRPluginFramework::Color::Yellow
001afe28 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001afe30 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001afe38 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001afe40 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001afe44 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001afe48 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001afe4c 00000180 b CTRPluginFramework::g_keyName
001affcc 00000004 b CTRPluginFramework::g_runningInstance
001affd0 00000004 B CTRPluginFramework::Controller::_keysDown
001affd4 00000004 B CTRPluginFramework::Controller::_keysHeld
001affd8 00000004 B CTRPluginFramework::Controller::_keysReleased
001affdc 00000018 b CTRPluginFramework::_workingDirectory
001afff4 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001b1ff8 00000004 B CTRPluginFramework::System::OnAbort
001b2000 00000008 B CTRPluginFramework::Time::Zero
001b2008 000009c4 b CTRPluginFramework::g_rng
001b29d0 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001b29d1 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001b29d2 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001b29d3 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001b29d4 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001b29d5 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001b29d6 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001b29d7 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001b29d8 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001b29d9 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001b29da 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001b29dc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001b29e0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001b29e8 00000078 B CTRPluginFramework::Preferences::Settings
001b2a60 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001b2a61 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001b2a62 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001b2a64 00000004 b CTRPluginFramework::defaultSysFont
001b2a68 00000004 B CTRPluginFramework::g_fontAllocated
001b2a6c 00000004 b CTRPluginFramework::tileData
001b2a70 00000004 b CTRPluginFramework::glyph
001b2a74 00000004 B CTRPluginFramework::g_glyphAllocated
001b2a78 0000000c B CTRPluginFramework::OSDImpl::RecLock
001b2a84 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001b2a90 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001b2aa8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001b2ac0 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001b2af8 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001b2afc 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001b2b04 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001b2b28 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001b2b34 00000004 b CTRPluginFramework::g_second
001b2b38 00000010 b CTRPluginFramework::g_fpsClock
001b2b48 00000038 B CTRPluginFramework::OSDHook2
001b2b80 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001b2b84 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001b2b85 00000001 B CTRPluginFramework::OSDImpl::MessColors
001b2b88 00000001 B CTRPluginFramework::PrivColor::_useClamp
001b2b8c 00000010 B CTRPluginFramework::PrivColor::_clampArea
001b2b9c 00000001 B CTRPluginFramework::Renderer::_target
001b2ba0 00000004 B CTRPluginFramework::Renderer::_screen
001b2ba4 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001b2ba8 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001b2bac 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001b2bb0 00000028 B CTRPluginFramework::Window::BottomWindow
001b2bd8 00000028 B CTRPluginFramework::Window::TopWindow
001b2c00 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b2c10 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b2c20 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b2c24 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b2c28 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b2c2c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b2c3c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b2c40 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b2c50 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b2c54 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b2c64 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b2c68 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b2c70 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b2c78 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b2c80 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b2c88 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b2c90 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001b2c94 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001b2ca0 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001b2cac 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001b2cb8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2cc0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2cc8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b2ccc 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b2cdc 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001b2ce0 00000004 b CTRPluginFramework::__pmARinstance
001b2ce4 00000004 b CTRPluginFramework::g_radioId
001b2ce8 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001b2cec 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001b2cf0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001b2cf8 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001b2cfc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001b2d00 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b2d08 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b2d28 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b2d38 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b2d48 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b2d4c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b2d50 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b2d58 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b2d60 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001b2d68 00000004 b CTRPluginFramework::g_mode
001b2d6c 00000004 b CTRPluginFramework::g_HookMode
001b2d70 00000004 B CTRPluginFramework::g_index
001b2d74 00000004 B CTRPluginFramework::g_OpenFileLock
001b2d78 00000004 B CTRPluginFramework::g_filenames
001b2d7c 00000004 b CTRPluginFramework::g_buffer2
001b2d80 00000030 b CTRPluginFramework::g_hookExportFile
001b2db0 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001b2de8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001b2dec 00000004 b CTRPluginFramework::g_buffer
001b2df0 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001b2df4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b2df8 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b2e00 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b2e08 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b2e10 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b2e18 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b2e20 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001b2e24 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001b2e34 00000004 B CTRPluginFramework::_pool
001b2e38 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001b2e3a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001b2e40 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001b2e44 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001b2e48 00000008 b CTRPluginFramework::Heap::g_heapPool
001b2e50 0000000c b sAddrMap
001b2e60 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001b2e64 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001b2ec8 00000004 B CTRPluginFramework::ProcessImpl::_processID
001b2ecc 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001b2ed0 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001b2ed4 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001b2ed8 00000008 B CTRPluginFramework::ProcessImpl::_processName
001b2ee0 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001b2ee8 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001b2eec 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001b2ef0 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001b2efc 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001b2f00 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001b2f04 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001b2f08 00000038 b CTRPluginFramework::_topBuf
001b2f40 00000004 B CTRPluginFramework::ScreenImpl::Top
001b2f44 00000038 b CTRPluginFramework::_botBuf
001b2f7c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001b2f80 00000001 B CTRPluginFramework::SystemImpl::_isInit
001b2f81 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001b2f84 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001b2f88 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001b2f8c 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001b2f90 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001b2f94 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001b2f98 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001b2f9c 0000000c B CTRPluginFramework::g_codeTypes
001b2fa8 00000001 b CTRPluginFramework::g_condAgainstData
001b2fa9 00000001 b CTRPluginFramework::g_newCondDataToggle
001b2fac 00000004 b CTRPluginFramework::__arCodeEditor
001b2fb0 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b2fb4 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b2fc0 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001b2fc4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b2fc8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b2fd4 00000001 B CTRPluginFramework::g_heapError
001b2fd8 00000004 b cfguRefCount
001b2fdc 00000004 b cfguHandle
001b2fe0 00000004 b sharedFontAddr
001b2fe4 00000004 b srvRefCount
001b2fe8 00000004 b srv2Handle
001b2fec 00000004 b arbiter
001b2ff0 00000004 b acRefCount
001b2ff4 00000004 b acHandle
001b2ff8 00000004 b amRefCount
001b2ffc 00000004 b amHandle
001b3000 0000000c b aptFirstHook
001b300c 00000004 b aptLockHandle
001b3010 00000004 b serviceName.7503
001b3014 00000004 b aptMessageFunc
001b3018 00000004 b aptMessageFuncData
001b301c 0000000c b aptEvents
001b3028 00000001 b aptHomeButtonState
001b302c 00000004 b aptRefCount
001b3030 00000008 b aptSleepEvent
001b3038 00000004 b aptEventHandlerThread
001b303c 00000001 b flagInit.7855
001b303d 00000001 b flagValue.7856
001b3040 00001000 b aptParameters
001b4040 00000004 b fsuHandle
001b4048 00000080 b fsExemptArchives
001b40c8 00000004 b fsuRefCount
001b40cc 00000001 B fs
001b40d0 00000004 b gspEventData
001b40d4 00000038 b gspEvents
001b410c 0000001c b gspEventCounts
001b4128 00000001 b gspRunEvents
001b412c 00000004 b gspRefCount
001b4130 00000004 b gfxSharedMemory
001b4134 00000001 b gfxThreadID
001b4135 00001000 b gspThreadEventStack
001b5138 00000004 b hidRefCount
001b513c 00000004 b kOld
001b5140 00000004 b kHeld
001b5144 00000004 b cPos
001b5148 00000004 b tPos
001b514c 00000006 b aVec
001b5152 00000006 b gRate
001b5158 00000004 b kDown
001b515c 00000004 b kUp
001b5160 00000004 b irrstRefCount
001b5164 00000004 b kHeld
001b5168 00000004 b csPos
001b516c 00000004 B _tls_size
001b5170 b saved_stack
001b5178 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b517c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b5194 00000004 b CTRPluginFramework::__converter
001b5198 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001b519c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001b51b0 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b51b8 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b51c0 00000004 B CTRPluginFramework::__g_hexEditor
001b51c4 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b51c8 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b51d8 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001b51e0 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001b51e4 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b51e8 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b51f0 00000004 b CTRPluginFramework::g_ctrpfString
001b51f4 00000004 b CTRPluginFramework::g_bymeString
001b51f8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b5200 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b5208 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b5210 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b5218 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001b521c 00000004 B CTRPluginFramework::ARHandler::ActiveData
001b5220 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001b5224 00000008 B CTRPluginFramework::ARHandler::Offset
001b522c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001b5230 00000010 B CTRPluginFramework::ARHandler::Data
001b5240 00000008 B CTRPluginFramework::ARHandler::Storage
001b5248 00000001 b CTRPluginFramework::ToggleFloat
001b524c 00000008 b sMappablePool
001b5254 0000000c b sAddrMap
001b5260 b completed.7759
001b5264 b object.7764
001b527c 0000000c b eh_globals
001b5288 00000010 b (anonymous namespace)::emergency_pool
001b5298 00000010 V std::string::_Rep::_S_empty_rep_storage
001b52a8 00000004 b (anonymous namespace)::__new_handler
001b52ac 00000028 B __malloc_current_mallinfo
001b52d4 00000004 B __malloc_max_sbrked_mem
001b52d8 00000004 B __malloc_max_total_mem
001b52dc 00000004 B __malloc_top_pad
001b52e0 0000000b b __tzname_dst
001b52ec 0000000b b __tzname_std
001b52f8 00000004 b prev_tzenv
001b52fc 00000004 B _daylight
001b5300 00000004 B _timezone
001b5304 00000004 b initial_env
001b5308 00000004 b heap_start.7089
001b530c 00000004 B fake_heap_end
001b5310 00000004 B fake_heap_start
001b5314 00000038 B __syscalls
001b534c 00000004 B g_KProcessHandleDataOffset
001b5350 00000080 B g_kernelParams
001b53d0 00000004 B g_sharedFont
001b53d4 00000004 B charPerSheet
001b53d8 00000004 B gspEvent
001b53dc 00000004 B gspGpuHandle
001b53e0 00000004 B gspSharedMemHandle
001b53e4 00000004 B gspThreadEventHandle
001b53e8 00000004 B hidMemHandle
001b53ec 00000004 B hidHandle
001b53f0 00000014 B hidEvents
001b5404 00000004 B hidSharedMem
001b5408 00000004 B irrstMemHandle
001b540c 00000004 B irrstEvent
001b5410 00000004 B irrstHandle
001b5414 00000004 B irrstSharedMem
001b5418 00000004 B __ctru_linear_heap
001b541c 00000004 B __tmp
001b5420 00000004 B __ctru_linear_heap_size
001b5424 00000004 B __system_retAddr
001b5428 00000004 B __ctru_heap
001b542c B __c_bss_end
001b542c A __end__
001b542c B __tls_end
001b542c B __tls_start
