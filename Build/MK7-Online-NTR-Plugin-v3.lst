00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000124 t ClearMem
07000138 t ClrLoop
07000150 T _init
07000168 T initLib
07000188 T __ctru_exit
07000194 t .udivsi3_skip_div0_test
07000194 T __aeabi_uidiv
07000194 000001ec T __udivsi3
07000380 00000020 T __aeabi_uidivmod
070003a0 T __aeabi_idiv
070003a0 00000220 T __divsi3
070003a8 t .divsi3_skip_div0_test
070005c0 00000020 T __aeabi_idivmod
070005e0 00000004 W __aeabi_idiv0
070005e0 00000004 W __aeabi_ldiv0
070005e4 T __aeabi_drsub
070005ec 000002b0 T __aeabi_dsub
070005ec 000002b0 T __subdf3
070005f0 000002ac T __adddf3
070005f0 000002ac T __aeabi_dadd
0700089c 00000024 T __aeabi_ui2d
0700089c 00000024 T __floatunsidf
070008c0 00000028 T __aeabi_i2d
070008c0 00000028 T __floatsidf
070008e8 00000048 T __aeabi_f2d
070008e8 00000048 T __extendsfdf2
07000930 00000074 T __aeabi_ul2d
07000930 00000074 T __floatundidf
07000944 00000060 T __aeabi_l2d
07000944 00000060 T __floatdidf
070009a4 0000019c T __aeabi_frsub
070009ac 00000194 T __aeabi_fsub
070009ac 00000194 T __subsf3
070009b0 00000190 T __addsf3
070009b0 00000190 T __aeabi_fadd
07000b40 00000028 T __aeabi_ui2f
07000b40 00000028 T __floatunsisf
07000b48 00000020 T __aeabi_i2f
07000b48 00000020 T __floatsisf
07000b68 0000008c T __aeabi_ul2f
07000b68 0000008c T __floatundisf
07000b78 0000007c T __aeabi_l2f
07000b78 0000007c T __floatdisf
07000bf4 T __aeabi_ldivmod
07000cc8 00000014 T __restore_core_regs
07000cc8 00000014 T restore_core_regs
07000cdc T __gnu_Unwind_Restore_VFP
07000ce4 T __gnu_Unwind_Save_VFP
07000cec T __gnu_Unwind_Restore_VFP_D
07000cf4 T __gnu_Unwind_Save_VFP_D
07000cfc T __gnu_Unwind_Restore_VFP_D_16_to_31
07000d04 T __gnu_Unwind_Save_VFP_D_16_to_31
07000d0c T __gnu_Unwind_Restore_WMMXD
07000d50 T __gnu_Unwind_Save_WMMXD
07000d94 T __gnu_Unwind_Restore_WMMXC
07000da8 T __gnu_Unwind_Save_WMMXC
07000dbc 00000024 T ___Unwind_RaiseException
07000dbc 00000024 T _Unwind_RaiseException
07000de0 00000024 T ___Unwind_Resume
07000de0 00000024 T _Unwind_Resume
07000e04 00000024 T ___Unwind_Resume_or_Rethrow
07000e04 00000024 T _Unwind_Resume_or_Rethrow
07000e28 00000024 T ___Unwind_ForcedUnwind
07000e28 00000024 T _Unwind_ForcedUnwind
07000e4c 00000024 T ___Unwind_Backtrace
07000e4c 00000024 T _Unwind_Backtrace
07000e88 00000390 T strcmp
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 00000140 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
07001468 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
070014c4 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001504 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001544 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001584 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
070015c0 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
070015fc 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07001664 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001664 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001684 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
07001684 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
070016c0 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016c0 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016e0 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07001744 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
07001804 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
07001860 0000001c t CTRPluginFramework::GetItemPointer() [clone .part.0]
07001860 0000001c t CTRPluginFramework::GetOldPointer5CC() [clone .part.0]
07001860 0000001c t CTRPluginFramework::GetOldPointer5D0() [clone .part.0]
0700187c 0000006c t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.0]
0700187c 0000006c t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.0]
070018e8 00000024 t __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned int, void const*) [clone .isra.0]
0700190c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700190c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700192c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070019b4 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07001a60 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
07001ac4 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001ac4 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001b00 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001b3c 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07001b78 00000024 W CTRPluginFramework::File::~File()
07001b78 00000024 W CTRPluginFramework::File::~File()
07001b9c 00000084 T CTRPluginFramework::IsInRace()
07001c20 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001c88 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001cdc 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001d50 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001e14 00000110 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001f24 000000bc T CTRPluginFramework::GetRacePointer()
07001fe0 0000002c T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
0700200c 0000002c T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07002038 00000028 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07002060 0000002c T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
0700208c 0000001c t CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*) [clone .part.0]
0700208c 0000001c t CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*) [clone .part.0]
070020a8 00000018 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
070020c0 00000018 T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
070020d8 00000038 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07002110 000000b0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
070021c0 000000dc T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
0700229c 00000254 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
070024f0 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
07002670 00000070 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
070026e0 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07002810 00000098 T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
070028a8 000000a0 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002948 00000048 T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002990 00000050 T CTRPluginFramework::GetFNsPointer()
070029e0 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002a48 00000064 T CTRPluginFramework::GetOldPointer5CC()
07002aac 00000030 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002adc 00000060 T CTRPluginFramework::GetOldPointer5D0()
07002b3c 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002b84 0000008c T CTRPluginFramework::GetItemPointer()
07002c10 000001a4 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002db4 000000b8 T CTRPluginFramework::GetTotalPlayers()
07002e6c 000001f0 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
0700305c 000001ec T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07003248 00000060 T CTRPluginFramework::GetTime()
070032a8 0000002c T CTRPluginFramework::GetMinutes()
070032d4 0000001c T CTRPluginFramework::GetSeconds()
070032f0 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
070033a8 00000074 T CTRPluginFramework::SubToTime(unsigned short)
0700341c 0000042c T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
07003848 00000058 T CTRPluginFramework::writeItem(unsigned long)
070038a0 000000c8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003968 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07003998 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003a7c 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003abc 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003afc 00000254 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003d50 00000254 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003fa4 00000048 T CTRPluginFramework::writeVR(unsigned long)
07003fec 000000ac T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07004098 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
070040b4 00000060 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07004114 0000004c T CTRPluginFramework::writeLocation(unsigned long)
07004160 00000060 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
070041c0 00000070 T CTRPluginFramework::writeFlag(unsigned short)
07004230 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
07004324 000016c8 T CTRPluginFramework::main()
070059ec 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005acc 000001f4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07005cc0 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07005cc4 00000004 T CTRPluginFramework::OnProcessExit()
07005cc8 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
07005d2c 000000b4 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005de0 000001a8 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005f88 00000228 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
070061b0 00000518 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
070066c8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070066c8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070066e0 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070066e0 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070066ec 00000008 T CTRPluginFramework::Color::ToU32() const
070066f4 00000110 T CTRPluginFramework::Color::Fade(float)
07006804 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07006844 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
070068c0 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07006ad4 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07006bf4 00000048 T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006c3c 000000e4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07006d20 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
07006d98 000000e4 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
07006e7c 00000094 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07006f10 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006fd4 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
0700707c 00000094 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007110 00000094 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070071a4 00000094 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007238 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007238 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007280 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007280 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070072ec 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
070072ec 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007318 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07007320 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0700733c 00000028 T CTRPluginFramework::Keyboard::Open() const
07007364 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07007428 0000010c T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07007534 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
070075f8 0000010c T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07007704 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070077c8 0000010c T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070078d4 00000094 T CTRPluginFramework::Keyboard::Open(float&) const
07007968 000000cc T CTRPluginFramework::Keyboard::Open(float&, float) const
07007a34 00000070 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07007aa4 00000084 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007b28 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07007b30 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07007b38 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007b40 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b40 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b8c 00000054 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b8c 00000054 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007be0 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07007be0 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07007c10 00000010 T CTRPluginFramework::MenuEntry::Disable() const
07007c20 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07007c28 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
07007c30 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07007c38 00000028 t __tcf_0
07007c60 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07007cd8 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07007ce0 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07007d60 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07007ddc 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07007eb4 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007eb4 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007ed0 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07007ed0 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07007f10 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07007f20 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07007fe0 00000020 T CTRPluginFramework::HotkeyManager::Count()
07008000 00000178 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008178 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
070082ac 00000124 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
070083d0 00000044 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070083d0 00000044 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008414 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07008414 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0700843c 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
0700844c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700844c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700847c 0000001c W CTRPluginFramework::TextBox::~TextBox()
07008498 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07008498 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070084e4 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070084e4 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07008528 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07008528 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07008564 00000008 T CTRPluginFramework::MessageBox::operator()() const
0700856c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0700856c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070085e0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070085e0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700860c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07008620 00000044 T CTRPluginFramework::PluginMenu::Run() const
07008664 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700866c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700867c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07008688 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700869c 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
070086b8 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
070086d4 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
070086f0 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700870c 00000034 T CTRPluginFramework::Controller::IsKeysPressed(unsigned long)
07008740 0000002c T CTRPluginFramework::Controller::Update()
0700876c 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
070087e4 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07008828 0000004c T CTRPluginFramework::Directory::Close() const
07008874 000000e8 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
0700895c 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07008970 00000008 T CTRPluginFramework::Directory::IsOpen() const
07008978 00000040 T CTRPluginFramework::Directory::Directory()
07008978 00000040 T CTRPluginFramework::Directory::Directory()
070089b8 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
070089ec 00000060 T CTRPluginFramework::Directory::~Directory()
070089ec 00000060 T CTRPluginFramework::Directory::~Directory()
07008a4c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008a4c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008a6c 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008b04 000000a0 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008ba4 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008c44 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008d18 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008dac 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008ef8 0000005c T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008ef8 0000005c T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008f54 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008f90 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07008f90 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07008fac 00000178 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07009124 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
07009140 0000012c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.0]
0700926c 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.0]
070092e8 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.0]
07009350 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.0]
070093fc 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
07009480 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
070094c4 000001d8 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700969c 000001c8 T CTRPluginFramework::Directory::_List() const
07009864 000000dc T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009940 000000e0 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009a20 00000074 T CTRPluginFramework::File::Close() const
07009a94 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
07009b4c 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
07009c3c 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07009c68 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07009d4c 00000008 T CTRPluginFramework::File::Tell() const
07009d54 00000030 T CTRPluginFramework::File::Rewind() const
07009d84 00000034 T CTRPluginFramework::File::Flush() const
07009db8 0000006c T CTRPluginFramework::File::GetSize() const
07009e24 000000dc T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
07009f00 00000008 T CTRPluginFramework::File::IsOpen() const
07009f08 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07009f1c 00000044 T CTRPluginFramework::File::File()
07009f1c 00000044 T CTRPluginFramework::File::File()
07009f60 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009ff4 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a0c8 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a14c 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a1ec 00000114 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700a300 00000060 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a300 00000060 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a360 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a360 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a384 0000004c T CTRPluginFramework::Lock::~Lock()
0700a384 0000004c T CTRPluginFramework::Lock::~Lock()
0700a3d0 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a3d0 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a3e4 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a3e4 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a40c 00000004 T CTRPluginFramework::Mutex::Lock()
0700a410 00000004 T CTRPluginFramework::Mutex::Unlock()
0700a414 00000010 T CTRPluginFramework::Process::GetHandle()
0700a424 00000010 T CTRPluginFramework::Process::GetTitleID()
0700a434 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a494 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a4cc 00000024 T CTRPluginFramework::Process::GetTextSize()
0700a4f0 00000008 T CTRPluginFramework::Process::Pause()
0700a4f8 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700a508 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700a5b0 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700a5b4 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700a600 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700a61c 0000001c T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700a638 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700a654 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0700a678 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a698 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a6b8 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a6d8 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0700a6f8 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
0700a864 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700a8dc 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a938 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700a994 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700a9f0 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700aa34 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700aab4 000000b8 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ab6c 00000144 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700acb0 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700ace8 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700ad04 00000258 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700af5c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700af5c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700afa0 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b6e0 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b6e8 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b72c 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0700b82c 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700b938 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700b9a0 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700b9bc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700ba34 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0700ba60 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700bb68 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700bd34 00000200 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0700bf34 00000094 T CTRPluginFramework::Preferences::LoadSettings()
0700bfc8 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700c084 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700c140 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700c19c 0000009c T CTRPluginFramework::Preferences::LoadBackgrounds()
0700c238 00000170 T CTRPluginFramework::Preferences::WriteSettings()
0700c3a8 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0700c408 00000004 T CTRPluginFramework::Preferences::Initialize()
0700c40c 00000108 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700c514 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700c58c 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0700c5b0 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0700c5d4 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
0700c5d4 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
0700c60c 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0700c614 00000008 T CTRPluginFramework::BMPImage::Width() const
0700c61c 00000008 T CTRPluginFramework::BMPImage::Height() const
0700c624 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0700c62c 00000010 T CTRPluginFramework::BMPImage::data() const
0700c63c 0000001c T CTRPluginFramework::BMPImage::end() const
0700c658 00000028 W CTRPluginFramework::BMPImage::DataClear()
0700c680 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0700c680 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0700c70c 00000034 T CTRPluginFramework::BMPImage::Unload()
0700c740 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700c91c 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700c964 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0700c994 00000124 T CTRPluginFramework::BMPImage::OptimiseForRendering()
0700cab8 000000c8 T CTRPluginFramework::BMPImage::Draw(int, int)
0700cb80 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700cb88 000000f0 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700cc78 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700cd4c 00000070 T CTRPluginFramework::BMPImage::_CreateBitmap()
0700cdbc 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0700cde0 00000120 T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700cf00 00000058 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700cf00 00000058 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700cf58 0000002c W unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)
0700cf84 00000324 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700d2a8 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700d2a8 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700d2f4 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700d2f4 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700d46c 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700d46c 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700d5c4 00000074 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0700d638 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
0700d8ec 000001ac T CTRPluginFramework::MessageBoxImpl::operator()()
0700da98 00000020 t __tcf_0
0700dab8 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
0700db4c 00000064 W CTRPluginFramework::Task::~Task()
0700db4c 00000064 W CTRPluginFramework::Task::~Task()
0700dbb0 00000020 W std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~vector()
0700dbb0 00000020 W std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~vector()
0700dbd0 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0700dbd0 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0700dbf0 0000005c t CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}::operator()(CTRPluginFramework::OSDImpl::OSDMessage*) const [clone .isra.0]
0700dc4c 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0700dc7c 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
0700dd2c 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700dd2c 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700ddb4 0000000c T CTRPluginFramework::OSDImpl::Lock()
0700ddc0 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0700dddc 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0700dde8 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0700dec0 0000015c T CTRPluginFramework::OSDImpl::WaitFramePaused()
0700e01c 00000064 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0700e080 000000d0 T CTRPluginFramework::InstallOSD()
0700e150 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
0700e198 00000008 W __gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > std::next<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, std::iterator_traits<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >::difference_type)
0700e1a0 00000190 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0700e330 000001b4 T CTRPluginFramework::OSDImpl::Update()
0700e4e4 000000c8 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0700e5ac 000000e0 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0700e68c 000003d8 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int)
0700ea64 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0700eaf0 00000090 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0700eb80 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700eba4 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700ebc0 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700ebec 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700ec1c 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700ec44 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700ec6c 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700ec8c 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700ecbc 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700ed04 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700ed48 00000138 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700ee80 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
0700eeac 00000064 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700ef10 0000003c t __tls_init
0700ef10 0000003c T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700ef4c 00000040 T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700ef8c 00000098 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f024 00000090 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f0b4 000000ac T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f160 000000b8 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f218 000000b4 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f2cc 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700f318 00000300 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700f618 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700f6d8 0000012c T CTRPluginFramework::Renderer::EndFrame(bool)
0700f804 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0700f970 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700f970 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700f990 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0700fb34 00000118 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0700fc4c 00000090 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0700fcdc 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0700fd84 000002b0 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010034 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07010034 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07010078 0000004c W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
070100c4 000001b8 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0701027c 000000fc W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07010378 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
070103b8 0000067c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07010a34 000001a4 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010bd8 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07010c5c 00000188 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07010de4 00000194 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010f78 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07011018 000001f8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07011210 00000034 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07011244 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
07011374 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
07011440 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0701158c 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
070116d0 0000005c T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0701172c 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
070118cc 00000208 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
07011ad4 00000274 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
07011d48 00000064 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07011dac 00000060 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
07011e0c 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
07011e20 00000008 W CTRPluginFramework::Drawable::operator()()
07011e28 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07011e2c 000002f0 T CTRPluginFramework::TextBox::Draw()
0701211c 00000030 t std::enable_if<std::__is_bitwise_relocatable<unsigned char*, void>::value, unsigned char**>::type std::__relocate_a_1<unsigned char*, unsigned char*>(unsigned char**, unsigned char**, unsigned char**, std::allocator<unsigned char*>&) [clone .isra.0]
0701214c 00000094 T CTRPluginFramework::TextBox::TextBox()
0701214c 00000094 T CTRPluginFramework::TextBox::TextBox()
070121e0 0000000c T CTRPluginFramework::TextBox::Open() const
070121ec 0000000c T CTRPluginFramework::TextBox::Close() const
070121f8 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07012200 00000244 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07012444 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07012450 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
070124e8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0701259c 00000054 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
070125f0 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
070126ac 00000260 T CTRPluginFramework::TextBox::_GetTextInfos()
0701290c 00000134 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0701290c 00000134 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07012a40 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012b28 00000028 T CTRPluginFramework::Window::~Window()
07012b28 00000028 T CTRPluginFramework::Window::~Window()
07012b50 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07012b50 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07012bf0 00000064 T CTRPluginFramework::Window::Draw() const
07012c54 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07012d2c 00000018 T CTRPluginFramework::Window::DrawButton() const
07012d44 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07012d5c 00000018 T CTRPluginFramework::Window::MustClose() const
07012d74 00000028 T CTRPluginFramework::Window::Close() const
07012d9c 00000004 T CTRPluginFramework::Window::GetRect() const
07012da0 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
07012dcc 000000a0 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07012e6c 00000224 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07013090 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
070130bc 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070130f8 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07013134 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07013170 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
070131ac 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
070131e8 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
07013214 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07013250 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701328c 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
070132c8 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
07013304 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07013330 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701336c 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07013398 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
070133c4 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
070133f0 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0701342c 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07013458 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07013494 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070134c0 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
070134f4 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
07013530 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0701355c 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07013598 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070135c4 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
070135f0 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0701361c 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07013648 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07013674 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
070136a0 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070136cc 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070136f8 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07013734 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07013760 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0701377c 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
070137b0 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
070137b0 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
070137b4 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
070137b8 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
070137bc 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070137bc 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070137c0 00000004 W CTRPluginFramework::HexEditor::FloatView::~FloatView()
070137c0 00000004 W CTRPluginFramework::HexEditor::FloatView::~FloatView()
070137c4 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070137c4 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070137c8 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070137c8 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070137cc 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070137e0 00000014 W CTRPluginFramework::HexEditor::FloatView::~FloatView()
070137f4 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07013808 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701381c 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
070139b8 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07013aac 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07013be8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07013c60 00000254 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07013eb4 0000027c T CTRPluginFramework::HexEditor::ByteView::UpdateView()
07014130 0000020c T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701433c 00000200 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701453c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07014558 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
07014614 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07014630 00000078 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
070146a8 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
070146d8 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07014714 00000010 T CTRPluginFramework::HexEditor::Refresh()
07014724 00000048 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701476c 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
070147a4 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
070147d4 00000088 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701485c 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
070148f4 000000d0 T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
070149c4 000000c4 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07014a88 000000b4 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07014b3c 000001b8 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07014cf4 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07014d04 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07014d14 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07014d24 00000020 T CTRPluginFramework::HexEditor::ByteView::ByteView(CTRPluginFramework::HexEditor::Context&)
07014d24 00000020 T CTRPluginFramework::HexEditor::ByteView::ByteView(CTRPluginFramework::HexEditor::Context&)
07014d44 00000020 T CTRPluginFramework::HexEditor::IntegerView::IntegerView(CTRPluginFramework::HexEditor::Context&)
07014d44 00000020 T CTRPluginFramework::HexEditor::IntegerView::IntegerView(CTRPluginFramework::HexEditor::Context&)
07014d64 00000020 T CTRPluginFramework::HexEditor::AsmView::AsmView(CTRPluginFramework::HexEditor::Context&)
07014d64 00000020 T CTRPluginFramework::HexEditor::AsmView::AsmView(CTRPluginFramework::HexEditor::Context&)
07014d84 0000024c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07014d84 0000024c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07014fd0 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
07015010 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
070151d8 000000e4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
070152bc 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
070152f0 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07015348 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701542c 00000178 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070155a4 00000188 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701572c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
07015758 000000c4 T CTRPluginFramework::HexEditor::~HexEditor()
07015758 000000c4 T CTRPluginFramework::HexEditor::~HexEditor()
0701581c 0000007c T CTRPluginFramework::HexEditor::SetView(unsigned long)
07015898 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701596c 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
070159e0 00000178 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07015b58 000001d8 T CTRPluginFramework::HexEditor::_Update()
07015d30 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07015fd0 00000030 t CTRPluginFramework::GetIndex(int)
07016000 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07016090 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070161ac 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
07016220 00000150 T CTRPluginFramework::HotkeysModifier::operator()()
07016370 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701639c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701639c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070163cc 00000064 W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070163cc 00000064 W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07016430 0000016c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
0701659c 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
070165d8 00000150 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070165d8 00000150 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016728 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016728 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016770 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
070167bc 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
070167c8 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
070167f4 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
07016850 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070168d8 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07016938 0000005c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016938 0000005c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016994 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016994 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016b50 000001cc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016b50 000001cc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016d1c 00000074 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07016d1c 00000074 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07016d90 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07016d98 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
07016da0 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07016da8 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07016db0 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07016db8 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
07016dc0 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07016e1c 0000016c T CTRPluginFramework::KeyboardImpl::_RenderTop()
07016f88 0000046c T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070173f4 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701745c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070174ec 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701756c 00000088 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
070175f4 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07017754 00000290 T CTRPluginFramework::KeyboardImpl::_Update(float)
070179e4 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07017f50 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07017fb0 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07018000 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07018070 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07018078 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
070180a8 000000e4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0701818c 00000034 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::emplace_back<CTRPluginFramework::TouchKeyString*>(CTRPluginFramework::TouchKeyString*&&)
070181c0 000001c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07018380 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
070183e4 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07018410 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07018410 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07018430 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
070184fc 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
070185b8 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701867c 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07018be8 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07019158 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
07019210 00000a98 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07019ca8 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07019d60 00000ca0 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0701aa00 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0701aa44 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0701ab00 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0701acc4 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
0701ad14 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0701ad7c 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0701adc8 0000032c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0701b0f4 00000254 T CTRPluginFramework::KeyboardImpl::Run()
0701b348 00000070 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0701b3b8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0701b430 000000d8 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701b430 000000d8 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701b508 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701b508 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701b620 00000040 T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701b660 00000058 T CTRPluginFramework::Menu::CloseAll()
0701b6b8 00000030 T CTRPluginFramework::Menu::~Menu()
0701b6b8 00000030 T CTRPluginFramework::Menu::~Menu()
0701b6e8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701b6f4 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701b6fc 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701b704 00000048 T CTRPluginFramework::Menu::GetSelectedItem()
0701b74c 00000378 T CTRPluginFramework::Menu::Draw() const
0701bac4 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
0701bb50 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
0701bbdc 00000214 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701bdf0 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701bf64 00000068 T CTRPluginFramework::Menu::ShowNote()
0701bfcc 00000008 T CTRPluginFramework::Menu::CloseNote()
0701bfd4 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701bfdc 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701c01c 00000044 T CTRPluginFramework::Menu::Pop()
0701c060 000000e4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701c144 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701c1fc 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0701c204 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701c218 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0701c218 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0701c248 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c248 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c270 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
0701c28c 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c2a8 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701c3c0 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c3c0 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c4ac 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c4ac 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c59c 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701c5a4 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701c5b8 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701c5c4 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701c5cc 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701c5f0 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701c620 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701c63c 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701c6a4 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0701c6c4 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c6c4 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c6e4 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c700 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0701c758 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c758 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c7ec 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c7ec 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c84c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c84c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c8ac 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701c8b0 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701c8b0 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701c984 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701c9a0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c9a0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ca74 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ca74 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cb4c 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701cb60 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701cbb0 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
0701cbc8 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701cbec 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
0701cc94 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701cca4 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701ccc8 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701cd28 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701cd38 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701cd48 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0701cd58 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0701cd6c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0701cd90 0000003c t std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release() [clone .part.0]
0701cdcc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0701ce54 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
0701cf64 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701cfc0 000000a8 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
0701d068 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0701d068 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0701d2bc 00000050 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0701d30c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701d360 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0701d384 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0701d3ac 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0701d488 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0701d5ac 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0701d778 00000028 W CTRPluginFramework::ARCode::~ARCode()
0701d778 00000028 W CTRPluginFramework::ARCode::~ARCode()
0701d7a0 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0701d918 00000180 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0701da98 00000180 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0701dc18 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
0701dc54 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0701dd9c 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0701ddcc 000000e0 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701deac 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0701e0ac 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0701e124 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0701e1f0 000001c0 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0701e3b0 000001ac T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0701e55c 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.0]
0701e5b4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701e5b4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701e5f0 00000184 T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0701e774 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0701e7cc 000001b8 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701e984 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0701e9e0 00000144 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0701eb24 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0701eca0 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0701ecb8 000000e4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0701ed9c 000001d0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0701ef6c 000000e4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0701f050 00000098 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0701f0e8 00000018 t __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned int, void const*) [clone .isra.0]
0701f100 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701f100 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701f1f0 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0701f1f8 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0701f218 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701f3a0 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0701f3c0 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0701f3dc 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0701f3f8 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0701f400 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0701f408 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0701f408 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0701f428 000005bc T CTRPluginFramework::PluginMenuImpl::Run()
0701f9e4 00000054 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0701fa38 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701fb40 000000dc W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701fc1c 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0701fc58 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701fd8c 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701fecc 00000070 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701fecc 00000070 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701ff3c 000001e8 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07020124 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0702025c 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070203f4 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
070203f4 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07020544 000001a8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07020544 000001a8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070206ec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07020764 00000058 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
070207bc 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070208d4 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0702092c 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0702093c 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07020aa8 000004c4 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07020aa8 000004c4 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07020f6c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07021018 00000404 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0702141c 000000f4 t CTRPluginFramework::ClearSearchFolder()
07021510 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07021544 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0702176c 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07021798 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07021808 000000e8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070218f0 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07021930 00000270 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07021ba0 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07021c84 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07021cc4 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07021cf4 000000e0 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07021dd4 00000298 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0702206c 000003b0 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0702241c 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07022434 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07022448 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0702245c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07022470 00000148 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070225b8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070225bc 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070225c0 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07022604 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0702267c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
070226e0 000000a8 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
07022788 00000170 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
070228f8 000000b8 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
070229b0 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07022b34 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07022c58 00000048 t CTRPluginFramework::Reboot()
07022ca0 00000054 t CTRPluginFramework::Shutdown()
07022cf4 00000020 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
07022d14 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07022d28 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07022d3c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07022d50 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07022d64 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07022d78 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07022d8c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07022da0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07022db4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07022dc8 000001a8 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07022f70 00000a98 T CTRPluginFramework::PluginMenuTools::InitMenu()
07023a08 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07023a08 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07023b98 00000114 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07023cac 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07023d38 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07023d78 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07023ee8 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
07024500 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07024584 00000628 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07024bac 00000054 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07024c00 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07024c3c 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07024c4c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07024cd4 000000a8 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
07024d7c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07024df8 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07024eac 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07025038 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07025080 00000148 T CTRPluginFramework::SearchMenu::_Export()
070251c8 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
07025320 00000030 W std::__cxx11::to_string(unsigned long)
07025350 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07025350 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07025404 00000540 T CTRPluginFramework::SearchMenu::Draw()
07025944 00000118 T CTRPluginFramework::SearchMenu::_ShowGame()
07025a5c 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07025a90 00000230 T CTRPluginFramework::SearchMenu::Update()
07025cc0 00000514 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070261d4 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070261d4 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070262ac 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
070262ac 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
070262e8 0000001c T CTRPluginFramework::SubMenu::operator()()
07026304 00000200 T CTRPluginFramework::SubMenu::Draw()
07026504 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
070265c8 00000008 T CTRPluginFramework::SubMenu::IsOpen()
070265d0 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070265ec 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07026790 00000050 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070267e0 000000c0 T CTRPluginFramework::Search32::FirstSearchUnknown()
070268a0 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07026960 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070269d8 00000048 W CTRPluginFramework::Search::~Search()
070269d8 00000048 W CTRPluginFramework::Search::~Search()
07026a20 00000044 T CTRPluginFramework::Search32::~Search32()
07026a20 00000044 T CTRPluginFramework::Search32::~Search32()
07026a64 0000001c T CTRPluginFramework::Search32::~Search32()
07026a80 0000001c W CTRPluginFramework::Search::~Search()
07026a9c 00000210 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07026a9c 00000210 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07026cac 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026cac 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026ccc 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07026ccc 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07026d60 00000110 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07026e70 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07026eac 00000114 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07026fc0 000001a8 T CTRPluginFramework::Search32::SecondSearchSpecified()
07027168 00000104 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0702726c 00000190 T CTRPluginFramework::Search32::SecondSearchUnknown()
070273fc 0000013c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027538 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07027584 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
070276c8 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0702780c 0000003c W __gnu_cxx::__enable_if<!std::__is_scalar<CTRPluginFramework::Results32WithOld>::__value, CTRPluginFramework::Results32WithOld*>::__type std::__fill_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, CTRPluginFramework::Results32WithOld>(CTRPluginFramework::Results32WithOld*, unsigned int, CTRPluginFramework::Results32WithOld const&)
07027848 00000128 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027970 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070279bc 00000314 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07027cd0 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07027f60 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07028208 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07028498 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
070284cc 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070287f0 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07029094 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070299d0 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702a2f4 00000d90 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702b084 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702bd0c 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702c468 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702c870 000006dc T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702cf4c 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702d3d0 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702d858 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702dcd4 00000620 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702e2f4 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702ec00 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702f510 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0702fde4 00000c30 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07030a14 00000044 T CTRPluginFramework::Search::UpdateProgress()
07030a58 00000048 T CTRPluginFramework::Search::Cancel()
07030aa0 00000190 T CTRPluginFramework::Search::CheckNextRegion()
07030c30 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07030ca8 00000008 T CTRPluginFramework::Search::GetHeader() const
07030cb0 00000050 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07030d00 0000000c T CTRPluginFramework::Search::GetType() const
07030d0c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07030d24 00000070 T CTRPluginFramework::Search::WriteHeader()
07030d94 00000058 T CTRPluginFramework::Search::WriteResults()
07030dec 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07030e38 0000023c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07031074 00000244 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07031074 00000244 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070312b8 000000e8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070313a0 00000088 T CTRPluginFramework::Search::CreateIndexTable()
07031428 000001ac T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031428 000001ac T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070315d4 00000140 T CTRPluginFramework::Search::ExecuteSearch()
07031714 00000090 T CTRPluginFramework::EventManager::EventManager()
07031714 00000090 T CTRPluginFramework::EventManager::EventManager()
070317a4 000001b0 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07031954 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
07031990 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
07031c2c 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
07031d24 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
07031d2c 00000108 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031e34 000001e0 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07032014 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07032014 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070320d8 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07032134 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07032158 00000004 t addrMapNodeDestructor(rbtree_node*)
0703215c 0000012c T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07032288 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07032290 00000070 T CTRPluginFramework::Heap::Free(void*)
07032300 0000000c T CTRPluginFramework::Heap::SpaceFree()
0703230c 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0703233c 000001bc t CTRPluginFramework::ThreadPredicate(KThread*)
070324f8 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
070324f8 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
07032518 00000070 T CTRPluginFramework::ProcessImpl::Play(bool)
07032588 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
070325a4 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
070325c0 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07032628 00000074 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0703269c 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07032738 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
070327e8 000000e8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
070328d0 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
070329a4 000000f0 T CTRPluginFramework::ProcessImpl::Initialize()
07032a94 00000040 T CTRPluginFramework::ProcessImpl::Pause(bool)
07032ad4 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07032b4c 00000028 t CTRPluginFramework::GSP::GSPGPU__RegisterInterruptHook()
07032b74 00000024 t CTRPluginFramework::GSP::ClearInterrupts()
07032b98 00000114 t CTRPluginFramework::GSP::InterruptReceiver(void*)
07032cac 00000068 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07032d14 000000a0 T CTRPluginFramework::GSP::Update(unsigned long, unsigned long, unsigned long)
07032db4 00000004 T __gsp__Update
07032db8 000002a0 T CTRPluginFramework::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFramework::GSP::FrameBufferInfo&)
07033058 00000018 T CTRPluginFramework::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFramework::GSP::FrameBufferInfoShared&)
07033070 00000024 T CTRPluginFramework::GSP::PauseInterruptReceiver()
07033094 00000018 T CTRPluginFramework::GSP::ResumeInterruptReceiver()
070330ac 00000020 T CTRPluginFramework::GSP::WaitForVBlank()
070330cc 00000020 T CTRPluginFramework::GSP::WaitForVBlank1()
070330ec 0000002c T CTRPluginFramework::GSP::SwapBuffer(int)
07033118 00000018 T CTRPluginFramework::GSP::ImportFrameBufferInfo(CTRPluginFramework::GSP::FrameBufferInfoShared&, int)
07033130 000000e8 T CTRPluginFramework::GSP::SetFrameBufferInfo(CTRPluginFramework::GSP::FrameBufferInfoShared&, int, bool)
07033218 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
07033230 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07033230 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070332a0 000000f8 T CTRPluginFramework::ScreenImpl::Initialize()
07033398 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07033478 00000054 T CTRPluginFramework::ScreenImpl::ImportFromGsp()
070334cc 00000028 T CTRPluginFramework::ScreenImpl::Release()
070334f4 0000007c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07033570 0000002c T CTRPluginFramework::ScreenImpl::Flush()
0703359c 000000a0 T CTRPluginFramework::ScreenImpl::Clear(bool)
0703363c 00000070 T CTRPluginFramework::GSP::WaitBufferSwapped(int)
070336ac 00000030 T CTRPluginFramework::ScreenImpl::Copy()
070336dc 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
07033794 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0703379c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070337f8 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07033850 00000034 T CTRPluginFramework::ScreenImpl::Clean()
07033884 00000078 T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
070338fc 00000028 T CTRPluginFramework::ScreenImpl::AcquireFromGsp()
07033924 00000028 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
0703394c 0000004c T CTRPluginFramework::ScreenImpl::SwapBuffer()
07033998 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
070339ac 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
070339c8 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
070339e4 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
070339ec 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
070339f4 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
070339fc 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormats&) const
07033a18 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07033a34 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07033a88 00000030 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
07033ab8 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07033b10 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07033b84 00000194 T CTRPluginFramework::GSP::Initialize()
07033d18 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework3GSP31InterruptReceiverThreadPriorityE
07033d8c 00000234 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*) [clone .part.0]
07033fc0 0000021c T CTRPluginFramework::Screenshot::TaskCallback(void*)
070341dc 000002a8 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07034484 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
07034628 00000040 T CTRPluginFramework::Screenshot::Initialize()
07034668 000000a0 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07034708 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0703479c 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
070347b4 00000038 T CTRPluginFramework::SystemImpl::ReadyToSleep()
070347ec 00000018 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07034804 0000003c T CTRPluginFramework::SystemImpl::Status()
07034840 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07034864 00000004 t addrMapNodeDestructor(rbtree_node*)
07034868 000000d8 T mappableAlloc
07034940 00000050 T mappableFree
07034990 0000002c W MemBlock::Create(unsigned char*, unsigned long)
070349bc 00000034 W MemPool::DelBlock(MemBlock*)
070349f0 0000005c T MemPool::CoalesceRight(MemBlock*)
07034a4c 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
07034b64 000000fc T MemPool::Deallocate(MemChunk const&)
07034c60 00000020 T MemPool::GetFreeSpace()
07034c80 000000a0 T cfguInit
07034d20 00000034 T cfguExit
07034d54 00000044 T CFGU_GetConfigInfoBlk2
07034d98 00000014 T CFGU_GetSystemLanguage
07034dac 000000a8 T fontEnsureMapped
07034e54 0000010c T fontGlyphIndexFromCodePoint
07034f60 00000074 T fontGetCharWidthInfo
07034fd4 00000050 T srvExit
07035024 00000034 T srvRegisterClient
07035058 00000064 T srvInit
070350bc 00000068 T srvGetServiceHandleDirect
07035124 00000004 T srvGetServiceHandle
07035128 00000034 T srvPublishToSubscriber
0703515c 0000000c T __sync_init
07035168 00000018 T __sync_fini
07035180 00000010 T __sync_get_arbiter
07035190 00000018 T LightLock_Init
070351a8 0000008c T LightLock_Lock
07035234 00000034 T LightLock_TryLock
07035268 00000050 T LightLock_Unlock
070352b8 00000018 T RecursiveLock_Init
070352d0 00000030 T RecursiveLock_Lock
07035300 00000044 T RecursiveLock_TryLock
07035344 00000034 T RecursiveLock_Unlock
07035378 00000030 T LightEvent_Init
070353a8 00000068 T LightEvent_Clear
07035410 00000064 T LightEvent_Pulse
07035474 000000b4 T LightEvent_Signal
07035528 000000a8 T LightEvent_Wait
070355d0 000000a0 T amInit
07035670 00000034 T amExit
070356a4 00000104 T aptSendCommand
070357a8 0000006c T APT_CheckNew3DS
07035814 00000048 T APT_GetSharedFont
0703585c 00000028 t fsSession
07035884 0000004c t fsSessionForArchive
070358d0 00000038 T fsExit
07035908 00000028 T FSUSER_Initialize
07035930 000000b0 T fsInit
070359e0 00000084 T FSUSER_OpenFile
07035a64 00000068 T FSUSER_DeleteFile
07035acc 000000a4 T FSUSER_RenameFile
07035b70 00000068 T FSUSER_DeleteDirectoryRecursively
07035bd8 00000080 T FSUSER_CreateFile
07035c58 00000070 T FSUSER_CreateDirectory
07035cc8 000000a4 T FSUSER_RenameDirectory
07035d6c 0000006c T FSUSER_OpenDirectory
07035dd8 00000074 T FSUSER_OpenArchive
07035e4c 00000058 T FSFILE_Read
07035ea4 00000060 T FSFILE_Write
07035f04 00000038 T FSFILE_GetSize
07035f3c 00000028 T FSFILE_SetSize
07035f64 0000003c T FSFILE_Close
07035fa0 00000024 T FSFILE_Flush
07035fc4 00000028 T FSFILE_SetPriority
07035fec 00000050 T FSDIR_Read
0703603c 0000003c T FSDIR_Close
07036078 00000040 T gspExitEventHandler
070360b8 0000008c T gspExit
07036144 000000bc T hidExit
07036200 00000034 T hidCheckSectionUpdateTime
07036234 0000015c T hidScanInput
07036390 00000010 T hidKeysHeld
070363a0 00000010 T hidKeysDown
070363b0 00000010 T hidKeysUp
070363c0 00000018 T hidTouchRead
070363d8 00000090 T HIDUSER_GetHandles
07036468 0000017c T hidInit
070365e4 00000034 T irrstCheckSectionUpdateTime
07036618 0000006c T irrstScanInput
07036684 0000001c T irrstKeysHeld
070366a0 00000050 T IRRST_GetHandles
070366f0 00000034 T IRRST_Initialize
07036724 00000124 T irrstInit
07036848 0000002c T IRRST_Shutdown
07036874 000000a8 T irrstExit
0703691c 0000005c T decode_utf16
07036978 0000013c T decode_utf8
07036ab4 00000054 T encode_utf16
07036b08 000000e0 T encode_utf8
07036be8 000000d4 T utf16_to_utf8
07036cbc 000000ac T utf8_to_utf16
07036d68 00000054 T rbtree_find
07036dbc 00000010 T rbtree_init
07036dcc 00000174 t do_insert
07036f40 00000008 T rbtree_insert
07036f48 00000014 t is_black
07036f5c 000002c4 T rbtree_remove
07037220 00000090 T rbtree_rotate
070372b0 T svcCustomBackdoor
070372b8 T svcConvertVAToPA
070372c0 T svcFlushDataCacheRange
070372c8 T svcInvalidateEntireInstructionCache
070372d0 T svcMapProcessMemoryEx
070372e4 T svcUnmapProcessMemoryEx
070372ec T svcControlProcess
070372f4 T svcQueryMemory
07037324 T svcCreateThread
07037344 T svcExitThread
0703734c T svcSleepThread
07037354 T svcSetThreadPriority
0703735c T svcCreateEvent
07037370 T svcSignalEvent
07037378 T svcClearEvent
07037380 T svcMapMemoryBlock
07037388 T svcUnmapMemoryBlock
07037390 T svcCreateAddressArbiter
070373a4 T svcArbitrateAddress
070373bc T svcCloseHandle
070373c4 T svcWaitSynchronization
070373cc T svcGetSystemTick
070373d4 T svcGetSystemInfo
070373ec T svcGetProcessInfo
07037404 T svcConnectToPort
07037418 T svcSendSyncRequest
07037420 T svcOpenProcess
07037434 T svcBreak
0703743c T svcInvalidateProcessDataCache
07037444 T svcFlushProcessDataCache
0703744c T svcKernelSetState
07037454 T svcQueryProcessMemory
07037478 T __aeabi_read_tp
07037484 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070374fc 00000024 T OnLoadCro
07037520 00000004 W CTRPluginFramework::OnPluginToSwap()
07037524 00000004 W CTRPluginFramework::OnPluginFromSwap()
07037528 00000164 T CTRPluginFramework::Initialize()
0703768c 000000a0 T CTRPluginFramework::ThreadExit()
0703772c 00000060 T abort
0703778c 0000003c T CTRPluginFramework::ThreadInit(void*)
070377c8 0000013c T __entrypoint
07037908 00000498 T CTRPluginFramework::KeepThreadMain(void*)
07037da0 00000070 t _GLOBAL__sub_I_g_gspEventThreadPriority
07037e10 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07037e10 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07037e20 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07037e20 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07037e40 00000048 t CTRPluginFramework::GetCurrentTime()
07037e88 00000014 T CTRPluginFramework::Clock::Clock()
07037e88 00000014 T CTRPluginFramework::Clock::Clock()
07037e9c 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
07037ed4 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07037f04 00000044 T CTRPluginFramework::Clock::Restart()
07037f48 0000000c T CTRPluginFramework::FwkSettings::Get()
07037f54 000000f8 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0703804c 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07038058 00000030 T CTRPluginFramework::HookContext::GetCallCode()
07038088 00000044 T CTRPluginFramework::Hook::Hook()
07038088 00000044 T CTRPluginFramework::Hook::Hook()
070380cc 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
070380cc 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
070380f4 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
070380f4 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07038108 00000060 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07038168 0000004c T CTRPluginFramework::Hook::~Hook()
07038168 0000004c T CTRPluginFramework::Hook::~Hook()
070381b4 00000028 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
070381dc 00000034 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07038210 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07038220 0000001c T CTRPluginFramework::Hook::IsEnabled()
0703823c 00000120 T CTRPluginFramework::Hook::Enable()
0703835c 00000030 T CTRPluginFramework::Hook::Disable()
0703838c 00000008 T CTRPluginFramework::Hook::GetContext() const
07038394 00000044 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
070383d8 00000010 T CTRPluginFramework::System::IsNew3DS()
070383e8 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
070383e8 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
070383ec 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
070383f0 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
07038420 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07038434 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
07038438 00000050 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07038488 00000048 T CTRPluginFramework::Task::Start() const
070384d0 00000050 T CTRPluginFramework::Task::Start(void*) const
07038520 00000064 T CTRPluginFramework::Task::Wait() const
07038584 00000038 W std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&)
070385bc 000000c0 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070385bc 000000c0 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0703867c 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703867c 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
070386b0 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070386b0 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070386d0 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07038724 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
0703876c 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07038774 0000000c T CTRPluginFramework::ThreadEx::Yield()
07038780 00000034 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*)
070387b4 00000018 W std::map<unsigned long, ThreadVars*, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::~map()
070387b4 00000018 W std::map<unsigned long, ThreadVars*, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::~map()
070387cc 000000fc W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_unique<std::pair<unsigned long, ThreadVars*> >(std::pair<unsigned long, ThreadVars*>&&)
070388c8 000001d0 T __ctrpf_getThreadVars
07038a98 00000064 t _GLOBAL__sub_I___ctrpf_getThreadVars
07038afc 00000014 T CTRPluginFramework::Time::Time()
07038afc 00000014 T CTRPluginFramework::Time::Time()
07038b10 00000020 T CTRPluginFramework::Time::AsSeconds() const
07038b30 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
07038b38 00000028 T CTRPluginFramework::Seconds(float)
07038b60 00000010 T CTRPluginFramework::Milliseconds(int)
07038b70 00000008 T CTRPluginFramework::Microseconds(long long)
07038b78 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
07038b8c 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
07038ba0 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
07038bb4 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
07038bcc 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
07038be4 00000014 T CTRPluginFramework::Touch::IsDown()
07038bf8 00000028 T CTRPluginFramework::Touch::GetPosition()
07038c20 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07038c20 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07038c48 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07038cc8 00000048 T CTRPluginFramework::LineWriter::Flush()
07038d10 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07038d10 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07038d2c 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038d90 00000018 T CTRPluginFramework::LineWriter::Close()
07038da8 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
07038de4 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07038e08 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038e2c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07038e2c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07038e4c 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07038ed4 00000128 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07038ed4 00000128 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07038ffc 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07039038 000000fc T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039134 00000084 T CTRPluginFramework::ARCode::Update()
070391b8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070391b8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070391dc 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07039204 000000b0 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07039204 000000b0 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070392b4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070392b4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070392e8 0000003c T CTRPluginFramework::ARCodeContext::Update()
07039324 000000a8 T CTRPluginFramework::ARCodeContext::Clear()
070393cc 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
070394a4 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07039534 0000010c t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07039640 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070396c8 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07039724 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07039724 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0703979c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703979c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0703979c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703979c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
070397e8 00001464 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0703ac4c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703ac4c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703ade0 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0703b094 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0703b11c 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b160 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0703b174 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0703b1b0 0000017c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703b32c 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703b368 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0703b3c8 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0703b3ec 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0703b414 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0703b414 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0703b43c 00000384 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703b7c0 000006a0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0703be60 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0703beac 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0703bf64 0000046c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0703c3d0 000003c8 T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0703c798 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0703c890 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0703c890 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0703c8b0 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
0703c8cc 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703c9e0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703ca58 000000f8 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703cb50 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703cb60 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0703cb78 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0703cbc8 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703cc0c 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703cc54 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0703d128 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0703d128 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0703d16c 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0703d18c 00000190 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0703d31c 00000038 W std::_Deque_iterator<CTRPluginFramework::MenuFolderImpl*, CTRPluginFramework::MenuFolderImpl*&, CTRPluginFramework::MenuFolderImpl**>::difference_type std::operator-<CTRPluginFramework::MenuFolderImpl*, CTRPluginFramework::MenuFolderImpl*&, CTRPluginFramework::MenuFolderImpl**>(std::_Deque_iterator<CTRPluginFramework::MenuFolderImpl*, CTRPluginFramework::MenuFolderImpl*&, CTRPluginFramework::MenuFolderImpl**> const&, std::_Deque_iterator<CTRPluginFramework::MenuFolderImpl*, CTRPluginFramework::MenuFolderImpl*&, CTRPluginFramework::MenuFolderImpl**> const&)
0703d354 00000120 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0703d474 00000778 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0703dbec 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703dcb0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703dd28 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703e064 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0703e0b4 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703e0b4 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703e11c 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703e138 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e138 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e184 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
0703e2a0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703e328 00000350 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0703e678 00000080 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0703e6f8 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0703e764 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0703e79c 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0703e818 00000460 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703ec78 00000224 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0703ee9c 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0703ef3c 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0703eff8 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0703f0b4 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0703f160 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0703f1ec 0000017c T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0703f368 00000118 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703f480 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0703f528 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703f590 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0703f620 00000148 T ARM_Disasm::Decode01(unsigned long)
0703f768 00000028 T ARM_Disasm::Decode10(unsigned long)
0703f790 00000074 T ARM_Disasm::Decode11(unsigned long)
0703f804 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0703f858 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0703f8a8 00000118 T ARM_Disasm::DecodeALU(unsigned long)
0703f9c0 000000c4 T ARM_Disasm::Decode00(unsigned long)
0703fa84 00000030 T ARM_Disasm::Decode(unsigned long)
0703fab4 0000010c W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
0703fbc0 00000040 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
0703fc00 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0703fee4 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
070401d4 00000020 T CTRPluginFramework::Button::~Button()
070401d4 00000020 T CTRPluginFramework::Button::~Button()
070401f4 0000001c T CTRPluginFramework::Button::~Button()
07040210 00000044 T CTRPluginFramework::Button::operator()()
07040254 00000150 T CTRPluginFramework::Button::Draw()
070403a4 00000150 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
070404f4 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070404f4 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07040618 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07040618 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07040638 00000090 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07040638 00000090 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070406c8 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070406c8 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070406dc 00000018 T CTRPluginFramework::Button::Enable(bool)
070406f4 00000010 T CTRPluginFramework::Button::Enable()
07040704 00000010 T CTRPluginFramework::Button::Disable()
07040714 00000010 T CTRPluginFramework::Button::Lock()
07040724 00000010 T CTRPluginFramework::Button::Execute()
07040734 00000018 T CTRPluginFramework::Button::SetState(bool)
0704074c 00000010 T CTRPluginFramework::Button::GetState() const
0704075c 00000094 T CTRPluginFramework::ComboBox::Draw()
070407f0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070407f0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
0704083c 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07040858 000000ac T CTRPluginFramework::ComboBox::operator()()
07040904 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07040904 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07040950 0000003c T CTRPluginFramework::ComboBox::Clear()
0704098c 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070409dc 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07040a5c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07040a5c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07040a60 00000014 T CTRPluginFramework::FloatingButton::Draw()
07040a74 00000014 T CTRPluginFramework::FloatingButton::operator()()
07040a88 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07040a9c 000001ac T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07040c48 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07040c48 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07040c88 00000010 T CTRPluginFramework::Glyph::Width() const
07040c98 0000037c T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07041014 00000318 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0704132c 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07041438 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
070414a0 00000020 T CTRPluginFramework::Font::GetGlyph(char)
070414c0 00000108 T CTRPluginFramework::Font::Initialize()
070415c8 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
070415f8 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070415f8 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07041618 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07041634 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070416b0 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
070416e8 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07041750 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07041848 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07041858 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07041868 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07041870 0000000c T CTRPluginFramework::NumericTextBox::Clear()
0704187c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0704187c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070418e4 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07041958 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
070419f8 00000080 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
070419f8 00000080 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07041a78 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07041a78 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07041b24 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07041b24 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07041ba4 00000040 T CTRPluginFramework::TouchKey::Clear()
07041be4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07041be4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07041c04 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07041c20 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07041c28 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07041c88 00000074 T CTRPluginFramework::TouchKey::Draw()
07041cfc 00000090 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07041d8c 000000e4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07041e70 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07041e70 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07041fc0 00000068 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07041fc0 00000068 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07042028 000000a8 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07042028 000000a8 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070420d0 000000cc T CTRPluginFramework::TouchKeyString::Draw()
0704219c 000000b8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07042254 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0704226c 00000048 T CTRPluginFramework::TouchKeyString::operator()()
070422b4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070422b4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070422c8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070422c8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070422e8 00000024 T CTRPluginFramework::UIContainer::Draw()
0704230c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07042340 000000e4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07042424 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07042464 000000e4 T CTRPluginFramework::Converter::Converter()
07042464 000000e4 T CTRPluginFramework::Converter::Converter()
07042548 00000010 T CTRPluginFramework::Converter::Instance()
07042558 00000108 T CTRPluginFramework::Converter::_Draw()
07042660 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0704287c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070428f4 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070428f4 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07042940 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07042a00 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07042b38 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07042b60 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042bc4 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07042ed4 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07042fc4 0000024c T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07043210 0000037c T CTRPluginFramework::GatewayRAMDumper::operator()()
0704358c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07043604 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
070436c4 000003fc t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0]
07043ac0 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07043ad8 000002c0 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07043d98 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
07043d98 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
07043f58 00000158 T CTRPluginFramework::GuideReader::Draw()
070440b0 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07044124 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0704417c 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07044230 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07044310 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07044388 0000054c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07044388 0000054c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070448d4 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
070448e0 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07044c08 0000010c T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07044d14 00000480 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07045194 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
070452b0 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0704533c 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07045378 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
070453a4 000000d4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07045478 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
070454fc 00000080 T CTRPluginFramework::PluginMenuHome::Init()
0704557c 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07045600 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0704565c 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
0704571c 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0704576c 00000148 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
070458b4 0000038c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07045c40 00000230 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07045e70 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07045e90 00000018 t void __gnu_cxx::new_allocator<CTRPluginFramework::AsmWrapper>::construct<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
07045ea8 00000134 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
07045fdc 00000028 W CTRPluginFramework::HookManager::~HookManager()
07045fdc 00000028 W CTRPluginFramework::HookManager::~HookManager()
07046004 000000c4 T CTRPluginFramework::HookManager::HookManager()
07046004 000000c4 T CTRPluginFramework::HookManager::HookManager()
070460c8 0000006c T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
07046134 00000060 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07046194 000000c4 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07046258 00000170 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
070463c8 00000080 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07046448 00000164 T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
070465b0 000000e0 T __hook__CheckTlsValue
07046690 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
070466c0 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
070466cc 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0704670c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0704671c 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07046734 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07046778 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0704678c 00000004 T Kernel::Initialize()
07046790 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
070467a8 0000000c T KProcess::GetCurrent()
070467b4 00000024 T KProcess::PatchCore2Access()
070467d8 0000002c T KProcess::PatchCategory(unsigned long)
07046804 00000014 T KProcess__PatchCategory
07046818 0000002c T KProcess::PatchMaxPriority(unsigned long)
07046844 00000014 T KProcess__PatchMaxPriority
07046858 00000028 T KProcess::PatchMaxThreads()
07046880 0000003c t std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release() [clone .part.0]
070468bc 00000058 t std::__shared_count<(__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)0> const&) [clone .isra.0]
07046914 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07046914 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07046974 00000034 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07046974 00000034 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
070469a8 0000006c W CTRPluginFramework::Scheduler::~Scheduler()
070469a8 0000006c W CTRPluginFramework::Scheduler::~Scheduler()
07046a14 00000014 W std::__atomic_base<unsigned long>::operator=(unsigned long)
07046a28 000000a8 T CTRPluginFramework::Scheduler::Initialize()
07046ad0 00000050 T CTRPluginFramework::Scheduler::Exit()
07046b20 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07046b78 00000170 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
07046ce8 00000164 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07046e4c 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07046ff0 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
070470f4 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07047150 00000060 T plgLdrExit
070471b0 000000c4 T plgLdrInit
07047274 00000050 T PLGLDR__GetPluginPath
070472c4 00000020 T PLGLDR__FetchEvent
070472e4 000000b4 T PLGLDR__Reply
07047398 00000008 T envGetHandle
070473a0 00000004 T envDestroyHandles
070473a4 0000005c t getSysTime
07047400 000000fc T __libctru_gtod
070474fc 00000140 T __createThread
0704763c 0000009c T __startThread
070476d8 0000002c T threadFree
07047704 00000024 T threadJoin
07047728 00000020 T threadGetCurrent
07047748 0000003c T threadExit
07047784 0000003c t _thread_begin
070477c0 00000088 T acInit
07047848 00000034 T acExit
0704787c 0000003c t __ctru_get_reent
070478b8 0000003c T __getThreadLocalStorage
070478f4 000000ec T __system_initSyscalls
070479e0 0000004c T rbtree_node_next
07047a2c T LoadCROHooked
07047a40 T AR__ExecuteRoutine
07047a68 t stackBak
07047a70 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07047a70 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07047a9c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07047a9c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07047ab4 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07047bb0 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07047bb8 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07047bdc 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07047c00 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07047c24 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07047c4c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07047c74 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07047c9c 00000124 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07047dc0 00001e14 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07049bd4 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07049c44 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07049c64 00000094 T __system_allocateHeaps
07049cf8 00000020 T __appExit
07049d18 00000020 T __libctru_exit
07049d38 00000010 T __aeabi_atexit
07049d48 00000004 T operator delete(void*)
07049d4c 00000004 T operator delete(void*, std::nothrow_t const&)
07049d50 00000004 T operator delete[](void*)
07049d54 0000005c T __cxa_guard_acquire
07049db0 0000000c T __cxa_guard_release
07049dbc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049dbc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049ddc 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049e08 00000014 T std::get_new_handler()
07049e1c 0000005c T operator new(unsigned int)
07049e78 0000001c T operator new(unsigned int, std::nothrow_t const&)
07049e94 00000004 T operator new[](unsigned int)
07049e98 00000008 T __cxa_pure_virtual
07049ea0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07049ea0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07049ec0 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07049eec 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07049f58 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704a034 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704a078 00000004 T std::type_info::~type_info()
0704a078 00000004 T std::type_info::~type_info()
0704a07c 00000008 T std::type_info::__is_pointer_p() const
0704a07c 00000008 T std::type_info::__is_function_p() const
0704a084 0000004c T std::type_info::operator==(std::type_info const&) const
0704a0d0 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704a0e8 00000014 T std::__detail::_List_node_base::_M_unhook()
0704a0fc 00000070 t std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704a16c 00000004 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704a170 000002a8 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704a418 0000002c T std::__throw_bad_alloc()
0704a444 00000048 T std::__throw_logic_error(char const*)
0704a48c 00000048 T std::__throw_invalid_argument(char const*)
0704a4d4 00000048 T std::__throw_length_error(char const*)
0704a51c 00000048 T std::__throw_out_of_range(char const*)
0704a564 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704a5e0 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704a5ec 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
0704a658 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0704a6d8 0000012c T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0704a804 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0704a85c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0704a870 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0704a894 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704a8b8 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704a974 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0704aa80 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0704aafc 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0704aafc 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0704ab64 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0704ab64 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0704ab88 000000c4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0704ac4c 00000108 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0704ad54 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0704adc4 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0704ae38 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0704ae7c 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0704ae94 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0704afb8 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
0704aff0 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0704b278 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0704b2b0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b2fc 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0704b360 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0704b3f0 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b400 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b410 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0704b43c 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0704b48c 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
0704b4dc 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0704b580 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0704b590 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0704b5f4 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0704b628 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704b67c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0704b72c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b72c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b75c 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0704b7bc 0000000c T std::bad_alloc::what() const
0704b7c8 00000020 T std::bad_alloc::~bad_alloc()
0704b7c8 00000020 T std::bad_alloc::~bad_alloc()
0704b7e8 0000002c T std::bad_alloc::~bad_alloc()
0704b814 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704b870 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704b884 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704b884 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704b8a4 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704b8d0 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704b938 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704b964 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704b9a8 00000004 T operator delete(void*, unsigned int)
0704b9ac 000000d4 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704ba80 00000090 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704bb10 00000044 T __cxa_allocate_exception
0704bb54 00000030 T __cxa_free_exception
0704bb84 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704bbc4 T __cxa_end_cleanup
0704bbd4 00000138 T __cxa_type_match
0704bd0c 000000b4 T __cxa_begin_cleanup
0704bdc0 000000b4 T __gnu_end_cleanup
0704be74 000000cc T __cxa_begin_catch
0704bf40 000000e0 T __cxa_end_catch
0704c020 00000004 T std::exception::~exception()
0704c020 00000004 T std::exception::~exception()
0704c024 00000004 T std::bad_exception::~bad_exception()
0704c024 00000004 T std::bad_exception::~bad_exception()
0704c028 0000000c T transaction clone for std::exception::what() const
0704c028 0000000c T std::exception::what() const
0704c034 0000000c T transaction clone for std::bad_exception::what() const
0704c034 0000000c T std::bad_exception::what() const
0704c040 00000018 T std::bad_exception::~bad_exception()
0704c058 0000000c T __cxa_get_globals_fast
0704c064 0000000c T __cxa_get_globals
0704c070 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0704c1d8 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0704c23c 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0704c314 00000700 T __gxx_personality_v0
0704ca14 00000038 T __cxxabiv1::__terminate(void (*)())
0704ca4c 00000018 T std::terminate()
0704ca64 0000000c T __cxxabiv1::__unexpected(void (*)())
0704ca70 00000018 T std::unexpected()
0704ca88 00000014 T std::get_terminate()
0704ca9c 00000014 T std::get_unexpected()
0704cab0 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0704cb20 00000070 T __cxa_init_primary_exception
0704cb90 00000058 T __cxa_throw
0704cbe8 000000b0 T __cxa_rethrow
0704cc98 00000008 T std::logic_error::what() const
0704cca0 00000064 T std::logic_error::~logic_error()
0704cca0 00000064 T std::logic_error::~logic_error()
0704cd04 0000001c T std::logic_error::~logic_error()
0704cd20 00000020 T std::invalid_argument::~invalid_argument()
0704cd20 00000020 T std::invalid_argument::~invalid_argument()
0704cd40 00000028 T std::invalid_argument::~invalid_argument()
0704cd68 00000020 T std::length_error::~length_error()
0704cd68 00000020 T std::length_error::~length_error()
0704cd88 00000028 T std::length_error::~length_error()
0704cdb0 00000020 T std::out_of_range::~out_of_range()
0704cdb0 00000020 T std::out_of_range::~out_of_range()
0704cdd0 00000028 T std::out_of_range::~out_of_range()
0704cdf8 00000038 T std::logic_error::logic_error(char const*)
0704cdf8 00000038 T std::logic_error::logic_error(char const*)
0704ce30 00000020 T std::invalid_argument::invalid_argument(char const*)
0704ce30 00000020 T std::invalid_argument::invalid_argument(char const*)
0704ce50 00000020 T std::length_error::length_error(char const*)
0704ce50 00000020 T std::length_error::length_error(char const*)
0704ce70 00000020 T std::out_of_range::out_of_range(char const*)
0704ce70 00000020 T std::out_of_range::out_of_range(char const*)
0704ce90 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0704cf18 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
0704cf18 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
0704cf88 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704cf8c 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0704cfbc 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704cfbc 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704d008 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0704d078 0000002c T __cxa_call_terminate
0704d0a4 00000158 T __cxa_call_unexpected
0704d200 000002a4 T log2
0704d4a4 00000024 t with_errno
0704d4c8 00000048 T __math_divzero
0704d510 0000001c T __math_invalid
0704d530 0000015c T ceil
0704d68c 000000b4 T ceilf
0704d740 0000016c T floor
0704d8ac 0000006c T roundf
0704d918 00000108 T sqrtf
0704da20 00000008 T __ieee754_sqrtf
0704da28 00000008 T matherr
0704da30 00000030 T __aeabi_f2lz
0704da30 00000030 T __fixsfdi
0704da60 00000038 T __aeabi_d2lz
0704da60 00000038 T __fixdfdi
0704da98 00000040 T __aeabi_f2ulz
0704da98 00000040 T __fixunssfdi
0704dad8 00000040 T __aeabi_d2ulz
0704dad8 00000040 T __fixunsdfdi
0704db18 00000130 T __udivmoddi4
0704dc48 00000018 t selfrel_offset31
0704dc60 0000008c t search_EIT_table
0704dcec 00000040 t __gnu_unwind_get_pr_addr
0704dd2c 00000114 t get_eit_entry
0704de40 00000088 t restore_non_core_regs
0704dec8 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704dedc 00000004 t _Unwind_DebugHook
0704dee0 00000064 t unwind_phase2
0704df44 00000134 t unwind_phase2_forced
0704e078 000000a4 T __gnu_Unwind_RaiseException
0704e11c 00000024 T __gnu_Unwind_ForcedUnwind
0704e140 00000074 T __gnu_Unwind_Resume
0704e1b4 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704e1d4 00000004 T _Unwind_Complete
0704e1d8 00000018 T _Unwind_DeleteException
0704e1f0 00000064 T _Unwind_VRS_Get
0704e254 0000002c t _Unwind_GetGR
0704e280 00000064 T _Unwind_VRS_Set
0704e2e4 00000030 t _Unwind_SetGR
0704e314 000000c0 T __gnu_Unwind_Backtrace
0704e3d4 0000044c t __gnu_unwind_pr_common
0704e820 00000008 T __aeabi_unwind_cpp_pr0
0704e828 00000008 W __aeabi_unwind_cpp_pr1
0704e830 00000008 W __aeabi_unwind_cpp_pr2
0704e838 000003d0 T _Unwind_VRS_Pop
0704ec08 00000060 t next_unwind_byte
0704ec68 0000002c t _Unwind_GetGR.constprop.0
0704ec94 00000004 t unwind_UCB_from_context
0704ec98 000003c8 T __gnu_unwind_execute
0704f060 00000044 T __gnu_unwind_frame
0704f0a4 00000010 T _Unwind_GetRegionStart
0704f0b4 0000001c T _Unwind_GetLanguageSpecificData
0704f0d0 00000008 T _Unwind_GetDataRelBase
0704f0d8 00000008 T _Unwind_GetTextRelBase
0704f0e0 00000010 T ctime
0704f0f0 00000018 T __cxa_atexit
0704f108 0000000c T __errno
0704f114 0000007c T __libc_init_array
0704f190 00000018 T isspace
0704f1a8 00000018 T isxdigit
0704f1c0 00000020 T localtime
0704f1e0 0000037c T localtime_r
0704f55c 00000028 T memalign
0704f584 0000014c T _memalign_r
0704f6d0 00000020 T malloc
0704f6f0 00000020 T free
0704f710 000007d0 T _malloc_r
0704fee0 000000e0 T memchr
0704ffc0 000000a0 T memcmp
07050060 00000120 T memcpy
07050180 00000154 T memmove
070502d4 00000118 T memset
070503ec 0000000c T __malloc_lock
070503f8 0000000c T __malloc_unlock
07050404 000000cc T snprintf
070504d0 00000064 T sprintf
07050534 00000008 T __seofread
0705053c 00000230 t iso_year_adjust
0705076c 000010fc t __strftime
07051868 00000020 T strftime
07051888 0000005c T strlen
070518e4 000000ec T strncmp
070519d0 000000c0 T strncpy
07051a90 00000054 t sulp
07051ae8 00001414 T _strtod_l
07052f00 000000cc T strtof
07052fcc 000001c8 t _strtoul_l.isra.0
07053194 00000004 T _strtoul_r
07053198 00000030 T strtoul
070531c8 00000650 t get_arg
07053818 00003814 T _svfprintf_r
0705702c 0000003c T time
07057068 00000224 T __tzcalc_limits
0705728c 0000000c T __tz_lock
07057298 0000000c T __tz_unlock
070572a4 00000010 T _tzset_unlocked
070572b4 00000474 T _tzset_unlocked_r
07057728 000000a4 T _vsnprintf_r
070577cc 00000038 T vsnprintf
07057804 00000054 T _wcrtomb_r
07057858 00000020 T _wcsrtombs_r
07057878 0000000c T abs
07057884 00000020 T asctime
070578a4 00000078 T asctime_r
0705791c 000000b0 T __register_exitproc
070579cc 000001a8 t quorem
07057b78 000012ac T _dtoa_r
07058e24 000000f8 T _malloc_trim_r
07058f1c 000002e8 T _free_r
07059204 000000ec t rshift
070592f0 00000828 T __gethex
07059b18 00000060 T __match
07059b78 0000028c T __hexnan
07059e04 000000c8 T _findenv_r
07059ecc 00000018 T _getenv_r
07059ee4 0000000c T __gettzinfo
07059ef0 00000278 T gmtime_r
0705a168 0000000c T labs
0705a174 0000000c T _localeconv_r
0705a180 00000010 T __locale_mb_cur_max
0705a190 000002fc T __utf8_mbtowc
0705a48c 00000088 T _Balloc
0705a514 0000001c T _Bfree
0705a530 000000d0 T __multadd
0705a600 000000ec T __s2b
0705a6ec 00000058 T __hi0bits
0705a744 0000009c T __lo0bits
0705a7e0 00000020 T __i2b
0705a800 000001e0 T __multiply
0705a9e0 00000100 T __pow5mult
0705aae0 00000114 T __lshift
0705abf4 00000058 T __mcmp
0705ac4c 00000190 T __mdiff
0705addc 00000088 T __ulp
0705ae64 000000d4 T __b2d
0705af38 00000104 T __d2b
0705b03c 00000084 T __ratio
0705b0c0 0000006c T __copybits
0705b12c 0000005c T __any_on
0705b188 0000000c T nanf
0705b198 000000a8 T frexp
0705b240 00000064 T siprintf
0705b2a4 00000074 T siscanf
0705b318 00000010 T nan
0705b328 000000cc T sniprintf
0705b3f4 000000f0 T strcpy
0705b4e4 000001b4 t _strtol_l.isra.0
0705b698 00000004 T _strtol_r
0705b69c 00000650 t get_arg
0705bcec 00000188 T __ssprint_r
0705be74 000024d8 T _svfiprintf_r
0705e34c 00000048 t get_arg
0705e394 000000e0 T _sungetc_r
0705e474 0000006c T __ssrefill_r
0705e4e0 000000c8 T _sfread_r
0705e5a8 000022dc T __ssvfiscanf_r
07060884 000000a8 T __submore
0706092c 00000190 T _wcsnrtombs_l
07060abc 00000048 T _wcsnrtombs_r
07060b04 000000f0 T __utf8_wctomb
07060bf4 00000094 T _calloc_r
07060c88 0000000c T __env_lock
07060c94 0000000c T __env_unlock
07060ca0 00000008 T iswspace
07060ca8 00000060 T _mbrtowc_r
07060d08 00000028 T realloc
07060d30 000004bc T _realloc_r
070611ec 000000e8 T __sccl
070612d4 0000023c t _strtoll_l.isra.0
07061510 00000004 T _strtoll_r
07061518 0000024c t _strtoull_l.isra.0
07061764 00000004 T _strtoull_r
07061768 0000003c T iswspace_l
070617a4 000001e0 t __jp2uc
07061984 00000094 T _jp2uc_l
07061a18 00000088 T category
07061aa0 00000038 T _gettimeofday_r
07061ad8 00000078 T _sbrk_r
07061b50 00000018 T __libc_lock_acquire
07061b68 00000018 T __libc_lock_release
07061b80 00000018 T __libc_lock_acquire_recursive
07061b98 00000018 T __libc_lock_release_recursive
07061bb0 00000028 T __getreent
07061bd8 T _fini
07061e08 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
07061ee8 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
07061f00 00000058 r CTRPluginFramework::g_OSDPattern
07061f78 00000a00 r font
07062978 0000001c R vtable for CTRPluginFramework::TextBox
07062994 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
070629b4 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
070629d4 00000020 R vtable for CTRPluginFramework::HexEditor::FloatView
070629f4 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07062a14 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07062a1c 00000038 r CTRPluginFramework::ktable
07062a54 00000038 r CTRPluginFramework::stable
07062a8c 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07062aa8 0000001c R vtable for CTRPluginFramework::MenuEntryTools
07062ac4 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
07062b04 00000038 R vtable for CTRPluginFramework::Search32
07062b3c 00000038 R vtable for CTRPluginFramework::Search
07062b74 00000005 r CSWTCH.139
07062bf4 00000004 R About15_array_length
07062bf8 00000384 r About15_array
07062f7c 00000004 R AddFavorite25_array_length
07062f80 000009c4 r AddFavorite25_array
07063944 00000004 R AddFavoriteFilled25_array_length
07063948 000009c4 r AddFavoriteFilled25_array
0706430c 00000004 R CapsLockOn15_array_length
07064310 00000384 r CapsLockOn15_array
07064694 00000004 R CapsLockOnFilled15_array_length
07064698 00000384 r CapsLockOnFilled15_array
07064a1c 00000004 R CheckedCheckbox_array_length
07064a20 00000384 r CheckedCheckbox_array
07064da4 00000004 R ClearSymbol15_array_length
07064da8 00000384 r ClearSymbol15_array
0706512c 00000004 R ClearSymbolFilled15_array_length
07065130 00000384 r ClearSymbolFilled15_array
070654b4 00000004 R Clipboard25_array_length
070654b8 000009c4 r Clipboard25_array
07065e7c 00000004 R ClipboardFilled25_array_length
07065e80 000009c4 r ClipboardFilled25_array
07066844 00000004 R CloseWindow20_array_length
07066848 00000640 r CloseWindow20_array
07066e88 00000004 R CloseWindowFilled20_array_length
07066e8c 00000640 r CloseWindowFilled20_array
070674cc 00000004 R Controller15_array_length
070674d0 00000384 r Controller15_array
07067854 00000004 R Cut25_array_length
07067858 000009c4 r Cut25_array
0706821c 00000004 R CutFilled25_array_length
07068220 000009c4 r CutFilled25_array
07068be4 00000e10 r DefaultKeyboardCustomIcon_array
070699f4 00000004 R Duplicate25_array_length
070699f8 000009c4 r Duplicate25_array
0706a3bc 00000004 R DuplicateFilled25_array_length
0706a3c0 000009c4 r DuplicateFilled25_array
0706ad84 00000004 R Edit25_array_length
0706ad88 000009c4 r Edit25_array
0706b74c 00000004 R EditFilled25_array_length
0706b750 000009c4 r EditFilled25_array
0706c114 00000004 R EnterKey15_array_length
0706c118 00000384 r EnterKey15_array
0706c49c 00000004 R EnterKeyFilled15_array_length
0706c4a0 00000384 r EnterKeyFilled15_array
0706c824 00000004 R File15_array_length
0706c828 00000384 r File15_array
0706cbac 00000004 R FolderFilled_array_length
0706cbb0 00000384 r FolderFilled_array
0706cf34 00000004 R GameController15_array_length
0706cf38 00000384 r GameController15_array
0706d2bc 00000004 R GameController25_array_length
0706d2c0 000009c4 r GameController25_array
0706dc84 00000004 R GameControllerFilled25_array_length
0706dc88 000009c4 r GameControllerFilled25_array
0706e64c 00000004 R Grid15_array_length
0706e650 00000384 r Grid15_array
0706e9d4 00000004 R HandCursor15_array_length
0706e9d8 00000384 r HandCursor15_array
0706ed5c 00000004 R Info25_array_length
0706ed60 000009c4 r Info25_array
0706f724 00000004 R InfoFilled25_array_length
0706f728 000009c4 r InfoFilled25_array
070700ec 00000004 R Keyboard25_array_length
070700f0 000009c4 r Keyboard25_array
07070ab4 00000004 R KeyboardFilled25_array_length
07070ab8 000009c4 r KeyboardFilled25_array
0707147c 00000004 R Maintenance15_array_length
07071480 00000384 r Maintenance15_array
07071804 00000004 R More15_array_length
07071808 00000384 r More15_array
07071b8c 00000004 R Plus25_array_length
07071b90 000009c4 r Plus25_array
07072554 00000004 R PlusFilled25_array_length
07072558 000009c4 r PlusFilled25_array
07072f1c 00000004 R RAM15_array_length
07072f20 00000384 r RAM15_array
070732a4 00000004 R Restart15_array_length
070732a8 00000384 r Restart15_array
0707362c 00000004 R Rocket40_array_length
07073630 00001900 r Rocket40_array
07074f30 00000004 R Save25_array_length
07074f34 000009c4 r Save25_array
070758f8 00000004 R Search15_array_length
070758fc 00000384 r Search15_array
07075c80 00000004 R Settings15_array_length
07075c84 00000384 r Settings15_array
07076008 00000004 R Shutdown15_array_length
0707600c 00000384 r Shutdown15_array
07076390 00000004 R Star15_array_length
07076394 00000384 r Star15_array
07076718 00000004 R Trash25_array_length
0707671c 000009c4 r Trash25_array
070770e0 00000004 R TrashFilled25_array_length
070770e4 000009c4 r TrashFilled25_array
07077aa8 00000004 R UnCheckedCheckbox_array_length
07077aac 00000384 r UnCheckedCheckbox_array
07077e30 00000004 R Unsplash15_array_length
07077e34 00000384 r Unsplash15_array
070781b8 00000004 R UserManualFilled15_array_length
070781bc 00000384 r UserManualFilled15_array
0707857c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
070785c4 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
070785d0 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07078650 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07078664 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0707866c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07078674 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0707867c 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07078698 00000040 r RegNames
070786d8 00000040 r cond_names
07078718 00000010 r shift_names
07078728 0000001c R vtable for CTRPluginFramework::Button
07078744 0000001c R vtable for CTRPluginFramework::ComboBox
07078760 0000001c R vtable for CTRPluginFramework::FloatingButton
07078790 0000001c R vtable for CTRPluginFramework::NumericTextBox
070787ac 0000001c R vtable for CTRPluginFramework::TouchKey
070787c8 00000048 r CTRPluginFramework::g_ctrpf
07078810 00000030 r CTRPluginFramework::g_byme
0707af10 00000014 V vtable for CTRPluginFramework::MenuItem
0707ba04 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>
0707ba20 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0707c98c 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0707c998 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0707c9bc 00000014 R vtable for __gnu_cxx::recursive_init_error
0707c9d0 00000001 R std::nothrow
0707c9d4 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0707c9e0 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0707ca08 0000002c R vtable for __cxxabiv1::__si_class_type_info
0707ca34 00000008 R typeinfo for std::type_info
0707ca3c 0000000d R typeinfo name for std::type_info
0707ca4c 00000018 V typeinfo name for std::_Sp_make_shared_tag
0707ca64 00000008 V typeinfo for std::_Sp_make_shared_tag
0707cc08 0000000c R typeinfo for std::bad_alloc
0707cc14 0000000d R typeinfo name for std::bad_alloc
0707cc24 00000014 R vtable for std::bad_alloc
0707cc38 0000000c R typeinfo for __cxxabiv1::__class_type_info
0707cc44 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0707cc68 0000002c R vtable for __cxxabiv1::__class_type_info
0707ccb8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0707ccc0 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0707ccc8 0000000c R typeinfo for std::bad_exception
0707ccd4 00000008 R typeinfo for std::exception
0707ccdc 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0707ccfc 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0707cd20 00000012 R typeinfo name for std::bad_exception
0707cd34 0000000d R typeinfo name for std::exception
0707cd44 00000014 R vtable for std::bad_exception
0707cd58 0000000c R typeinfo for std::logic_error
0707cd64 0000000c R typeinfo for std::length_error
0707cd70 0000000c R typeinfo for std::out_of_range
0707cd7c 0000000c R typeinfo for std::invalid_argument
0707cd88 00000010 R typeinfo name for std::logic_error
0707cd98 00000011 R typeinfo name for std::length_error
0707cdac 00000011 R typeinfo name for std::out_of_range
0707cdc0 00000015 R typeinfo name for std::invalid_argument
0707cdd8 00000014 R vtable for std::logic_error
0707cdec 00000014 R vtable for std::length_error
0707ce00 00000014 R vtable for std::out_of_range
0707ce14 00000014 R vtable for std::invalid_argument
0707ce78 00000890 R __log2_data
0707d708 00000004 R _global_impure_ptr
0707d70c 00000060 R __month_lengths
0707d7f8 00000014 r fpi.7590
0707d80c 00000014 r fpinan.7626
0707d820 00000028 r tinytens
0707d884 00000010 r blanks.8776
0707d894 00000010 r zeroes.8777
0707d9fc 000000fc R _C_time_locale
0707db6c 00000015 r day_name.6289
0707db84 00000024 r mon_name.6290
0707dba8 00000101 R _ctype_
0707dcc0 00000100 R __hexdig
0707ddc4 0000000c R _C_numeric_locale
0707de18 00000028 R __mprec_bigtens
0707de40 000000c8 R __mprec_tens
0707df08 0000000c r p05.7510
0707df14 0000006c R __action_table
0707df80 00000100 R __chclass
0707e080 0000006c R __state_table
0707e0ec 00000010 r blanks.8755
0707e0fc 00000010 r zeroes.8756
0707e10c 00000022 r basefix.8322
0707e144 000000bc r a1
0707e200 000000bc r a2
0707e2bc 0000005b r a3
0707e318 00000070 r a6
0707e388 000000a2 r a7
0707e42c 00000040 r a8
0707e46c 0000172a r b02cf
0707fb98 00001a7c r d02f4
07081614 0000309c r categories
070847dc R __exidx_start
07084aa4 R __exidx_end
07084aa4 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
07084aa8 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
07084aac 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
07084ab0 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
07084ab4 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07084ab8 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07084abc 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07084ac0 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07084ac4 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
07084ac5 00000001 d CTRPluginFramework::GSP::RunInterruptReceiver
07084ac8 00000004 D CTRPluginFramework::Screenshot::Screens
07084acc 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07084ad0 00000001 D CTRPluginFramework::SystemImpl::Language
07084ad4 00000004 D About15
07084ad8 00000004 D AddFavorite25
07084adc 00000004 D AddFavoriteFilled25
07084ae0 00000004 D CapsLockOn15
07084ae4 00000004 D CapsLockOnFilled15
07084ae8 00000004 D CheckedCheckbox
07084aec 00000004 D ClearSymbol15
07084af0 00000004 D ClearSymbolFilled15
07084af4 00000004 D Clipboard25
07084af8 00000004 D ClipboardFilled25
07084afc 00000004 D CloseWindow20
07084b00 00000004 D CloseWindowFilled20
07084b04 00000004 D Controller15
07084b08 00000004 D Cut25
07084b0c 00000004 D CutFilled25
07084b10 00000004 D DefaultKeyboardCustomIcon
07084b14 00000004 D Duplicate25
07084b18 00000004 D DuplicateFilled25
07084b1c 00000004 D Edit25
07084b20 00000004 D EditFilled25
07084b24 00000004 D EnterKey15
07084b28 00000004 D EnterKeyFilled15
07084b2c 00000004 D File15
07084b30 00000004 D FolderFilled
07084b34 00000004 D GameController15
07084b38 00000004 D GameController25
07084b3c 00000004 D GameControllerFilled25
07084b40 00000004 D Grid15
07084b44 00000004 D HandCursor15
07084b48 00000004 D Info25
07084b4c 00000004 D InfoFilled25
07084b50 00000004 D Keyboard25
07084b54 00000004 D KeyboardFilled25
07084b58 00000004 D Maintenance15
07084b5c 00000004 D More15
07084b60 00000004 D Plus25
07084b64 00000004 D PlusFilled25
07084b68 00000004 D RAM15
07084b6c 00000004 D Restart15
07084b70 00000004 D Rocket40
07084b74 00000004 D Save25
07084b78 00000004 D Search15
07084b7c 00000004 D Settings15
07084b80 00000004 D Shutdown15
07084b84 00000004 D Star15
07084b88 00000004 D Trash25
07084b8c 00000004 D TrashFilled25
07084b90 00000004 D UnCheckedCheckbox
07084b94 00000004 D Unsplash15
07084b98 00000004 D UserManualFilled15
07084b9c 00000001 D CTRPluginFramework::g_keepRunning
07084ba0 00000004 D CTRPluginFramework::FwkSettings::Header
07084ba4 000001f4 D opcode_names
07084d98 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
07084d9c D __dso_handle
07084da0 00000004 D __cxxabiv1::__unexpected_handler
07084da4 00000004 D __cxxabiv1::__terminate_handler
07084da8 00000001 D __fdlib_version
07084dac 00000004 D _impure_ptr
07084db0 00000460 d impure_data
07085210 00000408 D __malloc_av_
07085618 00000004 D __malloc_sbrk_base
0708561c 00000004 D __malloc_trim_threshold
07085620 0000000c d __malloc_recursive_mutex
0708562c 00000004 d __tz_mutex
07085630 00000008 D _tzname
07085638 0000000c D __atexit_recursive_mutex
07085648 00000058 d tzinfo
070856a0 00000002 d numempty
070856a4 0000016c D __global_locale
07085810 00000004 D environ
07085814 0000000c d __env_recursive_mutex
07085820 D __TMC_END__
07085834 d _GLOBAL_OFFSET_TABLE_
07085840 D __tdata_lma
0708584c t __frame_dummy_init_array_entry
0708584c T __init_array_start
0708584c B __preinit_array_end
0708584c B __preinit_array_start
0708584c D __tdata_lma_end
070858b0 t __do_global_dtors_aux_fini_array_entry
070858b0 T __init_array_end
070858b4 T __bss_start__
070858b4 00000004 B CTRPluginFramework::offset
070858b8 000000b4 b CTRPluginFramework::original_speed
0708596c 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
07085970 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
07085974 00000004 B CTRPluginFramework::data
07085978 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0708597c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
07085980 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
07085984 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
07085985 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
07085986 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
07085988 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::cpuPointer
0708598c 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
07085990 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
07085991 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
07085992 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
07085993 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
07085994 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
07085995 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
07085998 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0708599c 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070859a0 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
070859a4 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
070859a6 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
070859a8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
070859ac 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070859b0 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070859b4 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070859b8 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070859c4 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
070859c8 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
070859d4 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070859d8 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070859e4 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
070859e8 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
070859f4 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
070859f8 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07085a04 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
07085a08 00000004 B CTRPluginFramework::Color::Black
07085a0c 00000004 B CTRPluginFramework::Color::White
07085a10 00000004 B CTRPluginFramework::Color::Red
07085a14 00000004 B CTRPluginFramework::Color::Lime
07085a18 00000004 B CTRPluginFramework::Color::Blue
07085a1c 00000004 B CTRPluginFramework::Color::Yellow
07085a20 00000004 B CTRPluginFramework::Color::Cyan
07085a24 00000004 B CTRPluginFramework::Color::Magenta
07085a28 00000004 B CTRPluginFramework::Color::Silver
07085a2c 00000004 B CTRPluginFramework::Color::Gray
07085a30 00000004 B CTRPluginFramework::Color::Maroon
07085a34 00000004 B CTRPluginFramework::Color::Olive
07085a38 00000004 B CTRPluginFramework::Color::Green
07085a3c 00000004 B CTRPluginFramework::Color::Purple
07085a40 00000004 B CTRPluginFramework::Color::Teal
07085a44 00000004 B CTRPluginFramework::Color::Navy
07085a48 00000004 B CTRPluginFramework::Color::BlackGrey
07085a4c 00000004 B CTRPluginFramework::Color::Brown
07085a50 00000004 B CTRPluginFramework::Color::DarkGrey
07085a54 00000004 B CTRPluginFramework::Color::DeepSkyBlue
07085a58 00000004 B CTRPluginFramework::Color::DimGrey
07085a5c 00000004 B CTRPluginFramework::Color::DodgerBlue
07085a60 00000004 B CTRPluginFramework::Color::Gainsboro
07085a64 00000004 B CTRPluginFramework::Color::ForestGreen
07085a68 00000004 B CTRPluginFramework::Color::LimeGreen
07085a6c 00000004 B CTRPluginFramework::Color::Orange
07085a70 00000004 B CTRPluginFramework::Color::SkyBlue
07085a74 00000004 B CTRPluginFramework::Color::Turquoise
07085a78 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07085a80 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07085a88 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07085a8a 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07085a8c 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07085a90 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07085a98 00000180 b CTRPluginFramework::g_keyName
07085c18 00000004 b CTRPluginFramework::g_runningInstance
07085c1c 00000004 B CTRPluginFramework::Controller::_keysDown
07085c20 00000004 B CTRPluginFramework::Controller::_keysHeld
07085c24 00000004 B CTRPluginFramework::Controller::_keysReleased
07085c28 000009c4 b CTRPluginFramework::g_rng
070865f0 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
070865f4 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
070865f8 00000008 B CTRPluginFramework::Preferences::Flags
07086600 00000008 B CTRPluginFramework::Preferences::Backlights
07086608 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07086609 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07086610 000000a8 B CTRPluginFramework::Preferences::Settings
070866b8 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070866d0 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070866e8 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07086700 00000060 b CTRPluginFramework::g_fpsCounter
07086760 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708676c 0000000c B CTRPluginFramework::OSDImpl::RecLock
07086778 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07086790 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
070867a8 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070867ac 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070867b4 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
070867b8 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070867c0 00000004 B CTRPluginFramework::OSDImpl::OSDHook
070867c4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070867cc 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070867f0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070867fc 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
07086804 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
07086810 00000008 b CTRPluginFramework::g_second
07086818 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708681c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708681d 00000001 B CTRPluginFramework::OSDImpl::MessColors
07086820 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07086824 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07086828 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708682c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07086838 00000004 B CTRPluginFramework::RendererPriv::g_customColor
0708683c 00000028 B CTRPluginFramework::Window::BottomWindow
07086864 00000028 B CTRPluginFramework::Window::TopWindow
0708688c 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708689c 00000004 B CTRPluginFramework::__g_hexEditor
070868a0 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070868a4 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070868b4 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
070868b8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070868c8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070868d8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070868dc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070868e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070868e4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070868f4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070868f8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07086908 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708690c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708691c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07086920 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07086928 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07086930 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07086938 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07086940 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07086948 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708694c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
07086958 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
07086964 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07086970 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07086978 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07086980 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07086984 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07086994 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07086998 00000004 b CTRPluginFramework::__pmARinstance
0708699c 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070869a0 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070869a8 00000004 b CTRPluginFramework::g_radioId
070869ac 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070869b0 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
070869b4 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
070869b8 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070869bc 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070869cc 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070869d0 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070869e0 00000004 b CTRPluginFramework::g_mode
070869e4 00000004 b CTRPluginFramework::g_OpenFileLock
070869e8 00000004 b CTRPluginFramework::g_HookMode
070869f0 00000040 b CTRPluginFramework::g_hookExportFile
07086a30 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
07086a34 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
07086a38 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
07086a3c 00000004 b CTRPluginFramework::g_screenshotEntry
07086a40 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07086a44 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07086a48 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07086a4c 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07086a58 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07086a60 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07086a68 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07086a70 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07086a78 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07086a7c 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07086a8c 00000004 B CTRPluginFramework::_pool
07086a90 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
07086a92 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
07086a98 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07086ab0 0000000c B CTRPluginFramework::FSPath::FSMutex
07086abc 0000000c b CTRPluginFramework::Heap::_mutex
07086ac8 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07086acc 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
07086ad0 00000008 b CTRPluginFramework::Heap::g_heapPool
07086ad8 0000000c b sAddrMap
07086ae8 0000000c B CTRPluginFramework::ProcessImpl::blackListedLockThreads
07086af4 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
07086af8 00000004 B CTRPluginFramework::ProcessImpl::Status
07086afc 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
07086b08 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07086b14 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
07086b18 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07086b28 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
07086b2c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
07086b30 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
07086b94 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
07086b98 00000008 B CTRPluginFramework::ProcessImpl::TitleId
07086ba0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
07086ba4 00000004 b CTRPluginFramework::GSP::EventData
07086ba8 00000001 b CTRPluginFramework::GSP::CatchInterrupt
07086bac 00000004 b CTRPluginFramework::GSP::WakeEvent
07086bb0 00000004 b CTRPluginFramework::GSP::GSPEvent
07086bb4 00000008 b CTRPluginFramework::GSP::VBlank0Event
07086bbc 00000008 b CTRPluginFramework::GSP::VBlank1Event
07086bc4 00000004 b CTRPluginFramework::GSP::SharedMemoryBlock
07086bc8 00000008 b CTRPluginFramework::GSP::SharedFrameBuffers
07086bd0 00000008 b CTRPluginFramework::GSP::InterruptReceiverThread
07086bd8 00000004 B CTRPluginFramework::GSP::InterruptReceiverThreadPriority
07086bdc 000000ac b CTRPluginFramework::_topBuf
07086c88 00000004 B CTRPluginFramework::ScreenImpl::Top
07086c8c 000000ac b CTRPluginFramework::_botBuf
07086d38 00000004 B CTRPluginFramework::ScreenImpl::Bottom
07086d3c 00000004 b CTRPluginFramework::GSP::BufferFlags
07086d40 00000004 b CTRPluginFramework::GSP::GSPRegisterInterruptReceiverHook
07086d48 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
07086d50 00000008 B CTRPluginFramework::Screenshot::_timer
07086d58 00000004 b CTRPluginFramework::isReady
07086d5c 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
07086d74 00000004 B CTRPluginFramework::Screenshot::_filecount
07086d78 00000004 B CTRPluginFramework::Screenshot::_mode
07086d7c 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
07086d94 00000004 B CTRPluginFramework::Screenshot::_display
07086d98 00000008 B CTRPluginFramework::Screenshot::Timer
07086da0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
07086da4 00000008 B CTRPluginFramework::Screenshot::_task
07086dac 00000008 B CTRPluginFramework::Screenshot::_readyEvent
07086db4 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
07086dbc 00000004 B CTRPluginFramework::Screenshot::_count
07086dc0 00000008 b CTRPluginFramework::g_sleepEvent
07086dc8 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07086dcc 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
07086dd0 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07086dd4 00000004 B CTRPluginFramework::SystemImpl::AptStatus
07086dd8 00000008 b sMappablePool
07086de0 0000000c b sAddrMap
07086dec 00000004 b cfguRefCount
07086df0 00000004 b cfguHandle
07086df4 00000004 b sharedFontAddr
07086df8 00000004 b srvRefCount
07086dfc 00000004 b srv2Handle
07086e00 00000004 b arbiter
07086e04 00000004 b amRefCount
07086e08 00000004 b amHandle
07086e10 0000000c b aptFirstHook
07086e1c 00000004 b serviceName.7797
07086e20 00000004 b aptRefCount
07086e24 0000000c b aptEvents
07086e30 00000008 b aptSleepEvent
07086e38 00000004 b aptEventHandlerThread
07086e3c 00000004 b aptMessageFunc
07086e40 00000004 b aptMessageFuncData
07086e44 00000001 b aptHomeButtonState
07086e45 00000001 b flagInit.8147
07086e46 00000001 b flagValue.8148
07086e48 00001000 b aptParameters
07087e48 00001000 b __stack
07088e48 00000004 b fsuHandle
07088e50 00000080 b fsExemptArchives
07088ed0 00000004 b fsuRefCount
07088ed4 00000001 B fs
07088ed8 00000004 b gspEventData
07088edc 00000038 b gspEvents
07088f14 0000001c b gspEventCounts
07088f30 00000001 b gspRunEvents
07088f34 00000004 b gspRefCount
07088f38 00000004 b gfxSharedMemory
07088f3c 00000001 b gfxThreadID
07088f40 00000004 b hidRefCount
07088f44 00000004 b kOld
07088f48 00000004 b kHeld
07088f4c 00000004 b cPos
07088f50 00000004 b tPos
07088f54 00000006 b aVec
07088f5a 00000006 b gRate
07088f60 00000004 b kDown
07088f64 00000004 b kUp
07088f68 00000004 b irrstRefCount
07088f6c 00000004 b kHeld
07088f70 00000004 b csPos
07088f78 00000004 b g_onLoadCroLock
07088f7c 00000004 B CTRPluginFramework::g_keepEvent
07088f80 00000008 b CTRPluginFramework::g_mainThread
07088f88 00000004 B CTRPluginFramework::g_continueGameEvent
07088f8c 00000004 B CTRPluginFramework::g_keepThreadHandle
07088f90 00000004 b g_onLoadCroHook
07088f98 00000008 B CTRPluginFramework::_sdmcArchive
07088fa0 00000004 B __ctru_heap
07088fa4 00000004 B __ctru_heap_size
07088fa8 00000004 B CTRPluginFramework::g_resumeEvent
07088fb0 00001000 b CTRPluginFramework::keepThreadStack
07089fb0 00000004 B g_gspEventThreadPriority
07089fb4 00000004 B CTRPluginFramework::System::OnAbort
07089fb8 00000018 b __threads
07089fd0 0000000c b __mutex
07089fe0 00000008 B CTRPluginFramework::Time::Zero
07089fe8 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07089fec 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708a004 0000000c B CTRPluginFramework::g_codeTypes
0708a010 00000001 b CTRPluginFramework::g_condAgainstData
0708a011 00000001 b CTRPluginFramework::g_newCondDataToggle
0708a014 00000004 b CTRPluginFramework::__arCodeEditor
0708a018 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708a01c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708a028 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708a02c 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708a030 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708a040 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708a048 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708a050 00000004 b CTRPluginFramework::tileData
0708a054 00000004 b CTRPluginFramework::glyph
0708a058 00000004 b CTRPluginFramework::defaultSysFont
0708a05c 0000000c B CTRPluginFramework::Font::_mutex
0708a068 00000004 B CTRPluginFramework::g_fontAllocated
0708a06c 00000004 B CTRPluginFramework::g_glyphAllocated
0708a070 00000004 b CTRPluginFramework::__converter
0708a078 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708a080 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708a090 00000001 b CTRPluginFramework::g_progressLoop
0708a094 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708a098 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708a0a8 00000004 b CTRPluginFramework::g_ctrpfString
0708a0ac 00000004 b CTRPluginFramework::g_bymeString
0708a0b0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708a0b8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708a0c0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708a0c8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708a0d0 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708a0d4 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708a0d8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708a0e0 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708a0e8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708a0ec 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708a0f4 0000001c B CTRPluginFramework::HookManager::_singleton
0708a110 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708a1b8 00000004 b plgLdrRefCount
0708a1bc 00000004 b plgLdrHandle
0708a1c0 00000004 b plgLdrArbiter
0708a1c4 00000004 b plgEvent
0708a1c8 00000004 b plgReply
0708a1cc 00000004 b acRefCount
0708a1d0 00000004 b acHandle
0708a1d4 00000004 b g_mainThreadVars
0708a1d8 b saved_stack
0708a1e0 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708a1e4 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708a1e8 00000008 B CTRPluginFramework::ARHandler::Offset
0708a1f0 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708a1f4 00000010 B CTRPluginFramework::ARHandler::Data
0708a204 00000008 B CTRPluginFramework::ARHandler::Storage
0708a20c 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708a210 00000001 b CTRPluginFramework::ToggleFloat
0708a214 00000004 b CTRPluginFramework::g_context
0708a218 00000fa0 b CTRPluginFramework::arStack
0708b1b8 b completed.10434
0708b1bc b object.10439
0708b1d4 00000004 b (anonymous namespace)::__new_handler
0708b1d8 00000010 b (anonymous namespace)::emergency_pool
0708b1e8 0000000c b eh_globals
0708b1f4 00000010 V std::string::_Rep::_S_empty_rep_storage
0708b204 00000028 B __malloc_current_mallinfo
0708b22c 00000004 B __malloc_max_sbrked_mem
0708b230 00000004 B __malloc_max_total_mem
0708b234 00000004 B __malloc_top_pad
0708b238 0000000b b __tzname_dst
0708b244 0000000b b __tzname_std
0708b250 00000004 b prev_tzenv
0708b254 00000004 B _daylight
0708b258 00000004 B _timezone
0708b25c 00000004 b initial_env
0708b260 00000004 b heap_start.7420
0708b264 00000004 B fake_heap_end
0708b268 00000004 B fake_heap_start
0708b26c 00000048 B __syscalls
0708b2b4 00000004 B g_sharedFont
0708b2b8 00000004 B charPerSheet
0708b2bc 00000004 B gspEventThread
0708b2c0 00000004 B gspEvent
0708b2c4 00000004 B gspGpuHandle
0708b2c8 00000004 B gspSharedMemHandle
0708b2cc 00000004 B gspThreadEventHandle
0708b2d0 00000004 B hidMemHandle
0708b2d4 00000004 B hidHandle
0708b2d8 00000014 B hidEvents
0708b2ec 00000004 B hidSharedMem
0708b2f0 00000004 B irrstMemHandle
0708b2f4 00000004 B irrstEvent
0708b2f8 00000004 B irrstHandle
0708b2fc 00000004 B irrstSharedMem
0708b300 00000004 B __ctru_linear_heap
0708b304 00000004 B __tmp
0708b308 00000004 B __ctru_linear_heap_size
0708b30c 00000004 B __system_retAddr
0708b310 B __tls_start
0708b338 B __bss_end__
0708b338 A __end__
0708b338 B __tls_end
