00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_uldivmod
07000e8c t deregister_tm_clones
07000eb8 t register_tm_clones
07000ef0 t __do_global_dtors_aux
07000f34 t frame_dummy
07000f68 00000154 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
070010bc 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
07001118 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001158 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001198 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
070011d8 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
07001214 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07001250 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
070012b8 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
0700131c 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
070013dc 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
07001438 0000006c t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.31]
07001438 0000006c t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.32]
070014a4 000000c4 t unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .part.72]
07001568 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001568 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001588 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
07001588 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
070015a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070015a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070015c8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.96]
07001650 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
070016fc 000001dc t CTRPluginFramework::ToggleTouchscreenForceOn()
070018d8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
070018d8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001914 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001950 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
0700198c 00000084 T CTRPluginFramework::IsInRace()
07001a10 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001a78 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001acc 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001b40 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001c04 00000124 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001d28 000000a8 T CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)
07001dd0 000000bc T CTRPluginFramework::GetRacePointer()
07001e8c 00000030 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
07001ebc 00000030 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07001eec 0000002c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07001f18 00000030 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07001f48 0000002c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
07001f74 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07001f78 0000003c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07001fb4 000000a0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
07002054 000000bc T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07002110 00000280 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
07002390 0000022c T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
070025bc 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
0700273c 00000038 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
07002774 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
070028a4 0000009c T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07002940 000000a4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
070029e4 0000004c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002a30 00000050 T CTRPluginFramework::GetFNsPointer()
07002a80 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002ae8 00000070 T CTRPluginFramework::GetOldPointer5CC()
07002b58 00000034 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002b8c 00000070 T CTRPluginFramework::GetOldPointer5D0()
07002bfc 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002c44 0000009c T CTRPluginFramework::GetItemPointer()
07002ce0 00000168 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002e48 000000ac T CTRPluginFramework::GetTotalPlayers()
07002ef4 000001ec T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
070030e0 00000058 T CTRPluginFramework::GetTime()
07003138 0000002c T CTRPluginFramework::GetMinutes()
07003164 0000001c T CTRPluginFramework::GetSeconds()
07003180 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07003238 00000070 T CTRPluginFramework::SubToTime(unsigned short)
070032a8 00000428 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
070036d0 0000005c T CTRPluginFramework::writeItem(unsigned long)
0700372c 000000e8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003814 0000001c T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07003830 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003914 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003954 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003994 0000026c T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003c00 0000026c T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003e6c 00000048 T CTRPluginFramework::writeVR(unsigned long)
07003eb4 000000d8 T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07003f8c 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07003fa8 00000064 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
0700400c 0000004c T CTRPluginFramework::writeLocation(unsigned long)
07004058 00000064 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
070040bc 00000064 T CTRPluginFramework::writeFlag(unsigned short)
07004120 000000f8 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
07004218 00001698 T CTRPluginFramework::main()
070058b0 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
070058b4 00000004 T CTRPluginFramework::OnProcessExit()
070058b8 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005a3c 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005a80 00000104 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005b84 00000170 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
07005cf4 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework6offsetE
07005de4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
07005e5c 00000038 T OnLoadCro
07005e94 00000170 T CTRPluginFramework::Initialize()
07006004 000000b0 T CTRPluginFramework::ThreadExit()
070060b4 00000060 T abort
07006114 0000003c T CTRPluginFramework::ThreadInit(void*)
07006150 0000008c T LaunchMainThread
070061dc 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
070062c0 00000408 T CTRPluginFramework::KeepThreadMain(void*)
070066c8 0000000c t _GLOBAL__sub_I_g_mainThread
070066d4 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006720 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700679c 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07006860 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
070068d8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070068d8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070068f0 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070068f0 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070068fc 00000008 T CTRPluginFramework::Color::ToU32() const
07006908 00000120 T CTRPluginFramework::Color::Fade(double)
07006a28 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07006a68 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07006ae4 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07006cf8 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07006e18 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006e18 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006e88 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07006e88 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07006eb4 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07006ec8 00000044 T CTRPluginFramework::PluginMenu::Run() const
07006f0c 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07006f14 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07006f24 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07006f30 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006f30 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006f70 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07006f70 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07006f98 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07006fa8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006fa8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006ff4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07006ff4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07007024 00000010 T CTRPluginFramework::MenuEntry::Disable() const
07007034 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
0700703c 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
07007044 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
0700704c 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007110 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070071b8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070071b8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007200 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007200 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007268 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007268 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007294 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0700729c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070072b8 00000028 T CTRPluginFramework::Keyboard::Open() const
070072e0 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007358 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007408 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700745c 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070074c4 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
070074cc 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
070074d4 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07007570 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070075fc 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070076a4 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0700778c 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007818 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
070078c0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070079a8 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007a34 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07007adc 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07007bc4 00000028 t __tcf_0
07007bec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07007c64 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07007c6c 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07007cec 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07007d68 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07007e40 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007e40 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007e5c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07007e5c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07007e9c 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07007eac 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07007f6c 00000020 T CTRPluginFramework::HotkeyManager::Count()
07007f8c 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070080fc 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008228 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008350 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
070083c0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008448 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
0700848c 0000004c T CTRPluginFramework::Directory::Close() const
070084d8 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
070084ec 00000008 T CTRPluginFramework::Directory::IsOpen() const
070084f4 00000040 T CTRPluginFramework::Directory::Directory()
070084f4 00000040 T CTRPluginFramework::Directory::Directory()
07008534 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07008568 00000060 T CTRPluginFramework::Directory::~Directory()
07008568 00000060 T CTRPluginFramework::Directory::~Directory()
070085c8 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070085c8 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070085e8 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008680 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008718 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070087b8 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700888c 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008920 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008a6c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008a6c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008ac4 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008b00 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07008b00 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07008b1c 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07008c8c 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
07008ca8 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07008dd0 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
07008e48 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07008eb0 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07008f5c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07008fa0 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0700917c 000001b4 T CTRPluginFramework::Directory::_List() const
07009330 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009410 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070094f4 0000000c T CTRPluginFramework::FwkSettings::Get()
07009500 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
070095e0 00000010 T CTRPluginFramework::Process::GetHandle()
070095f0 00000010 T CTRPluginFramework::Process::GetTitleID()
07009600 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700965c 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009694 00000024 T CTRPluginFramework::Process::GetTextSize()
070096b8 00000008 T CTRPluginFramework::Process::Pause()
070096c0 00000010 T CTRPluginFramework::Process::Play(unsigned long)
070096d0 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07009778 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700977c 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
070097c8 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07009800 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
07009824 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
07009840 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
07009864 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070098a0 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070098c8 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
070098e8 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
07009908 0000002c T CTRPluginFramework::Hook::Hook()
07009908 0000002c T CTRPluginFramework::Hook::Hook()
07009934 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700994c 00000230 T CTRPluginFramework::Hook::Enable()
07009b7c 0000005c T CTRPluginFramework::Hook::Disable()
07009bd8 00000014 T CTRPluginFramework::Mutex::Mutex()
07009bd8 00000014 T CTRPluginFramework::Mutex::Mutex()
07009bec 00000028 T CTRPluginFramework::Mutex::~Mutex()
07009bec 00000028 T CTRPluginFramework::Mutex::~Mutex()
07009c14 00000004 T CTRPluginFramework::Mutex::Lock()
07009c18 00000014 T CTRPluginFramework::Mutex::TryLock()
07009c2c 00000004 T CTRPluginFramework::Mutex::Unlock()
07009c30 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07009c30 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07009c54 0000004c T CTRPluginFramework::Lock::~Lock()
07009c54 0000004c T CTRPluginFramework::Lock::~Lock()
07009ca0 00000074 T CTRPluginFramework::File::Close() const
07009d14 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
07009dcc 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
07009ebc 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07009ee8 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07009fcc 00000008 T CTRPluginFramework::File::Tell() const
07009fd4 00000030 T CTRPluginFramework::File::Rewind() const
0700a004 00000034 T CTRPluginFramework::File::Flush() const
0700a038 0000006c T CTRPluginFramework::File::GetSize() const
0700a0a4 00000008 T CTRPluginFramework::File::IsOpen() const
0700a0ac 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700a0c0 00000044 T CTRPluginFramework::File::File()
0700a0c0 00000044 T CTRPluginFramework::File::File()
0700a104 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a198 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a26c 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a2f0 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a390 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700a498 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a498 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a504 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700a54c 00000014 T CTRPluginFramework::Time::Time()
0700a54c 00000014 T CTRPluginFramework::Time::Time()
0700a560 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700a580 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700a598 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700a5a0 00000028 T CTRPluginFramework::Seconds(float)
0700a5c8 00000010 T CTRPluginFramework::Milliseconds(int)
0700a5d8 00000008 T CTRPluginFramework::Microseconds(long long)
0700a5e0 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a5f4 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a608 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a61c 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a634 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700a680 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700a698 00000010 T CTRPluginFramework::System::IsNew3DS()
0700a6a8 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700a6bc 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700a6d8 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700a6f4 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700a710 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700a72c 0000002c T CTRPluginFramework::Controller::Update()
0700a758 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700a7d0 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a82c 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700a888 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700a8e4 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700a928 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700a9a8 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700aa5c 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700ab98 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700abd0 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700abec 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700ae40 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700ae40 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700ae84 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b5c4 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b5cc 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b610 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700b71c 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700b784 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700b7a0 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700b7dc 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700b800 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b824 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700b89c 00000024 W CTRPluginFramework::File::~File()
0700b89c 00000024 W CTRPluginFramework::File::~File()
0700b8c0 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700b8f0 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700b9fc 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700bbc8 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700bea8 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700bf74 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700c030 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700c0ec 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700c148 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700c198 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700c218 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700c3e8 00000004 T CTRPluginFramework::Preferences::Initialize()
0700c3ec 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700c4d8 00000010 T CTRPluginFramework::Glyph::Width() const
0700c4e8 00000060 T CTRPluginFramework::Font::Initialize()
0700c548 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700c89c 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700cba0 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700ccac 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700cd14 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700cd34 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700cd64 00000020 W CTRPluginFramework::Renderer::GetContext()
0700cd84 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700cde4 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700cf4c 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700d0b8 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700d158 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700d340 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700d370 00000028 T CTRPluginFramework::Window::~Window()
0700d370 00000028 T CTRPluginFramework::Window::~Window()
0700d398 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700d398 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700d438 00000064 T CTRPluginFramework::Window::Draw() const
0700d49c 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700d574 00000018 T CTRPluginFramework::Window::DrawButton() const
0700d58c 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700d5a4 00000018 T CTRPluginFramework::Window::MustClose() const
0700d5bc 0000002c T CTRPluginFramework::Window::Close() const
0700d5e8 00000004 T CTRPluginFramework::Window::GetRect() const
0700d5ec 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700d618 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700d6c0 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700d7f0 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700d8bc 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700da08 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700db4c 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700db84 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700dd24 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700dee8 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700e11c 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700e18c 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700e1f8 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700e20c 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700e230 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700e24c 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700e27c 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700e2ac 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700e2d4 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700e2fc 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700e31c 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700e358 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700e3a0 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700e3e4 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700e500 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700e520 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700e590 00000038 t __tls_init
0700e590 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700e5c8 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700e604 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e678 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e6e4 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e76c 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e800 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e890 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
0700e908 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
0700e978 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0700e99c 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0700e9c0 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700e9c0 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700ea00 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0700ea08 00000008 T CTRPluginFramework::BMPImage::Width() const
0700ea10 00000008 T CTRPluginFramework::BMPImage::Height() const
0700ea18 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0700ea20 00000010 T CTRPluginFramework::BMPImage::data() const
0700ea30 0000001c T CTRPluginFramework::BMPImage::end() const
0700ea4c 00000010 W CTRPluginFramework::BMPImage::DataClear()
0700ea5c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700ea5c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700eb04 0000003c T CTRPluginFramework::BMPImage::Unload()
0700eb40 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
0700ec7c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700ec84 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700eed4 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700f0a8 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700f0f0 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0700f120 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700f1f4 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
0700f274 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0700f298 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700f3b4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700f3b4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700f408 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700f728 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f728 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f774 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700f7c0 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700fad0 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700fb90 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
0700fcc0 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0700fe2c 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0700fe6c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700fe6c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700fe8c 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0700fffc 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
070100f0 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07010184 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0701022c 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070104b8 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
070104b8 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
070104fc 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07010550 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
070106d8 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07010784 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
070107c8 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07010e48 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010ff0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07010ff0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0701101c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0701101c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0701103c 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
070110ec 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07011148 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07011148 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070111cc 0000000c T CTRPluginFramework::OSDImpl::Lock()
070111d8 0000001c T CTRPluginFramework::OSDImpl::TryLock()
070111f4 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07011200 000000cc T CTRPluginFramework::OSDImpl::Draw()
070112cc 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
070113a4 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
070113d0 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07011418 0000020c T CTRPluginFramework::InstallOSD()
07011624 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
0701166c 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07011744 00000108 T CTRPluginFramework::OSDImpl::Update()
0701184c 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
07011ed4 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07011f3c 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07011fa8 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
070121c8 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
070121f4 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07012230 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701226c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
070122a8 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
070122e4 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07012320 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701234c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07012388 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
070123c4 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07012400 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701243c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07012468 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
070124a4 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
070124d0 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
070124fc 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
07012538 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07012564 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
070125a0 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070125cc 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07012600 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701263c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07012668 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
070126a4 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070126d0 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
070126fc 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07012728 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07012754 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07012780 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
070127ac 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070127d8 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07012804 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07012840 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0701286c 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
070128fc 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
070128fc 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0701291c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0701291c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0701294c 0000001c W CTRPluginFramework::TextBox::~TextBox()
07012968 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012968 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012a48 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07012a50 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07012a50 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07012ae4 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07012b04 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07012c8c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07012cac 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07012cc8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07012ce4 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07012cec 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07012cf4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07012cf4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07012d14 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07012df8 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
070134f4 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0701354c 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07013630 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0701366c 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0701379c 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
070138d8 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07013990 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07013a98 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07013a98 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07013b1c 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07013c10 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07013d48 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07013ee0 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07013ee0 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07013fdc 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07013fdc 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701417c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
070141f4 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070141f4 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070142d0 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070142d0 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070143e8 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07014424 00000058 T CTRPluginFramework::Menu::CloseAll()
0701447c 00000030 T CTRPluginFramework::Menu::~Menu()
0701447c 00000030 T CTRPluginFramework::Menu::~Menu()
070144ac 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070144b8 00000008 T CTRPluginFramework::Menu::GetFolder() const
070144c0 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
070144c8 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
07014508 00000384 T CTRPluginFramework::Menu::Draw() const
0701488c 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
07014918 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
070149a4 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07014bcc 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07014d40 00000068 T CTRPluginFramework::Menu::ShowNote()
07014da8 00000008 T CTRPluginFramework::Menu::CloseNote()
07014db0 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07014db8 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07014df8 00000044 T CTRPluginFramework::Menu::Pop()
07014e3c 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07014f00 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07014fb8 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07014fc0 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014fc0 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014fe8 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07015004 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07015004 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070150d8 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070150f4 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070150f4 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070151ac 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070151ac 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015268 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701527c 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
070152cc 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
070152e4 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07015308 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
070153b0 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
070153c0 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070153e4 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07015444 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07015454 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07015464 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07015474 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07015504 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07015620 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
07015690 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07015734 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07015760 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07015760 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07015790 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07015790 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070157fc 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07015950 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
0701598c 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701598c 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015af8 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07015b50 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015c04 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015ce4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07015d5c 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07015d5c 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07016220 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0701622c 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0701654c 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07016654 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07016aa8 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07016bc4 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07016c50 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07016c8c 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07016cb8 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07016d88 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07016e08 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07016e84 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07016f08 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07016f64 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07016fa4 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
070170d4 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07017410 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07017624 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0701763c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07017650 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07017664 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07017678 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070177b4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070177b8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070177bc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
070177d4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
070177ec 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07017804 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0701781c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07017834 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0701784c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07017864 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0701787c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07017894 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
070178d8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07017950 00000064 t CTRPluginFramework::MenuHotkeyModifier()
070179b4 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07017a4c 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07017bf0 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07017d74 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07017e20 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017f44 0000005c t CTRPluginFramework::Reboot()
07017fa0 00000064 t CTRPluginFramework::Shutdown()
07018004 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
070181f8 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
07018bf8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07018bf8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07018d88 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07018ea4 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07018f30 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07018f70 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070190e0 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701918c 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
070197a4 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
070197e0 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701981c 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701982c 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701982c 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019904 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07019904 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07019940 0000001c T CTRPluginFramework::SubMenu::operator()()
0701995c 00000200 T CTRPluginFramework::SubMenu::Draw()
07019b5c 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07019c20 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07019c28 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
07019c44 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019de8 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019e34 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
07019e34 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
07019e38 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
07019e3c 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
07019e40 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
07019fdc 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701a0d8 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701a214 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701a28c 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701a4dc 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701a730 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701a92c 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701ab0c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701ab28 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701abe4 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701ac00 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701ac70 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701aca0 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701acdc 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701ad84 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701adb8 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701ade8 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701ae74 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701af0c 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701afd8 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701b094 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701b144 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701b2d8 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701b2e8 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701b2f8 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701b308 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701b308 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701b57c 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701b5c0 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701b788 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701b84c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701b8a4 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701b988 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701bb0c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701bb38 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701bb38 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701bba0 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701bbc8 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701bd1c 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701bd90 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701bf30 00000160 T CTRPluginFramework::HexEditor::_Update()
0701c090 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701c330 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701c344 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c344 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c36c 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c388 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701c4a0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c4a0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c570 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c570 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c644 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701c64c 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701c660 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701c66c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701c674 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701c698 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701c6c8 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701c6e4 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701c74c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c74c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c76c 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c788 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c788 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c81c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c81c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c87c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c87c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c8dc 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701c8e0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701c958 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701ca18 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701ca4c 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701ce44 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701ce5c 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701d120 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701d120 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701d2e0 00000158 T CTRPluginFramework::GuideReader::Draw()
0701d438 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701d4ac 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701d514 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701d514 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701d55c 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701d5a8 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701d5b4 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701d5e0 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701d63c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701d6c4 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701d728 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701d728 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701d788 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d788 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d934 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d934 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701daf0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701daf0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701db54 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701db5c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701db64 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701db6c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701db74 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701db7c 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701dce0 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701e138 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701e1c8 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701e248 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701e2cc 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701e42c 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0701e6ac 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701ec18 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701ec80 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701ecd0 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701ed40 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701ed48 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0701ee0c 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701efe8 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701f04c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701f078 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701f078 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701f098 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701f164 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701f220 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701f2e4 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701f850 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701fdc0 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0701fe78 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
070208cc 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07020984 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
070215c8 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702160c 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
070216c8 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0702188c 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
070218dc 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07021934 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0702197c 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07021ca0 00000254 T CTRPluginFramework::KeyboardImpl::Run()
07021ef4 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07021f6c 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07021f80 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07021fa4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
0702202c 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
0702213c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07022198 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
07022230 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07022230 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07022480 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
070224b4 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07022508 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0702252c 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07022554 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07022630 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07022754 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07022920 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022920 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022948 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07022ac0 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07022c3c 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07022da4 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
07022de0 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07022f28 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07022f58 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0702302c 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0702322c 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
070232a4 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0702336c 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07023524 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
070236cc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07023744 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
070237a0 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070238b8 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0702391c 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07023a88 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07023a88 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07023ee0 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0702429c 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0702430c 000000f4 t CTRPluginFramework::ClearSearchFolder()
07024400 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07024434 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0702465c 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07024684 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070246f4 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070247bc 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
070247f8 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07024a60 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07024b44 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07024b84 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07024bb4 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07024c88 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07024f14 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070252cc 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
07025324 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07025324 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07025350 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
0702535c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
07025368 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
070254c4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07025500 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
0702550c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
07025518 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
07025538 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
070256d4 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07025730 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0702588c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
070258a4 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070259c8 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07025a8c 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07025c3c 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07025d00 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07025d80 00000044 T CTRPluginFramework::Search::UpdateProgress()
07025dc4 00000194 T CTRPluginFramework::Search::CheckNextRegion()
07025f58 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
07025fd0 00000008 T CTRPluginFramework::Search::GetHeader() const
07025fd8 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07026020 0000000c T CTRPluginFramework::Search::GetType() const
0702602c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07026044 00000070 T CTRPluginFramework::Search::WriteHeader()
070260b4 00000058 T CTRPluginFramework::Search::WriteResults()
0702610c 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07026158 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07026398 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07026398 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070265d8 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070266a0 00000088 T CTRPluginFramework::Search::CreateIndexTable()
07026728 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026728 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070268d0 00000080 T CTRPluginFramework::Search::Cancel()
07026950 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07026a68 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07026b2c 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07026bec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07026c64 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07026ecc 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
0702715c 00000048 W CTRPluginFramework::Search::~Search()
0702715c 00000048 W CTRPluginFramework::Search::~Search()
070271a4 00000044 T CTRPluginFramework::Search32::~Search32()
070271a4 00000044 T CTRPluginFramework::Search32::~Search32()
070271e8 0000001c T CTRPluginFramework::Search32::~Search32()
07027204 0000001c W CTRPluginFramework::Search::~Search()
07027220 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07027220 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07027448 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027448 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027468 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07027468 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070274e0 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027638 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07027684 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
070277c8 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0702790c 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0702793c 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07027a00 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07027a3c 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07027a74 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027b54 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07027ba0 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07027eb8 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07028030 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702831c 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
070284c0 0000002c T CTRPluginFramework::Screenshot::Initialize()
070284ec 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07028598 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702862c 0000003c T CTRPluginFramework::SystemImpl::Status()
07028668 000000c8 T CTRPluginFramework::HookManager::Init()
07028730 00000018 T CTRPluginFramework::HookManager::Lock()
07028748 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
070287f0 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
07028850 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
07028850 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
07028888 00000038 T CTRPluginFramework::Scheduler::Core::Core()
07028888 00000038 T CTRPluginFramework::Scheduler::Core::Core()
070288c0 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07028908 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07028a14 000000d4 T CTRPluginFramework::Scheduler::Initialize()
07028ae8 00000050 T CTRPluginFramework::Scheduler::Exit()
07028b38 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07028b38 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07028b80 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
07028bec 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07028cbc 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07028cec 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
07028d08 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
07028e10 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
07028e28 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07028e28 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07028e6c 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
07028ec0 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
07028fa0 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
070290d8 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07029174 00000030 T CTRPluginFramework::ScreenImpl::Copy()
070291a4 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
070291ac 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07029210 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07029274 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
070292e4 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07029358 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
070293c8 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
07029498 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702955c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070295b8 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
07029658 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
070296b0 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702976c 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
07029844 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
070298ac 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
070298b4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
070298bc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
070298c4 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
070298e0 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
070298fc 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
07029954 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
07029984 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
070299e0 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07029a58 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07029a7c 00000004 t addrMapNodeDestructor(rbtree_node*)
07029a80 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07029bb0 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07029bb8 00000070 T CTRPluginFramework::Heap::Free(void*)
07029c28 0000000c T CTRPluginFramework::Heap::SpaceFree()
07029c34 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07029c64 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029d68 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07029f44 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07029f44 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702a008 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702a068 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702a074 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702a0b4 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702a0c4 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702a0dc 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702a0f0 00000004 T Kernel::Initialize()
0702a0f4 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702a10c 0000000c T KProcess::GetCurrent()
0702a118 00000024 T KProcess::PatchCore2Access()
0702a13c 0000002c T KProcess::PatchCategory(unsigned long)
0702a168 00000014 T KProcess__PatchCategory
0702a17c 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702a1a8 00000014 T KProcess__PatchMaxPriority
0702a1bc 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702a240 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702a274 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702a274 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702a294 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702a378 00000018 T IsPaused
0702a390 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702a3cc 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702a3e8 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702a404 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702a46c 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702a4e8 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702a584 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702a634 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702a6fc 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702a7d0 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702a868 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702a8c4 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a8c4 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a954 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702aab4 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702aaf0 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702ad8c 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702ae84 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702ae8c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702aeb8 00000034 W MemPool::DelBlock(MemBlock*)
0702aeec 0000005c T MemPool::CoalesceRight(MemBlock*)
0702af48 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702b060 000000fc T MemPool::Deallocate(MemChunk const&)
0702b15c 00000020 T MemPool::GetFreeSpace()
0702b17c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702b1a0 00000004 t addrMapNodeDestructor(rbtree_node*)
0702b1a4 00000154 T vramMemAlign
0702b2f8 00000008 T vramAlloc
0702b300 00000070 T vramFree
0702b370 00000030 t _GLOBAL__sub_I_vramMemAlign
0702b3a0 000001d8 T threadCreate
0702b578 0000002c T threadFree
0702b5a4 00000024 T threadJoin
0702b5c8 00000020 T threadGetCurrent
0702b5e8 0000003c T threadExit
0702b624 0000003c t _thread_begin
0702b660 00000050 T srvExit
0702b6b0 00000034 T srvRegisterClient
0702b6e4 00000064 T srvInit
0702b748 00000068 T srvGetServiceHandleDirect
0702b7b0 00000004 T srvGetServiceHandle
0702b7b4 00000034 T srvPublishToSubscriber
0702b7e8 00000034 T errfExit
0702b81c 00000058 T errfInit
0702b874 0000003c T ERRF_Throw
0702b8b0 00000090 T ERRF_ExceptionHandler
0702b940 000000a8 T fontEnsureMapped
0702b9e8 00000110 T fontGlyphIndexFromCodePoint
0702baf8 00000074 T fontGetCharWidthInfo
0702bb6c 0000000c T __sync_init
0702bb78 00000018 T __sync_fini
0702bb90 00000018 T LightLock_Init
0702bba8 0000008c T LightLock_Lock
0702bc34 00000034 T LightLock_TryLock
0702bc68 00000050 T LightLock_Unlock
0702bcb8 00000018 T RecursiveLock_Init
0702bcd0 00000030 T RecursiveLock_Lock
0702bd00 00000044 T RecursiveLock_TryLock
0702bd44 00000034 T RecursiveLock_Unlock
0702bd78 00000030 T LightEvent_Init
0702bda8 00000060 T LightEvent_Clear
0702be08 00000064 T LightEvent_Pulse
0702be6c 000000b4 T LightEvent_Signal
0702bf20 000000a8 T LightEvent_Wait
0702bfc8 000000a0 T cfguInit
0702c068 00000034 T cfguExit
0702c09c 00000044 T CFGU_GetConfigInfoBlk2
0702c0e0 00000014 T CFGU_GetSystemLanguage
0702c0f4 00000028 t fsSession
0702c11c 00000044 t fsSessionForArchive
0702c160 00000038 T fsExit
0702c198 00000028 T FSUSER_Initialize
0702c1c0 000000b0 T fsInit
0702c270 00000080 T FSUSER_OpenFile
0702c2f0 00000068 T FSUSER_DeleteFile
0702c358 000000a4 T FSUSER_RenameFile
0702c3fc 00000068 T FSUSER_DeleteDirectoryRecursively
0702c464 00000080 T FSUSER_CreateFile
0702c4e4 00000070 T FSUSER_CreateDirectory
0702c554 000000a4 T FSUSER_RenameDirectory
0702c5f8 0000006c T FSUSER_OpenDirectory
0702c664 00000074 T FSUSER_OpenArchive
0702c6d8 00000058 T FSFILE_Read
0702c730 00000060 T FSFILE_Write
0702c790 00000038 T FSFILE_GetSize
0702c7c8 00000028 T FSFILE_SetSize
0702c7f0 0000003c T FSFILE_Close
0702c82c 00000024 T FSFILE_Flush
0702c850 00000054 T FSDIR_Read
0702c8a4 0000003c T FSDIR_Close
0702c8e0 00000104 T aptSendCommand
0702c9e4 0000006c T APT_CheckNew3DS
0702ca50 00000048 T APT_GetSharedFont
0702ca98 000000a0 T amInit
0702cb38 00000034 T amExit
0702cb6c 00000088 T acInit
0702cbf4 00000034 T acExit
0702cc28 000000bc T hidExit
0702cce4 00000034 T hidCheckSectionUpdateTime
0702cd18 00000174 T hidScanInput
0702ce8c 00000010 T hidKeysHeld
0702ce9c 00000010 T hidKeysDown
0702ceac 00000010 T hidKeysUp
0702cebc 00000018 T hidTouchRead
0702ced4 00000090 T HIDUSER_GetHandles
0702cf64 00000174 T hidInit
0702d0d8 000000e8 t gspEventThreadMain
0702d1c0 000000a0 T gspInitEventHandler
0702d260 00000040 T gspExitEventHandler
0702d2a0 0000008c T gspExit
0702d32c 0000005c T gspWaitForEvent
0702d388 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702d3ec 000000dc T gspInit
0702d4c8 00000034 T irrstCheckSectionUpdateTime
0702d4fc 00000070 T irrstScanInput
0702d56c 0000001c T irrstKeysHeld
0702d588 00000050 T IRRST_GetHandles
0702d5d8 00000034 T IRRST_Initialize
0702d60c 00000128 T irrstInit
0702d734 0000002c T IRRST_Shutdown
0702d760 000000a8 T irrstExit
0702d808 00000028 t __ctru_get_reent
0702d830 000000ec T __system_initSyscalls
0702d91c 000000ac T utf8_to_utf16
0702d9c8 00000138 T decode_utf8
0702db00 0000005c T decode_utf16
0702db5c 000000d4 T utf16_to_utf8
0702dc30 000000e0 T encode_utf8
0702dd10 00000054 T encode_utf16
0702dd64 00000054 T rbtree_find
0702ddb8 00000014 t is_black
0702ddcc 000002bc T rbtree_remove
0702e088 00000050 T rbtree_node_next
0702e0d8 00000090 T rbtree_rotate
0702e168 00000174 t do_insert
0702e2dc 00000008 T rbtree_insert
0702e2e4 00000010 T rbtree_init
0702e2f4 T LoadCROHooked
0702e308 T AR__ExecuteRoutine
0702e330 t stackBak
0702e338 T svcCustomBackdoor
0702e340 T svcConvertVAToPA
0702e348 T svcFlushDataCacheRange
0702e350 T svcMapProcessMemoryEx
0702e364 T svcUnmapProcessMemoryEx
0702e36c T svcControlProcess
0702e374 T svcQueryMemory
0702e3a4 T svcCreateThread
0702e3c4 T svcExitThread
0702e3cc T svcSleepThread
0702e3d4 T svcSetThreadPriority
0702e3dc T svcCreateEvent
0702e3f0 T svcSignalEvent
0702e3f8 T svcClearEvent
0702e400 T svcMapMemoryBlock
0702e408 T svcUnmapMemoryBlock
0702e410 T svcCreateAddressArbiter
0702e424 T svcArbitrateAddress
0702e43c T svcCloseHandle
0702e444 T svcWaitSynchronization
0702e44c T svcWaitSynchronizationN
0702e474 T svcGetSystemTick
0702e47c T svcGetSystemInfo
0702e494 T svcGetProcessInfo
0702e4ac T svcConnectToPort
0702e4c0 T svcSendSyncRequest
0702e4c8 T svcOpenProcess
0702e4dc T svcGetProcessId
0702e4f0 T svcBreak
0702e4f8 T svcInvalidateProcessDataCache
0702e500 T svcFlushProcessDataCache
0702e508 T svcKernelSetState
0702e510 T svcQueryProcessMemory
0702e534 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e534 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e57c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e57c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e5b8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e5b8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e5f4 00000008 T CTRPluginFramework::MessageBox::operator()() const
0702e5fc 00000030 t CTRPluginFramework::GetCurrentTime()
0702e62c 00000014 T CTRPluginFramework::Clock::Clock()
0702e62c 00000014 T CTRPluginFramework::Clock::Clock()
0702e640 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702e640 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702e648 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
0702e680 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0702e6b0 00000044 T CTRPluginFramework::Clock::Restart()
0702e6f4 00000014 T CTRPluginFramework::Touch::IsDown()
0702e708 00000028 T CTRPluginFramework::Touch::GetPosition()
0702e730 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e730 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e7b4 00000048 T CTRPluginFramework::Task::~Task()
0702e7b4 00000048 T CTRPluginFramework::Task::~Task()
0702e7fc 00000030 T CTRPluginFramework::Task::Start() const
0702e82c 00000044 T CTRPluginFramework::Task::Wait() const
0702e870 00000014 T CTRPluginFramework::Task::Status() const
0702e884 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e884 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e8ac 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0702e92c 00000048 T CTRPluginFramework::LineWriter::Flush()
0702e974 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e974 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e990 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e9fc 00000018 T CTRPluginFramework::LineWriter::Close()
0702ea14 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702ead8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
0702eb50 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702ee8c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702ee8c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702eeac 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ef34 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ef34 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702f060 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0702f09c 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f19c 00000084 T CTRPluginFramework::ARCode::Update()
0702f220 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702f220 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702f244 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0702f26c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702f26c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702f324 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702f324 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702f358 00000040 T CTRPluginFramework::ARCodeContext::Update()
0702f398 00000090 T CTRPluginFramework::ARCodeContext::Clear()
0702f428 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702f500 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702f500 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702f520 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
0702f538 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f62c 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
0702f648 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f75c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f76c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
0702f7e4 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702f7fc 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702f850 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f894 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f8dc 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702fdb0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702fdb0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702fdf4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702fdf4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702fe08 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702fe28 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702ffa0 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
070300c4 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070307f8 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07030848 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07030848 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070308b0 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070308cc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070308cc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030918 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07030a34 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07030ac4 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07030bdc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07030c64 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07030cc0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030cc0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030d38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030d38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07030d38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030d38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07030d88 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070320dc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070320dc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07032270 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07032524 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
070325ac 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070325f0 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07032604 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07032640 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070327a8 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070327e4 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07032848 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0703286c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07032894 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07032894 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070328bc 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07032c3c 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
070332c0 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0703330c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070333c4 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07033838 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07033d04 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07033dfc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07033e84 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07033ec0 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070341e4 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07034260 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
070342cc 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07034304 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07034380 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703474c 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07034950 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
070349f0 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07034aac 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07034b68 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07034c14 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07034ca0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07034e18 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07034f2c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07034fd4 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703503c 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
070350cc 00000160 T ARM_Disasm::Decode01(unsigned long)
0703522c 00000028 T ARM_Disasm::Decode10(unsigned long)
07035254 0000007c T ARM_Disasm::Decode11(unsigned long)
070352d0 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07035338 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07035388 00000118 T ARM_Disasm::DecodeALU(unsigned long)
070354a0 000000c4 T ARM_Disasm::Decode00(unsigned long)
07035564 00000030 T ARM_Disasm::Decode(unsigned long)
07035594 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
0703566c 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07035950 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07035c40 00000020 T CTRPluginFramework::Button::~Button()
07035c40 00000020 T CTRPluginFramework::Button::~Button()
07035c60 0000001c T CTRPluginFramework::Button::~Button()
07035c7c 00000040 T CTRPluginFramework::Button::operator()()
07035cbc 00000148 T CTRPluginFramework::Button::Draw()
07035e04 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07035f58 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035f58 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703607c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703607c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703609c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703609c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07036130 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07036130 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07036144 00000018 T CTRPluginFramework::Button::Enable(bool)
0703615c 00000010 T CTRPluginFramework::Button::Enable()
0703616c 00000010 T CTRPluginFramework::Button::Disable()
0703617c 00000010 T CTRPluginFramework::Button::Lock()
0703618c 00000010 T CTRPluginFramework::Button::Execute()
0703619c 00000018 T CTRPluginFramework::Button::SetState(bool)
070361b4 00000010 T CTRPluginFramework::Button::GetState() const
070361c4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070361c4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070361d8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070361d8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070361f8 00000024 T CTRPluginFramework::UIContainer::Draw()
0703621c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07036250 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07036314 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07036354 00000094 T CTRPluginFramework::ComboBox::Draw()
070363e8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070363e8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07036434 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07036450 000000a8 T CTRPluginFramework::ComboBox::operator()()
070364f8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070364f8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036544 0000003c T CTRPluginFramework::ComboBox::Clear()
07036580 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070365d0 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07036654 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036654 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036658 00000014 T CTRPluginFramework::FloatingButton::Draw()
0703666c 00000014 T CTRPluginFramework::FloatingButton::operator()()
07036680 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036694 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07036854 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07036854 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07036894 00000008 W CTRPluginFramework::Drawable::operator()()
0703689c 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070368a0 000002f0 T CTRPluginFramework::TextBox::Draw()
07036b90 00000094 T CTRPluginFramework::TextBox::TextBox()
07036b90 00000094 T CTRPluginFramework::TextBox::TextBox()
07036c24 0000000c T CTRPluginFramework::TextBox::Open() const
07036c30 0000000c T CTRPluginFramework::TextBox::Close() const
07036c3c 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07036c44 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07036e8c 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07036e98 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07036f30 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07036fe4 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0703703c 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0703706c 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07037128 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
070371e4 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
070373ac 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070373ac 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070374f0 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070375d8 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070375d8 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037750 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037750 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070378a8 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07037920 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07037bd4 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07037d70 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037d70 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037e30 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07037ecc 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07037f6c 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07037f84 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07037fb4 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038054 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038054 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038104 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038104 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070381b0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070381b0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038230 00000040 T CTRPluginFramework::TouchKey::Clear()
07038270 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038270 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038290 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
070382ac 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070382b4 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07038314 00000060 T CTRPluginFramework::TouchKey::Draw()
07038374 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07038410 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070384d4 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070384d4 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07038624 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038624 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038644 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038660 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070386dc 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07038714 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
0703877c 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07038874 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07038884 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07038894 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0703889c 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070388a8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070388a8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07038910 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07038984 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
070389fc 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070389fc 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07038a48 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07038b08 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07038c40 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07038c68 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038ccc 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07038fdc 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
070390d0 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07039318 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
07039644 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
070396cc 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
07039764 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
070397e0 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07039894 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07039a20 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07039a68 00000148 T CTRPluginFramework::SearchMenu::_Export()
07039bb0 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
07039d08 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
07039dec 00000030 W std::__cxx11::to_string(unsigned long)
07039e1c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07039e1c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07039ed0 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07039f54 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703a49c 00000230 T CTRPluginFramework::SearchMenu::Update()
0703a6cc 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703abdc 000000e4 T CTRPluginFramework::Converter::Converter()
0703abdc 000000e4 T CTRPluginFramework::Converter::Converter()
0703acc0 00000010 T CTRPluginFramework::Converter::Instance()
0703acd0 00000108 T CTRPluginFramework::Converter::_Draw()
0703add8 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703add8 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703adec 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703b008 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b48c 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b914 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703bd90 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c3b8 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ccc4 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d5d4 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703dea8 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703eae8 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f38c 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703fcc8 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070405ec 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041388 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041fec 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042730 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042b38 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043218 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070434a8 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043750 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070439e0 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07043a14 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043d38 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07043d5c 00000004 t addrMapNodeDestructor(rbtree_node*)
07043d60 000000d8 T mappableAlloc
07043e38 00000050 T mappableFree
07043e88 00000090 T __system_allocateHeaps
07043f18 0000005c t getSysTime
07043f78 000000fc T __libctru_gtod
07044074 00000008 T envGetHandle
0704407c 00000004 T envDestroyHandles
07044080 00000020 T __libctru_exit
070440a0 00000020 T __appExit
070440c0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
070440c0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
070440ec 00000018 T CTRPluginFramework::LineReader::~LineReader()
070440ec 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044104 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0704420c 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
0704426c 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07044274 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07044298 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
070442bc 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
070442e0 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07044308 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07044330 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07044358 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07044428 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0704629c 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0704630c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0704632c 00000004 T operator delete[](void*)
07046330 00000004 T operator new[](unsigned int)
07046334 0000005c T __cxa_guard_acquire
07046390 0000000c T __cxa_guard_release
0704639c 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
070463fc 00000070 T __cxa_init_primary_exception
0704646c 00000054 T __cxa_throw
070464c0 000000b0 T __cxa_rethrow
07046570 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07046570 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07046590 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070465bc 00000004 T std::exception::~exception()
070465bc 00000004 T std::exception::~exception()
070465c0 00000004 T std::bad_exception::~bad_exception()
070465c0 00000004 T std::bad_exception::~bad_exception()
070465c4 0000000c T transaction clone for std::exception::what() const
070465c4 0000000c T std::exception::what() const
070465d0 0000000c T transaction clone for std::bad_exception::what() const
070465d0 0000000c T std::bad_exception::what() const
070465dc 00000018 T std::bad_exception::~bad_exception()
070465f4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070465f4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046614 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046640 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070466ac 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07046780 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070467c4 0000000c T __cxa_get_globals_fast
070467d0 0000000c T __cxa_get_globals
070467dc 00000004 T operator delete(void*, unsigned int)
070467e0 000000d0 T __cxa_begin_catch
070468b0 000000d8 T __cxa_end_catch
07046988 00000004 T std::type_info::~type_info()
07046988 00000004 T std::type_info::~type_info()
0704698c 00000008 T std::type_info::__is_pointer_p() const
0704698c 00000008 T std::type_info::__is_function_p() const
07046994 0000004c T std::type_info::operator==(std::type_info const&) const
070469e0 00000008 T __cxa_pure_virtual
070469e8 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07046b50 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
07046bb0 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07046c90 0000074c T __gxx_personality_v0
070473dc 00000004 T operator delete(void*)
070473e0 0000005c T operator new(unsigned int)
0704743c 00000010 T __aeabi_atexit
0704744c 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
0704751c 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
070475d0 00000044 T __cxa_allocate_exception
07047614 00000030 T __cxa_free_exception
07047644 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07047684 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
070476e0 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070476f4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
070476f4 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07047714 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07047740 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070477a8 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070477d4 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07047818 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07047830 00000014 T std::__detail::_List_node_base::_M_unhook()
07047844 0000002c T std::__throw_bad_alloc()
07047870 00000040 T std::__throw_logic_error(char const*)
070478b0 00000040 T std::__throw_invalid_argument(char const*)
070478f0 00000040 T std::__throw_length_error(char const*)
07047930 00000040 T std::__throw_out_of_range(char const*)
07047970 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
070479ec 00000038 T std::logic_error::logic_error(char const*)
070479ec 00000038 T std::logic_error::logic_error(char const*)
07047a24 00000020 T std::invalid_argument::invalid_argument(char const*)
07047a24 00000020 T std::invalid_argument::invalid_argument(char const*)
07047a44 00000020 T std::length_error::length_error(char const*)
07047a44 00000020 T std::length_error::length_error(char const*)
07047a64 00000020 T std::out_of_range::out_of_range(char const*)
07047a64 00000020 T std::out_of_range::out_of_range(char const*)
07047a84 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07047b08 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07047b0c 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
07047bbc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07047bbc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07047bfc 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07047c50 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07047c64 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07047c88 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07047cac 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07047d64 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07047e74 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07047ee8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047ee8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047f54 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047f54 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047f78 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07048008 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0704811c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07048188 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
070481f4 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048238 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048250 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07048354 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
0704838c 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07048614 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0704864c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048698 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
070486f8 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0704878c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704879c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070487ac 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
070487d8 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07048820 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07048868 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07048910 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
07048920 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07048990 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070489c0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
07048a0c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
07048abc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048abc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048aec 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07048b64 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07048bd4 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07048c4c 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07048d4c 00000014 T std::get_new_handler()
07048d60 00000034 T __cxxabiv1::__terminate(void (*)())
07048d94 00000018 T std::terminate()
07048dac 0000000c T __cxxabiv1::__unexpected(void (*)())
07048db8 00000018 T std::unexpected()
07048dd0 00000014 T std::get_terminate()
07048de4 00000014 T std::get_unexpected()
07048df8 0000000c T std::bad_alloc::what() const
07048e04 00000020 T std::bad_alloc::~bad_alloc()
07048e04 00000020 T std::bad_alloc::~bad_alloc()
07048e24 0000002c T std::bad_alloc::~bad_alloc()
07048e50 T __cxa_end_cleanup
07048e60 00000138 T __cxa_type_match
07048f98 000000b4 T __cxa_begin_cleanup
0704904c 000000b4 T __gnu_end_cleanup
07049100 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07049170 0000002c T __cxa_call_terminate
0704919c 0000013c T __cxa_call_unexpected
070492d8 00000008 T std::logic_error::what() const
070492e0 00000064 T std::logic_error::~logic_error()
070492e0 00000064 T std::logic_error::~logic_error()
07049344 0000001c T std::logic_error::~logic_error()
07049360 00000020 T std::invalid_argument::~invalid_argument()
07049360 00000020 T std::invalid_argument::~invalid_argument()
07049380 00000028 T std::invalid_argument::~invalid_argument()
070493a8 00000020 T std::length_error::~length_error()
070493a8 00000020 T std::length_error::~length_error()
070493c8 00000028 T std::length_error::~length_error()
070493f0 00000020 T std::out_of_range::~out_of_range()
070493f0 00000020 T std::out_of_range::~out_of_range()
07049410 00000028 T std::out_of_range::~out_of_range()
07049438 00000174 T ceil
070495ac 000000b8 T ceilf
07049668 00000174 T floor
070497dc 00000088 T roundf
07049868 00000020 T log2
07049888 00000100 T sqrtf
07049988 0000015c T log
07049ae4 000000e8 T __ieee754_sqrtf
07049bd0 000002c4 T __ieee754_log
07049e94 00000008 T matherr
07049ea0 00000010 T nan
07049eb0 0000002c T __aeabi_f2lz
07049eb0 0000002c T __fixsfdi
07049edc 0000002c T __aeabi_d2lz
07049edc 0000002c T __fixdfdi
07049f08 00000050 T __aeabi_f2ulz
07049f08 00000050 T __fixunssfdi
07049f58 00000050 T __aeabi_d2ulz
07049f58 00000050 T __fixunsdfdi
07049fa8 00000158 T __udivmoddi4
0704a100 00000018 t selfrel_offset31
0704a118 0000008c t search_EIT_table
0704a1a4 00000040 t __gnu_unwind_get_pr_addr
0704a1e4 00000118 t get_eit_entry
0704a2fc 00000088 t restore_non_core_regs
0704a384 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704a398 00000004 t _Unwind_DebugHook
0704a39c 00000068 t unwind_phase2
0704a404 00000134 t unwind_phase2_forced
0704a538 000000a8 T __gnu_Unwind_RaiseException
0704a5e0 00000024 T __gnu_Unwind_ForcedUnwind
0704a604 00000074 T __gnu_Unwind_Resume
0704a678 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704a698 00000004 T _Unwind_Complete
0704a69c 00000018 T _Unwind_DeleteException
0704a6b4 00000068 T _Unwind_VRS_Get
0704a71c 0000002c t _Unwind_GetGR
0704a748 00000068 T _Unwind_VRS_Set
0704a7b0 0000002c t _Unwind_SetGR
0704a7dc 000000c0 T __gnu_Unwind_Backtrace
0704a89c 0000044c t __gnu_unwind_pr_common
0704ace8 00000008 T __aeabi_unwind_cpp_pr0
0704acf0 00000008 W __aeabi_unwind_cpp_pr1
0704acf8 00000008 W __aeabi_unwind_cpp_pr2
0704ad00 00000418 T _Unwind_VRS_Pop
0704b118 00000060 t next_unwind_byte
0704b178 0000002c t _Unwind_GetGR.constprop.0
0704b1a4 00000004 t unwind_UCB_from_context
0704b1a8 000003c8 T __gnu_unwind_execute
0704b570 00000048 T __gnu_unwind_frame
0704b5b8 00000010 T _Unwind_GetRegionStart
0704b5c8 0000001c T _Unwind_GetLanguageSpecificData
0704b5e4 00000008 T _Unwind_GetDataRelBase
0704b5ec 00000008 T _Unwind_GetTextRelBase
0704b5f4 00000010 T ctime
0704b604 00000014 T __cxa_atexit
0704b618 0000000c T __errno
0704b624 0000007c T __libc_init_array
0704b6a0 0000001c T isspace
0704b6bc 0000001c T isxdigit
0704b6d8 0000001c T localtime
0704b6f4 00000364 T localtime_r
0704ba58 00000024 T __locale_mb_cur_max
0704ba7c 00000008 T __locale_ctype_ptr_l
0704ba84 00000024 T __locale_ctype_ptr
0704baa8 00000020 T memalign
0704bac8 00000158 T _memalign_r
0704bc20 00000018 T malloc
0704bc38 00000018 T free
0704bc50 000007a8 T _malloc_r
0704c3f8 000002fc T __utf8_mbtowc
0704c6f4 00000100 T memchr
0704c7f4 000000fc T memcmp
0704c8f0 0000010c T memcpy
0704c9fc 0000013c T memmove
0704cb38 00000110 T memset
0704cc48 0000000c T __malloc_lock
0704cc54 0000000c T __malloc_unlock
0704cc60 00000044 T rand
0704cca4 000000c8 T snprintf
0704cd6c 00000064 T sprintf
0704cdd0 00000008 T __seofread
0704cdd8 000000f0 T strcpy
0704cec8 00000158 t iso_year_adjust
0704d020 00001024 t __strftime
0704e044 00000050 T strftime
0704e094 0000005c T strlen
0704e0f0 000000f8 T strncmp
0704e1e8 000000d8 T strncpy
0704e2c0 00000054 t sulp
0704e318 00001464 T _strtod_l
0704f780 000000b8 T strtof
0704f838 000001bc t _strtol_l.isra.0
0704f9f4 00000050 T _strtol_r
0704fa48 00000260 t _strtoull_l.isra.0
0704fca8 00000050 T _strtoull_r
0704fcf8 000001d0 t _strtoul_l.isra.0
0704fec8 00000050 T _strtoul_r
0704ff18 00000054 T strtoul
0704ff6c 000074a0 t get_arg
07057410 00003e2c T _svfprintf_r
0705b23c 00000038 T time
0705b274 00000218 T __tzcalc_limits
0705b48c 0000000c T __tz_lock
0705b498 0000000c T __tz_unlock
0705b4a4 00000010 T _tzset_unlocked
0705b4b4 0000049c T _tzset_unlocked_r
0705b950 000000a0 T _vsnprintf_r
0705b9f0 00000038 T vsnprintf
0705ba28 000000a0 T _wcrtomb_r
0705bac8 00000020 T _wcsrtombs_r
0705bae8 000000e8 T __utf8_wctomb
0705bbd0 0000000c T abs
0705bbdc 0000001c T asctime
0705bbf8 00000078 T asctime_r
0705bc70 000000f4 T __register_exitproc
0705bd64 000001bc t quorem
0705bf20 00001224 T _dtoa_r
0705d144 000000f8 T _malloc_trim_r
0705d23c 000002e4 T _free_r
0705d520 00000104 t rshift
0705d624 000007f8 T __gethex
0705de1c 00000060 T __match
0705de7c 00000254 T __hexnan
0705e0d0 000000c8 T _findenv_r
0705e198 00000018 T _getenv_r
0705e1b0 0000000c T __gettzinfo
0705e1bc 00000280 T gmtime_r
0705e43c 0000000c T labs
0705e448 00000008 T __localeconv_l
0705e450 00000024 T _localeconv_r
0705e474 00000088 T _Balloc
0705e4fc 0000001c T _Bfree
0705e518 000000d0 T __multadd
0705e5e8 000000e0 T __s2b
0705e6c8 00000058 T __hi0bits
0705e720 0000009c T __lo0bits
0705e7bc 00000020 T __i2b
0705e7dc 000001d4 T __multiply
0705e9b0 00000100 T __pow5mult
0705eab0 000000e8 T __lshift
0705eb98 0000005c T __mcmp
0705ebf4 00000168 T __mdiff
0705ed5c 00000078 T __ulp
0705edd4 000000d0 T __b2d
0705eea4 00000104 T __d2b
0705efa8 00000084 T __ratio
0705f02c 00000088 T __copybits
0705f0b4 00000078 T __any_on
0705f12c 0000000c T nanf
0705f138 0000009c T frexp
0705f1d4 00000064 T siprintf
0705f238 00000074 T siscanf
0705f2ac 000000c8 T sniprintf
0705f374 000074a0 t get_arg
07066814 00000188 T __ssprint_r
0706699c 0000295c T _svfiprintf_r
070692f8 000000dc T _sungetc_r
070693d4 0000006c T __ssrefill_r
07069440 000000c8 T _sfread_r
07069508 00001d84 T __ssvfiscanf_r
0706b28c 000000a4 T __submore
0706b330 00000170 T _wcsnrtombs_l
0706b4a0 00000064 T _wcsnrtombs_r
0706b504 00000090 T _calloc_r
0706b594 0000000c T __env_lock
0706b5a0 0000000c T __env_unlock
0706b5ac 00000074 T iswspace
0706b620 000001e0 t __jp2uc
0706b800 000000c4 T _jp2uc
0706b8c4 000000b4 T _mbrtowc_r
0706b978 000004d0 T _realloc_r
0706be48 000000cc T __sccl
0706bf14 00000274 t _strtoll_l.isra.0
0706c188 00000050 T _strtoll_r
0706c1d8 0000002c T _gettimeofday_r
0706c204 00000070 T _sbrk_r
0706c274 00000018 T __libc_lock_acquire
0706c28c 00000018 T __libc_lock_release
0706c2a4 00000018 T __libc_lock_acquire_recursive
0706c2bc 00000018 T __libc_lock_release_recursive
0706c2d4 00000028 T __getreent
0706c2fc T _fini
0706c314 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0706c4fc 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0706c508 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0706c51c 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0706c538 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0706c548 00000030 r ._186
0706c578 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0706c588 00000090 r ._184
0706c618 00000010 r ._185
0706c664 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706c684 00000a00 r font
0706d0a4 00000058 r CTRPluginFramework::g_OSDPattern
0706d12c 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706d140 00000038 r CTRPluginFramework::stable
0706d178 00000038 r CTRPluginFramework::ktable
0706d1b0 00000048 r CTRPluginFramework::g_ctrpf
0706d1f8 00000030 r CTRPluginFramework::g_byme
0706d254 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0706d26c 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706d284 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0706d29c 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0706d2b4 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706d2bc 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706d2d8 00000038 R vtable for CTRPluginFramework::Search
0706d310 00000038 R vtable for CTRPluginFramework::Search32
0706d348 00000005 r CSWTCH.74
0706d350 00000004 R Search15_array_length
0706d354 00000384 r Search15_array
0706d6d8 00000004 R UnCheckedCheckbox_array_length
0706d6dc 00000384 r UnCheckedCheckbox_array
0706da60 00000004 R Unsplash15_array_length
0706da64 00000384 r Unsplash15_array
0706dde8 00000004 R Plus25_array_length
0706ddec 000009c4 r Plus25_array
0706e7b0 00000004 R GameControllerFilled25_array_length
0706e7b4 000009c4 r GameControllerFilled25_array
0706f178 00000004 R About15_array_length
0706f17c 00000384 r About15_array
0706f500 00000004 R Trash25_array_length
0706f504 000009c4 r Trash25_array
0706fec8 00000004 R Cut25_array_length
0706fecc 000009c4 r Cut25_array
07070890 00000004 R CloseWindow20_array_length
07070894 00000640 r CloseWindow20_array
07070ed4 00000004 R AddFavoriteFilled25_array_length
07070ed8 000009c4 r AddFavoriteFilled25_array
0707189c 00000004 R ClearSymbolFilled15_array_length
070718a0 00000384 r ClearSymbolFilled15_array
07071c24 00000004 R ClipboardFilled25_array_length
07071c28 000009c4 r ClipboardFilled25_array
070725ec 00000004 R CheckedCheckbox_array_length
070725f0 00000384 r CheckedCheckbox_array
07072974 00000004 R CutFilled25_array_length
07072978 000009c4 r CutFilled25_array
0707333c 00000004 R CapsLockOn15_array_length
07073340 00000384 r CapsLockOn15_array
070736c4 00000004 R TrashFilled25_array_length
070736c8 000009c4 r TrashFilled25_array
0707408c 00000004 R RAM15_array_length
07074090 00000384 r RAM15_array
07074414 00000004 R More15_array_length
07074418 00000384 r More15_array
0707479c 00000004 R InfoFilled25_array_length
070747a0 000009c4 r InfoFilled25_array
07075164 00000004 R CloseWindowFilled20_array_length
07075168 00000640 r CloseWindowFilled20_array
070757a8 00000004 R HandCursor15_array_length
070757ac 00000384 r HandCursor15_array
07075b30 00000004 R EnterKey15_array_length
07075b34 00000384 r EnterKey15_array
07075eb8 00000004 R Duplicate25_array_length
07075ebc 000009c4 r Duplicate25_array
07076880 00000004 R Settings15_array_length
07076884 00000384 r Settings15_array
07076c08 00000004 R File15_array_length
07076c0c 00000384 r File15_array
07076f90 00000004 R AddFavorite25_array_length
07076f94 000009c4 r AddFavorite25_array
07077958 00000004 R Edit25_array_length
0707795c 000009c4 r Edit25_array
07078320 00000004 R DuplicateFilled25_array_length
07078324 000009c4 r DuplicateFilled25_array
07078ce8 00000004 R Save25_array_length
07078cec 000009c4 r Save25_array
070796b0 00000004 R Clipboard25_array_length
070796b4 000009c4 r Clipboard25_array
0707a078 00000004 R Info25_array_length
0707a07c 000009c4 r Info25_array
0707aa40 00000004 R EditFilled25_array_length
0707aa44 000009c4 r EditFilled25_array
0707b408 00000004 R KeyboardFilled25_array_length
0707b40c 000009c4 r KeyboardFilled25_array
0707bdd0 00000004 R PlusFilled25_array_length
0707bdd4 000009c4 r PlusFilled25_array
0707c798 00000004 R Shutdown15_array_length
0707c79c 00000384 r Shutdown15_array
0707cb20 00000004 R ClearSymbol15_array_length
0707cb24 00000384 r ClearSymbol15_array
0707cea8 00000004 R Maintenance15_array_length
0707ceac 00000384 r Maintenance15_array
0707d230 00000004 R Controller15_array_length
0707d234 00000384 r Controller15_array
0707d5b8 00000004 R Grid15_array_length
0707d5bc 00000384 r Grid15_array
0707d940 00000004 R Keyboard25_array_length
0707d944 000009c4 r Keyboard25_array
0707e308 00000004 R CapsLockOnFilled15_array_length
0707e30c 00000384 r CapsLockOnFilled15_array
0707e690 00000004 R UserManualFilled15_array_length
0707e694 00000384 r UserManualFilled15_array
0707ea18 00000004 R Rocket40_array_length
0707ea1c 00001900 r Rocket40_array
0708031c 00000004 R Star15_array_length
07080320 00000384 r Star15_array
070806a4 00000004 R EnterKeyFilled15_array_length
070806a8 00000384 r EnterKeyFilled15_array
07080a2c 00000004 R GameController25_array_length
07080a30 000009c4 r GameController25_array
070813f4 00000004 R FolderFilled_array_length
070813f8 00000384 r FolderFilled_array
0708177c 00000004 R Restart15_array_length
07081780 00000384 r Restart15_array
07081b34 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07081b50 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07081b5c 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07081bdc 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07081bf0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07081bf8 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07081c00 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07081c08 00000040 r RegNames
07081c48 00000040 r cond_names
07081c88 00000010 r shift_names
07081c98 0000001c R vtable for CTRPluginFramework::Button
07081cb4 0000001c R vtable for CTRPluginFramework::ComboBox
07081cd0 0000001c R vtable for CTRPluginFramework::FloatingButton
07081cec 0000001c R vtable for CTRPluginFramework::TextBox
07081d08 0000001c R vtable for CTRPluginFramework::TouchKey
07081d24 0000001c R vtable for CTRPluginFramework::NumericTextBox
07083ffc 00000014 V vtable for CTRPluginFramework::MenuItem
070846d4 0000001c V vtable for CTRPluginFramework::MenuEntryTools
07085a90 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07085a9c 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07085ac0 00000014 R vtable for __gnu_cxx::recursive_init_error
07085af8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07085b00 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07085b08 0000000c R typeinfo for std::bad_exception
07085b14 00000008 R typeinfo for std::exception
07085b1c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07085b3c 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07085b60 00000012 R typeinfo name for std::bad_exception
07085b74 0000000d R typeinfo name for std::exception
07085b84 00000014 R vtable for std::bad_exception
07085b98 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07085ba4 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07085bcc 0000002c R vtable for __cxxabiv1::__si_class_type_info
07085bf8 00000008 R typeinfo for std::type_info
07085c00 0000000d R typeinfo name for std::type_info
07085c10 0000000c R typeinfo for __cxxabiv1::__class_type_info
07085c1c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07085c40 0000002c R vtable for __cxxabiv1::__class_type_info
07085e68 0000000c R typeinfo for std::bad_alloc
07085e74 0000000d R typeinfo name for std::bad_alloc
07085e84 00000014 R vtable for std::bad_alloc
07085e98 0000000c R typeinfo for std::logic_error
07085ea4 0000000c R typeinfo for std::length_error
07085eb0 0000000c R typeinfo for std::out_of_range
07085ebc 0000000c R typeinfo for std::invalid_argument
07085ec8 00000010 R typeinfo name for std::logic_error
07085ed8 00000011 R typeinfo name for std::length_error
07085eec 00000011 R typeinfo name for std::out_of_range
07085f00 00000015 R typeinfo name for std::invalid_argument
07085f18 00000014 R vtable for std::logic_error
07085f2c 00000014 R vtable for std::length_error
07085f40 00000014 R vtable for std::out_of_range
07085f54 00000014 R vtable for std::invalid_argument
07085f74 00000004 R _global_impure_ptr
07085fc0 00000060 R __month_lengths
070860ac 00000014 r fpi.7439
070860c0 00000014 r fpinan.7475
070860d8 00000028 r tinytens
07086144 00000010 r blanks.8562
07086154 00000010 r zeroes.8563
07086164 000000fc R _C_time_locale
0708642c 00000015 r day_name.6011
07086444 00000024 r mon_name.6012
07086468 00000101 R _ctype_
0708657c 00000100 R __hexdig
07086680 00000028 R __mprec_bigtens
070866a8 000000c8 R __mprec_tens
07086770 0000000c r p05.7353
0708677c 0000006c R __action_table
070867e8 00000100 R __chclass
070868e8 0000006c R __state_table
07086954 00000010 r blanks.8541
07086964 00000010 r zeroes.8542
07086974 00000022 r basefix.8096
070869ac 000000bc r a1
07086a68 000000bc r a2
07086b24 0000005b r a3
07086b80 00000070 r a6
07086bf0 000000a2 r a7
07086c94 00000040 r a8
07086cd4 0000172a r b02cf
07088400 00001a7c r d02f4
07089fa0 R __exidx_start
0708a1b0 R __exidx_end
0708a1b0 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
0708a1b4 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
0708a1b8 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
0708a1bc 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
0708a1c0 00000001 D CTRPluginFramework::g_keepRunning
0708a1c4 00000004 D CTRPluginFramework::FwkSettings::Header
0708a1c8 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0708a1cc 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0708a1d0 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
0708a1d4 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0708a1d8 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0708a1dc 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0708a1e0 00000004 D CTRPluginFramework::Screenshot::Screens
0708a1e4 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708a1e8 00000001 D CTRPluginFramework::SystemImpl::Language
0708a1e9 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
0708a1ec 00000004 D Search15
0708a1f0 00000004 D UnCheckedCheckbox
0708a1f4 00000004 D Unsplash15
0708a1f8 00000004 D Plus25
0708a1fc 00000004 D GameControllerFilled25
0708a200 00000004 D About15
0708a204 00000004 D Trash25
0708a208 00000004 D Cut25
0708a20c 00000004 D CloseWindow20
0708a210 00000004 D AddFavoriteFilled25
0708a214 00000004 D ClearSymbolFilled15
0708a218 00000004 D ClipboardFilled25
0708a21c 00000004 D CheckedCheckbox
0708a220 00000004 D CutFilled25
0708a224 00000004 D CapsLockOn15
0708a228 00000004 D TrashFilled25
0708a22c 00000004 D RAM15
0708a230 00000004 D More15
0708a234 00000004 D InfoFilled25
0708a238 00000004 D CloseWindowFilled20
0708a23c 00000004 D HandCursor15
0708a240 00000004 D EnterKey15
0708a244 00000004 D Duplicate25
0708a248 00000004 D Settings15
0708a24c 00000004 D File15
0708a250 00000004 D AddFavorite25
0708a254 00000004 D Edit25
0708a258 00000004 D DuplicateFilled25
0708a25c 00000004 D Save25
0708a260 00000004 D Clipboard25
0708a264 00000004 D Info25
0708a268 00000004 D EditFilled25
0708a26c 00000004 D KeyboardFilled25
0708a270 00000004 D PlusFilled25
0708a274 00000004 D Shutdown15
0708a278 00000004 D ClearSymbol15
0708a27c 00000004 D Maintenance15
0708a280 00000004 D Controller15
0708a284 00000004 D Grid15
0708a288 00000004 D Keyboard25
0708a28c 00000004 D CapsLockOnFilled15
0708a290 00000004 D UserManualFilled15
0708a294 00000004 D Rocket40
0708a298 00000004 D Star15
0708a29c 00000004 D EnterKeyFilled15
0708a2a0 00000004 D GameController25
0708a2a4 00000004 D FolderFilled
0708a2a8 00000004 D Restart15
0708a2ac 000001f4 D opcode_names
0708a4a0 D __dso_handle
0708a4a4 00000004 D __cxxabiv1::__unexpected_handler
0708a4a8 00000004 D __cxxabiv1::__terminate_handler
0708a4ac 00000001 D __fdlib_version
0708a4b0 00000004 D _impure_ptr
0708a4b8 00000460 d impure_data
0708a918 0000016c D __global_locale
0708aa84 00000408 D __malloc_av_
0708ae8c 00000004 D __malloc_sbrk_base
0708ae90 00000004 D __malloc_trim_threshold
0708ae94 0000000c d __malloc_lock_object
0708aea0 00000004 d __tz_lock_object
0708aea4 00000008 D _tzname
0708aeac 0000000c D __atexit_lock
0708aeb8 00000040 d tzinfo
0708aef8 00000004 D environ
0708aefc 0000000c d __env_lock_object
0708af08 D __TMC_END__
0708af18 d _GLOBAL_OFFSET_TABLE_
0708af24 D __tdata_lma
0708af30 t __frame_dummy_init_array_entry
0708af30 T __init_array_start
0708af30 B __preinit_array_end
0708af30 B __preinit_array_start
0708af30 D __tdata_lma_end
0708af8c t __do_global_dtors_aux_fini_array_entry
0708af8c T __init_array_end
0708af90 B __c_bss_start
0708af90 00000004 B CTRPluginFramework::offset
0708af94 000000b4 b CTRPluginFramework::original_speed
0708b048 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
0708b04c 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
0708b050 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708b054 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708b058 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708b05c 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708b068 00000004 B CTRPluginFramework::data
0708b06c 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708b06d 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
0708b070 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0708b074 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0708b078 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0708b07c 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0708b080 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0708b084 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
0708b088 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
0708b089 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0708b08c 00000004 B CTRPluginFramework::g_FNsPointer
0708b090 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0708b094 00000004 B CTRPluginFramework::g_itemPointer
0708b098 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
0708b09c 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
0708b09d 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
0708b09e 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0708b09f 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0708b0a0 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0708b0a1 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0708b0a4 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0708b0a8 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0708b0ac 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
0708b0b0 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0708b0b4 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0708b0b6 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0708b0b8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708b0bc 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
0708b0c0 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
0708b0cc 0000000c b CTRPluginFramework::g_items
0708b0d8 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0708b0dc 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0708b0e8 0000000c b CTRPluginFramework::speed
0708b0f4 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
0708b0f8 00000004 B CTRPluginFramework::g_oldRacePointer5CC
0708b0fc 00000004 B CTRPluginFramework::g_raceCondition
0708b100 00000004 B CTRPluginFramework::g_racePointer
0708b104 00000004 B CTRPluginFramework::dataZ
0708b108 00000004 B CTRPluginFramework::dataY
0708b10c 00000004 B CTRPluginFramework::dataX
0708b110 00000004 B CTRPluginFramework::random
0708b118 00000004 b g_onLoadCroLock
0708b11c 00000004 B g_mainThread
0708b120 00000004 B CTRPluginFramework::g_keepEvent
0708b124 00000004 B CTRPluginFramework::g_continueGameEvent
0708b128 0000005c b CTRPluginFramework::exception_data
0708b184 00000004 B CTRPluginFramework::g_keepThreadHandle
0708b188 00000018 b g_onLoadCroHook
0708b1a0 00000008 B CTRPluginFramework::_sdmcArchive
0708b1a8 00000004 B g_gspEventThreadPriority
0708b1ac 00000004 B CTRPluginFramework::g_resumeEvent
0708b1b0 00001000 b CTRPluginFramework::keepThreadStack
0708c1b0 00000004 B __ctru_heap_size
0708c1b4 00000004 B CTRPluginFramework::Color::Black
0708c1b8 00000004 B CTRPluginFramework::Color::White
0708c1bc 00000004 B CTRPluginFramework::Color::Red
0708c1c0 00000004 B CTRPluginFramework::Color::Lime
0708c1c4 00000004 B CTRPluginFramework::Color::Blue
0708c1c8 00000004 B CTRPluginFramework::Color::Yellow
0708c1cc 00000004 B CTRPluginFramework::Color::Cyan
0708c1d0 00000004 B CTRPluginFramework::Color::Magenta
0708c1d4 00000004 B CTRPluginFramework::Color::Silver
0708c1d8 00000004 B CTRPluginFramework::Color::Gray
0708c1dc 00000004 B CTRPluginFramework::Color::Maroon
0708c1e0 00000004 B CTRPluginFramework::Color::Olive
0708c1e4 00000004 B CTRPluginFramework::Color::Green
0708c1e8 00000004 B CTRPluginFramework::Color::Purple
0708c1ec 00000004 B CTRPluginFramework::Color::Teal
0708c1f0 00000004 B CTRPluginFramework::Color::Navy
0708c1f4 00000004 B CTRPluginFramework::Color::BlackGrey
0708c1f8 00000004 B CTRPluginFramework::Color::Brown
0708c1fc 00000004 B CTRPluginFramework::Color::DarkGrey
0708c200 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0708c204 00000004 B CTRPluginFramework::Color::DimGrey
0708c208 00000004 B CTRPluginFramework::Color::DodgerBlue
0708c20c 00000004 B CTRPluginFramework::Color::Gainsboro
0708c210 00000004 B CTRPluginFramework::Color::ForestGreen
0708c214 00000004 B CTRPluginFramework::Color::LimeGreen
0708c218 00000004 B CTRPluginFramework::Color::Orange
0708c21c 00000004 B CTRPluginFramework::Color::SkyBlue
0708c220 00000004 B CTRPluginFramework::Color::Turquoise
0708c224 00000004 b CTRPluginFramework::g_runningInstance
0708c228 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c230 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c238 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c240 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c244 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c246 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c248 00000180 b CTRPluginFramework::g_keyName
0708c3c8 00000004 B CTRPluginFramework::__fileHandle
0708c3d0 00000008 B CTRPluginFramework::Time::Zero
0708c3d8 00000004 B CTRPluginFramework::System::OnAbort
0708c3dc 00000004 B CTRPluginFramework::Controller::_keysDown
0708c3e0 00000004 B CTRPluginFramework::Controller::_keysHeld
0708c3e4 00000004 B CTRPluginFramework::Controller::_keysReleased
0708c3e8 000009c4 b CTRPluginFramework::g_rng
0708cdb0 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
0708cdb4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708cdb8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708cdbc 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
0708cdbd 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
0708cdbe 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
0708cdbf 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
0708cdc0 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
0708cdc1 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
0708cdc2 00000001 B CTRPluginFramework::Preferences::ShowTopFps
0708cdc3 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
0708cdc4 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708cdc5 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708cdc8 00000070 B CTRPluginFramework::Preferences::Settings
0708ce38 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708ce50 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708ce68 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708ce80 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
0708ce81 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
0708ce82 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
0708ce84 00000004 b CTRPluginFramework::defaultSysFont
0708ce88 00000004 B CTRPluginFramework::g_fontAllocated
0708ce8c 00000004 b CTRPluginFramework::tileData
0708ce90 00000004 b CTRPluginFramework::glyph
0708ce94 0000000c B CTRPluginFramework::Font::_mutex
0708cea0 00000004 B CTRPluginFramework::g_glyphAllocated
0708cea4 00000028 B CTRPluginFramework::Window::BottomWindow
0708cecc 00000028 B CTRPluginFramework::Window::TopWindow
0708cef4 00000004 B CTRPluginFramework::RendererPriv::g_customColor
0708cef8 00000008 B CTRPluginFramework::Renderer::hookContext
0708cf00 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708cf04 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708cf08 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708cf0c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708cf18 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708cf24 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
0708cf30 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708cf48 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708cf60 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708cf64 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708cf6c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708cf70 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708cf78 00000018 B CTRPluginFramework::OSDImpl::OSDHook
0708cf90 00000010 b CTRPluginFramework::InstallOSD()::returnCode
0708cfa0 00000004 B CTRPluginFramework::OSDImpl::HookReturn
0708cfa4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708cfac 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708cfd0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708cfdc 00000004 b CTRPluginFramework::g_second
0708cfe0 00000010 b CTRPluginFramework::g_fpsClock
0708cff0 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708cff4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708cff5 00000001 B CTRPluginFramework::OSDImpl::MessColors
0708cff8 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708cffc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708d000 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0708d008 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0708d028 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708d030 00000004 b CTRPluginFramework::g_ctrpfString
0708d034 00000004 b CTRPluginFramework::g_bymeString
0708d038 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708d040 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708d048 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708d050 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708d058 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708d05c 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708d060 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708d068 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708d070 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708d074 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708d078 00000004 b CTRPluginFramework::g_mode
0708d07c 00000004 b CTRPluginFramework::g_OpenFileLock
0708d080 00000004 b CTRPluginFramework::g_HookMode
0708d088 00000040 b CTRPluginFramework::g_hookExportFile
0708d0c8 00000010 b CTRPluginFramework::g_returncode
0708d0d8 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
0708d0f0 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708d0f4 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708d0f8 00000004 b CTRPluginFramework::g_screenshotEntry
0708d0fc 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708d100 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708d104 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708d108 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708d10c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708d110 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708d120 00000004 B CTRPluginFramework::__g_hexEditor
0708d124 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708d128 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708d138 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708d13c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708d140 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708d150 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708d160 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708d170 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708d174 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708d178 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708d17c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708d18c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708d190 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708d1a0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708d1a4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708d1b4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708d1b8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708d1c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0708d1c8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0708d1d0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0708d1d8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0708d1e0 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708d1e4 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708d1f0 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708d1fc 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708d208 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708d210 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708d218 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708d21c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708d22c 00000004 b CTRPluginFramework::__pmARinstance
0708d230 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708d234 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708d238 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708d248 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0708d258 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708d25c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0708d260 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0708d268 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0708d278 00000004 b CTRPluginFramework::g_radioId
0708d27c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708d280 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0708d284 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
0708d288 00000004 B CTRPluginFramework::_pool
0708d290 00000008 B CTRPluginFramework::Screenshot::_timer
0708d298 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708d2a0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708d2a8 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708d2c0 00000004 B CTRPluginFramework::Screenshot::_filecount
0708d2c4 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708d2dc 00000004 B CTRPluginFramework::Screenshot::_display
0708d2e0 00000004 B CTRPluginFramework::Screenshot::_mode
0708d2e8 00000008 B CTRPluginFramework::Screenshot::Timer
0708d2f0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708d2f4 00000004 B CTRPluginFramework::Screenshot::_task
0708d2f8 00000004 B CTRPluginFramework::Screenshot::_count
0708d2fc 00000008 b CTRPluginFramework::g_sleepEvent
0708d304 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708d308 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708d30c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708d310 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708d314 00000004 B CTRPluginFramework::HookManager::instance
0708d318 00000078 B CTRPluginFramework::Scheduler::_singleton
0708d390 00000040 b CTRPluginFramework::_topBuf
0708d3d0 00000004 B CTRPluginFramework::ScreenImpl::Top
0708d3d4 00000040 b CTRPluginFramework::_botBuf
0708d414 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708d418 0000000c b CTRPluginFramework::Heap::_mutex
0708d424 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708d428 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708d42c 00000008 b CTRPluginFramework::Heap::g_heapPool
0708d434 0000000c b sAddrMap
0708d440 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708d458 0000000c B CTRPluginFramework::FSPath::FSMutex
0708d468 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708d46c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708d4d0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708d4d4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708d4d8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708d4e0 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708d4e4 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708d4e8 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708d4f4 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708d500 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708d510 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0708d512 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
0708d518 0000000c b _mutex
0708d524 00000008 b sVramPool
0708d52c 0000000c b sAddrMap
0708d538 00000004 b srvRefCount
0708d53c 00000004 b srv2Handle
0708d540 00000004 b errfRefCount
0708d544 00000004 b errfHandle
0708d548 00000004 b sharedFontAddr
0708d54c 00000004 b arbiter
0708d550 00000004 b cfguRefCount
0708d554 00000004 b cfguHandle
0708d558 00000004 b fsuHandle
0708d560 00000080 b fsExemptArchives
0708d5e0 00000004 b fsuRefCount
0708d5e4 00000001 B fs
0708d5e8 0000000c b aptFirstHook
0708d5f4 00000004 b serviceName.7785
0708d5f8 00000004 b aptRefCount
0708d5fc 0000000c b aptEvents
0708d608 00000008 b aptSleepEvent
0708d610 00000004 b aptEventHandlerThread
0708d614 00000004 b aptMessageFunc
0708d618 00000004 b aptMessageFuncData
0708d61c 00000001 b aptHomeButtonState
0708d61d 00000001 b flagInit.8135
0708d61e 00000001 b flagValue.8136
0708d620 00001000 b aptParameters
0708e620 00001000 b __stack
0708f620 00000004 b amRefCount
0708f624 00000004 b amHandle
0708f628 00000004 b acRefCount
0708f62c 00000004 b acHandle
0708f630 00000004 b hidRefCount
0708f634 00000004 b kOld
0708f638 00000004 b kHeld
0708f63c 00000004 b cPos
0708f640 00000004 b tPos
0708f644 00000006 b aVec
0708f64a 00000006 b gRate
0708f650 00000004 b kDown
0708f654 00000004 b kUp
0708f658 00000004 b gspEventData
0708f65c 00000038 b gspEvents
0708f694 0000001c b gspEventCounts
0708f6b0 00000001 b gspRunEvents
0708f6b4 00000004 b gspRefCount
0708f6b8 00000004 b gfxSharedMemory
0708f6bc 00000001 b gfxThreadID
0708f6c0 00000004 b irrstRefCount
0708f6c4 00000004 b kHeld
0708f6c8 00000004 b csPos
0708f6cc 00000004 b g_mainThreadVars
0708f6d0 b saved_stack
0708f6d8 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708f6dc 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708f6f4 0000000c B CTRPluginFramework::g_codeTypes
0708f700 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708f704 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708f710 00000001 b CTRPluginFramework::g_condAgainstData
0708f711 00000001 b CTRPluginFramework::g_newCondDataToggle
0708f714 00000004 b CTRPluginFramework::__arCodeEditor
0708f718 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708f71c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708f728 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708f730 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708f738 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708f740 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708f748 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708f758 00000001 b CTRPluginFramework::g_progressLoop
0708f760 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708f768 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708f770 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708f778 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708f780 00000004 b CTRPluginFramework::__converter
0708f784 00000008 b sMappablePool
0708f78c 0000000c b sAddrMap
0708f798 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708f79c 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708f7a0 00000008 B CTRPluginFramework::ARHandler::Offset
0708f7a8 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708f7ac 00000010 B CTRPluginFramework::ARHandler::Data
0708f7bc 00000008 B CTRPluginFramework::ARHandler::Storage
0708f7c4 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708f7c8 00000001 b CTRPluginFramework::ToggleFloat
0708f7cc 00000004 b CTRPluginFramework::g_context
0708f7d0 00000fa0 b CTRPluginFramework::arStack
07090770 b completed.7759
07090774 b object.7764
0709078c 0000000c b eh_globals
07090798 00000010 b (anonymous namespace)::emergency_pool
070907a8 00000010 V std::string::_Rep::_S_empty_rep_storage
070907b8 00000004 b (anonymous namespace)::__new_handler
070907bc 00000028 B __malloc_current_mallinfo
070907e4 00000004 B __malloc_max_sbrked_mem
070907e8 00000004 B __malloc_max_total_mem
070907ec 00000004 B __malloc_top_pad
070907f0 0000000b b __tzname_dst
070907fc 0000000b b __tzname_std
07090808 00000004 b prev_tzenv
0709080c 00000004 B _daylight
07090810 00000004 B _timezone
07090814 00000004 b initial_env
07090818 00000004 b heap_start.7089
0709081c 00000004 B fake_heap_end
07090820 00000004 B fake_heap_start
07090824 00000038 B __syscalls
0709085c 00000004 B g_sharedFont
07090860 00000004 B charPerSheet
07090864 00000004 B hidMemHandle
07090868 00000004 B hidHandle
0709086c 00000014 B hidEvents
07090880 00000004 B hidSharedMem
07090884 00000004 B gspEventThread
07090888 00000004 B gspEvent
0709088c 00000004 B gspGpuHandle
07090890 00000004 B gspSharedMemHandle
07090894 00000004 B gspThreadEventHandle
07090898 00000004 B irrstMemHandle
0709089c 00000004 B irrstEvent
070908a0 00000004 B irrstHandle
070908a4 00000004 B irrstSharedMem
070908a8 00000004 B __ctru_linear_heap
070908ac 00000004 B __tmp
070908b0 00000004 B __ctru_linear_heap_size
070908b4 00000004 B __system_retAddr
070908b8 00000004 B __ctru_heap
070908bc B __c_bss_end
070908bc B __tls_start
070908dc A __end__
070908dc B __tls_end
