00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 0000013c T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
07001464 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
070014c0 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001500 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001540 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001580 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
070015bc 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
070015f8 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07001660 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001660 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001680 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
07001680 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
070016bc 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016bc 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016dc 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07001740 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
07001800 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
0700185c 0000001c t CTRPluginFramework::GetItemPointer() [clone .part.110]
0700185c 0000001c t CTRPluginFramework::GetOldPointer5CC() [clone .part.106]
0700185c 0000001c t CTRPluginFramework::GetOldPointer5D0() [clone .part.108]
07001878 00000070 t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.113]
07001878 00000070 t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.114]
070018e8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018e8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
07001908 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.152]
07001990 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07001a3c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.177]
07001a98 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a98 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001ad4 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001b10 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07001b4c 00000024 W CTRPluginFramework::File::~File()
07001b4c 00000024 W CTRPluginFramework::File::~File()
07001b70 00000084 T CTRPluginFramework::IsInRace()
07001bf4 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001c5c 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001cb0 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001d24 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001de8 00000110 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001ef8 000000bc T CTRPluginFramework::GetRacePointer()
07001fb4 0000002c T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
07001fe0 0000002c T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
0700200c 00000028 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07002034 0000002c T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07002060 0000001c t CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*) [clone .part.96]
07002060 0000001c t CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*) [clone .part.95]
0700207c 00000018 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07002094 00000018 T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
070020ac 00000038 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
070020e4 000000b0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
07002194 000000d0 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07002264 00000274 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
070024d8 00000254 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
0700272c 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
070028ac 00000070 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
0700291c 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07002a4c 00000098 T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07002ae4 000000a0 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002b84 00000048 T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002bcc 00000050 T CTRPluginFramework::GetFNsPointer()
07002c1c 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002c84 00000068 T CTRPluginFramework::GetOldPointer5CC()
07002cec 00000030 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002d1c 00000064 T CTRPluginFramework::GetOldPointer5D0()
07002d80 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002dc8 00000090 T CTRPluginFramework::GetItemPointer()
07002e58 000001a4 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002ffc 000000b8 T CTRPluginFramework::GetTotalPlayers()
070030b4 000001f0 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
070032a4 00000060 T CTRPluginFramework::GetTime()
07003304 0000002c T CTRPluginFramework::GetMinutes()
07003330 0000001c T CTRPluginFramework::GetSeconds()
0700334c 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07003404 00000074 T CTRPluginFramework::SubToTime(unsigned short)
07003478 0000042c T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
070038a4 00000058 T CTRPluginFramework::writeItem(unsigned long)
070038fc 000000c8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
070039c4 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
070039f4 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003ad8 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003b18 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003b58 00000254 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003dac 00000254 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07004000 00000048 T CTRPluginFramework::writeVR(unsigned long)
07004048 000000ac T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
070040f4 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07004110 00000060 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07004170 0000004c T CTRPluginFramework::writeLocation(unsigned long)
070041bc 00000060 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
0700421c 00000064 T CTRPluginFramework::writeFlag(unsigned short)
07004280 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
07004374 000016ac T CTRPluginFramework::main()
07005a20 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005b00 000001d4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07005cd4 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07005cd8 00000004 T CTRPluginFramework::OnProcessExit()
07005cdc 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
07005d40 000000f0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005e30 00000198 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005fc8 0000020c T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
070061d4 00000550 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
07006724 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0700679c 00000038 T OnLoadCro
070067d4 00000170 T CTRPluginFramework::Initialize()
07006944 000000b0 T CTRPluginFramework::ThreadExit()
070069f4 00000060 T abort
07006a54 0000003c T CTRPluginFramework::ThreadInit(void*)
07006a90 0000008c T LaunchMainThread
07006b1c 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07006f24 0000000c t _GLOBAL__sub_I_g_mainThread
07006f30 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006f7c 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07006ff8 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
070070bc 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
07007134 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07007134 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
0700714c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
0700714c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07007158 00000008 T CTRPluginFramework::Color::ToU32() const
07007160 00000120 T CTRPluginFramework::Color::Fade(double)
07007280 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
070072c0 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0700733c 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07007550 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07007670 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007670 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070076e0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070076e0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700770c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07007720 00000044 T CTRPluginFramework::PluginMenu::Run() const
07007764 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700776c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700777c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07007788 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007788 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070077c8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070077c8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070077f0 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07007800 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007800 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700784c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700784c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700789c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700789c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070078cc 00000010 T CTRPluginFramework::MenuEntry::Disable() const
070078dc 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
070078e4 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
070078ec 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070078f4 00000030 W CTRPluginFramework::TextBox::~TextBox()
070078f4 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007924 0000001c W CTRPluginFramework::TextBox::~TextBox()
07007940 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007940 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007988 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007988 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070079c4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
070079c4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007a00 00000008 T CTRPluginFramework::MessageBox::operator()() const
07007a08 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007acc 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07007b74 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b74 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007bbc 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007bbc 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007c24 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007c24 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007c50 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07007c58 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007c74 00000028 T CTRPluginFramework::Keyboard::Open() const
07007c9c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007d14 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007dc4 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07007e18 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007e80 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07007e88 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007e90 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07007f2c 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007fb8 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07008060 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07008148 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070081d4 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0700827c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07008364 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070083f0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07008498 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07008580 00000028 t __tcf_0
070085a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07008620 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07008628 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
070086a8 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07008724 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
070087fc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070087fc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07008818 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008818 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008858 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07008868 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07008928 00000020 T CTRPluginFramework::HotkeyManager::Count()
07008948 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008ab8 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008be4 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008d0c 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07008d7c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008e04 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07008e48 0000004c T CTRPluginFramework::Directory::Close() const
07008e94 000000e8 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
07008f7c 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07008f90 00000008 T CTRPluginFramework::Directory::IsOpen() const
07008f98 00000040 T CTRPluginFramework::Directory::Directory()
07008f98 00000040 T CTRPluginFramework::Directory::Directory()
07008fd8 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0700900c 00000060 T CTRPluginFramework::Directory::~Directory()
0700900c 00000060 T CTRPluginFramework::Directory::~Directory()
0700906c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700906c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700908c 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009124 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070091bc 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700925c 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009330 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070093c4 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009510 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009510 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009568 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070095a4 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070095a4 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070095c0 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07009730 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
0700974c 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07009874 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
070098ec 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07009954 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07009a00 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07009a44 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07009c20 000001b4 T CTRPluginFramework::Directory::_List() const
07009dd4 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009eb4 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009f98 0000000c T CTRPluginFramework::FwkSettings::Get()
07009fa4 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0700a084 00000010 T CTRPluginFramework::Process::GetHandle()
0700a094 00000010 T CTRPluginFramework::Process::GetTitleID()
0700a0a4 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a100 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a138 00000024 T CTRPluginFramework::Process::GetTextSize()
0700a15c 00000008 T CTRPluginFramework::Process::Pause()
0700a164 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700a174 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700a21c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700a220 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700a26c 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700a2a4 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700a2c8 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700a2e4 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0700a308 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a344 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a36c 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a38c 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0700a3ac 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
0700a518 0000002c T CTRPluginFramework::Hook::Hook()
0700a518 0000002c T CTRPluginFramework::Hook::Hook()
0700a544 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700a55c 00000230 T CTRPluginFramework::Hook::Enable()
0700a78c 0000005c T CTRPluginFramework::Hook::Disable()
0700a7e8 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a7e8 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a7fc 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a7fc 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a824 00000004 T CTRPluginFramework::Mutex::Lock()
0700a828 00000014 T CTRPluginFramework::Mutex::TryLock()
0700a83c 00000004 T CTRPluginFramework::Mutex::Unlock()
0700a840 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a840 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a864 0000004c T CTRPluginFramework::Lock::~Lock()
0700a864 0000004c T CTRPluginFramework::Lock::~Lock()
0700a8b0 00000074 T CTRPluginFramework::File::Close() const
0700a924 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
0700a9dc 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700aacc 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700aaf8 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700abdc 00000008 T CTRPluginFramework::File::Tell() const
0700abe4 00000030 T CTRPluginFramework::File::Rewind() const
0700ac14 00000034 T CTRPluginFramework::File::Flush() const
0700ac48 0000006c T CTRPluginFramework::File::GetSize() const
0700acb4 000000dc T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
0700ad90 00000008 T CTRPluginFramework::File::IsOpen() const
0700ad98 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700adac 00000044 T CTRPluginFramework::File::File()
0700adac 00000044 T CTRPluginFramework::File::File()
0700adf0 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ae84 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af58 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700afdc 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b07c 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700b184 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b184 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b1f0 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700b238 00000014 T CTRPluginFramework::Time::Time()
0700b238 00000014 T CTRPluginFramework::Time::Time()
0700b24c 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700b26c 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700b284 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700b28c 00000028 T CTRPluginFramework::Seconds(float)
0700b2b4 00000010 T CTRPluginFramework::Milliseconds(int)
0700b2c4 00000008 T CTRPluginFramework::Microseconds(long long)
0700b2cc 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b2e0 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b2f4 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b308 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b320 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700b36c 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700b384 00000010 T CTRPluginFramework::System::IsNew3DS()
0700b394 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700b3a8 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700b3c4 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700b3e0 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700b3fc 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700b418 0000002c T CTRPluginFramework::Controller::Update()
0700b444 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700b4bc 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b518 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700b574 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700b5d0 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700b614 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700b694 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b748 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b884 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700b8bc 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700b8d8 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700bb2c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bb2c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bb70 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700c2b0 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c2b8 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c2fc 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700c408 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700c470 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700c48c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700c4c8 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700c4ec 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c510 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700c588 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700c5b8 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700c6c4 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700c890 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700cb70 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700cc3c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700ccf8 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700cdb4 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700ce10 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700ce60 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700cee0 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700d0b0 00000004 T CTRPluginFramework::Preferences::Initialize()
0700d0b4 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700d1a0 00000010 T CTRPluginFramework::Glyph::Width() const
0700d1b0 00000060 T CTRPluginFramework::Font::Initialize()
0700d210 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700d564 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700d868 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700d974 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700d9dc 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700d9fc 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700da2c 00000020 W CTRPluginFramework::Renderer::GetContext()
0700da4c 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700daac 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700dc14 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700dd80 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700de20 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700e008 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700e038 00000028 T CTRPluginFramework::Window::~Window()
0700e038 00000028 T CTRPluginFramework::Window::~Window()
0700e060 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e060 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e100 00000064 T CTRPluginFramework::Window::Draw() const
0700e164 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700e23c 00000018 T CTRPluginFramework::Window::DrawButton() const
0700e254 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700e26c 00000018 T CTRPluginFramework::Window::MustClose() const
0700e284 0000002c T CTRPluginFramework::Window::Close() const
0700e2b0 00000004 T CTRPluginFramework::Window::GetRect() const
0700e2b4 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700e2e0 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700e388 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700e4b8 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700e584 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700e6d0 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e814 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e84c 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700e9ec 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700ebb0 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700ede4 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700ee54 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700eec0 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700eed4 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700eef8 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700ef14 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700ef44 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700ef74 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700ef9c 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700efc4 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700efe4 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700f020 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700f068 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700f0ac 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700f1c8 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700f1e8 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700f258 00000038 t __tls_init
0700f258 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700f290 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700f2cc 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f340 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f3ac 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f434 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f4c8 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f558 00000008 W CTRPluginFramework::Drawable::operator()()
0700f560 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0700f564 000002f0 T CTRPluginFramework::TextBox::Draw()
0700f854 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f854 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f8e8 0000000c T CTRPluginFramework::TextBox::Open() const
0700f8f4 0000000c T CTRPluginFramework::TextBox::Close() const
0700f900 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0700f908 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0700fb50 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0700fb5c 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0700fbf4 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0700fca8 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0700fd00 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0700fd30 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0700fdec 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
0700fea8 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
07010070 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010070 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070101b4 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701029c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
07010314 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
07010384 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
070103a8 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
070103cc 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
070103cc 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0701040c 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07010414 00000008 T CTRPluginFramework::BMPImage::Width() const
0701041c 00000008 T CTRPluginFramework::BMPImage::Height() const
07010424 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0701042c 00000010 T CTRPluginFramework::BMPImage::data() const
0701043c 0000001c T CTRPluginFramework::BMPImage::end() const
07010458 00000010 W CTRPluginFramework::BMPImage::DataClear()
07010468 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
07010468 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
07010510 0000003c T CTRPluginFramework::BMPImage::Unload()
0701054c 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
07010688 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07010690 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
070108e0 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07010ab4 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07010afc 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07010b2c 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07010c00 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
07010c80 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07010ca4 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07010dc0 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010dc0 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010e14 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
07011134 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011134 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011180 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070111cc 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070114dc 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0701159c 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
070116cc 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07011838 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
07011878 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
07011878 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
07011898 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07011a08 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07011afc 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07011b90 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07011c38 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07011ec4 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011ec4 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011f08 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07011f5c 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
070120e4 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07012190 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
070121d0 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07012850 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070129f8 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
070129f8 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07012a24 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012a24 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012a44 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07012af4 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07012b50 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012b50 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012bd4 0000000c T CTRPluginFramework::OSDImpl::Lock()
07012be0 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07012bfc 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07012c08 000000cc T CTRPluginFramework::OSDImpl::Draw()
07012cd4 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07012dac 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07012dd8 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07012e20 0000020c T CTRPluginFramework::InstallOSD()
0701302c 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
07013074 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0701314c 00000108 T CTRPluginFramework::OSDImpl::Update()
07013254 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
070138dc 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07013944 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
070139b0 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070139b0 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013b28 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013b28 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013c80 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07013cf8 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07013fac 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07014148 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07014368 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07014394 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070143d0 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701440c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07014448 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07014484 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
070144c0 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070144ec 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07014528 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07014564 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
070145a0 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070145dc 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07014608 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07014644 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07014670 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701469c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
070146d8 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07014704 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07014740 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0701476c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
070147a0 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070147dc 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07014808 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07014844 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07014870 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701489c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070148c8 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070148f4 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07014920 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0701494c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07014978 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070149a4 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070149e0 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07014a0c 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
07014a9c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014a9c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014abc 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014abc 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014b9c 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07014ba4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014ba4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014c38 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07014c58 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07014de0 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014e00 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07014e1c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07014e38 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07014e40 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014e48 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014e48 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014e68 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07014f4c 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07015648 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
070156a0 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07015784 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
070157c0 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
070158f0 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07015a2c 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015ae4 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015bec 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015bec 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015c70 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07015d64 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07015e9c 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07016034 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07016034 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07016130 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016130 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070162d0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07016348 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016348 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016424 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07016424 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701653c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07016578 00000058 T CTRPluginFramework::Menu::CloseAll()
070165d0 00000030 T CTRPluginFramework::Menu::~Menu()
070165d0 00000030 T CTRPluginFramework::Menu::~Menu()
07016600 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701660c 00000008 T CTRPluginFramework::Menu::GetFolder() const
07016614 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701661c 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
0701665c 00000384 T CTRPluginFramework::Menu::Draw() const
070169e0 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
07016a6c 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07016af8 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07016d20 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07016e94 00000068 T CTRPluginFramework::Menu::ShowNote()
07016efc 00000008 T CTRPluginFramework::Menu::CloseNote()
07016f04 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07016f0c 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07016f4c 00000044 T CTRPluginFramework::Menu::Pop()
07016f90 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07017054 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701710c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07017114 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07017114 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
0701713c 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07017158 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017158 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701722c 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017248 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017248 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017300 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017300 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070173bc 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
070173d0 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07017420 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07017438 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701745c 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
07017504 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07017514 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07017538 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07017598 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
070175a8 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070175b8 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070175c8 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07017658 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07017774 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
070177e4 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07017888 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
070178b4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070178b4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070178e4 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070178e4 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07017950 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07017aa4 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07017ae0 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017ae0 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017c4c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07017ca4 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017d58 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017e38 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07017eb0 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07017eb0 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07018374 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07018380 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
070186a0 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
070187a8 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07018bfc 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07018d18 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07018da4 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07018de0 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07018e0c 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07018edc 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07018f5c 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07018fd8 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0701905c 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
070190b8 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070190f8 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07019228 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07019564 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07019778 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07019790 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
070197a4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
070197b8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070197cc 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07019908 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0701990c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07019910 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07019928 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07019940 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07019958 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07019970 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07019988 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
070199a0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
070199b8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
070199d0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
070199e8 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07019a2c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019aa4 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07019b08 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07019ba0 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07019d44 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019ec8 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019f74 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a098 0000005c t CTRPluginFramework::Reboot()
0701a0f4 00000064 t CTRPluginFramework::Shutdown()
0701a158 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0701a34c 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
0701ad4c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701ad4c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701aedc 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0701aff8 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0701b084 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0701b0c4 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701b234 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701b2e0 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
0701b8f8 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701b934 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701b970 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701b980 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701b980 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701ba58 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701ba58 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701ba94 0000001c T CTRPluginFramework::SubMenu::operator()()
0701bab0 00000200 T CTRPluginFramework::SubMenu::Draw()
0701bcb0 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0701bd74 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701bd7c 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701bd98 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bf3c 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bf88 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
0701bf88 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
0701bf8c 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
0701bf90 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
0701bf94 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701c130 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701c22c 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701c368 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701c3e0 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c630 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701c884 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701ca80 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701cc60 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701cc7c 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701cd38 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701cd54 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701cdc4 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701cdf4 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701ce30 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701ced8 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701cf0c 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701cf3c 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701cfc8 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701d060 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701d12c 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701d1e8 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701d298 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701d42c 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701d43c 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701d44c 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701d45c 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d45c 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d6d0 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701d714 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701d8dc 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701d9a0 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701d9f8 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701dadc 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701dc4c 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701ddd0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701ddfc 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701ddfc 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701de64 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701de8c 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701dfe0 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701e054 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701e1f4 00000160 T CTRPluginFramework::HexEditor::_Update()
0701e354 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701e5f4 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701e608 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e608 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e630 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e64c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701e764 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e764 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e834 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e834 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e908 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701e910 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701e924 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701e930 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701e938 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701e95c 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701e98c 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701e9a8 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701ea10 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701ea10 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701ea30 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701ea4c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701ea4c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701eae0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eae0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb40 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb40 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eba0 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701eba4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701ec1c 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701ecdc 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701ed10 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701f108 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701f120 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701f3e4 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f3e4 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f5a4 00000158 T CTRPluginFramework::GuideReader::Draw()
0701f6fc 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701f770 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701f7d8 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701f7d8 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701f820 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701f86c 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701f878 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701f8a4 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701f900 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701f988 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701f9ec 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701f9ec 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701fa4c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fa4c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fbf8 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fbf8 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fdb4 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fdb4 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fe18 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701fe20 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701fe28 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701fe30 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701fe38 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701fe40 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701ffa4 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070203fc 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0702048c 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0702050c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07020590 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
070206f0 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
07020970 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07020edc 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07020f44 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07020f94 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07021004 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0702100c 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
070210d0 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070212ac 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07021310 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0702133c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702133c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702135c 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07021428 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
070214e4 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
070215a8 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07021b14 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07022084 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0702213c 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07022b90 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07022c48 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702388c 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
070238d0 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0702398c 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07023b50 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
07023ba0 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07023bf8 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07023c40 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07023f64 00000254 T CTRPluginFramework::KeyboardImpl::Run()
070241b8 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07024230 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07024244 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07024268 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
070242f0 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
07024400 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702445c 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
070244f4 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070244f4 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07024744 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07024778 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070247cc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
070247f0 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07024818 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070248f4 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07024a18 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07024be4 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024be4 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024c0c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07024d84 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07024f00 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07025068 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
070250a4 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
070251ec 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0702521c 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070252f0 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
070254f0 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07025568 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07025630 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070257e8 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07025990 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07025a08 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
07025a64 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07025b7c 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07025be0 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07025d4c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07025d4c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070261a4 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
07026560 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
070265d0 000000f4 t CTRPluginFramework::ClearSearchFolder()
070266c4 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
070266f8 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07026920 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07026948 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070269b8 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07026a80 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07026abc 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07026d24 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07026e08 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07026e48 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07026e78 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07026f4c 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070271d8 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07027590 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
070275e8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070275e8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07027614 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
07027620 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
0702762c 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07027788 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
070277c4 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
070277d0 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
070277dc 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
070277fc 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07027998 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
070279f4 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07027b50 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07027b68 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07027c8c 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07027d50 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07027f00 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07027fc4 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07028044 00000044 T CTRPluginFramework::Search::UpdateProgress()
07028088 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0702821c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
07028294 00000008 T CTRPluginFramework::Search::GetHeader() const
0702829c 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
070282e4 0000000c T CTRPluginFramework::Search::GetType() const
070282f0 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07028308 00000070 T CTRPluginFramework::Search::WriteHeader()
07028378 00000058 T CTRPluginFramework::Search::WriteResults()
070283d0 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0702841c 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0702865c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702865c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702889c 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07028964 00000088 T CTRPluginFramework::Search::CreateIndexTable()
070289ec 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070289ec 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028b94 00000080 T CTRPluginFramework::Search::Cancel()
07028c14 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07028d2c 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07028df0 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07028eb0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07028f28 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07029190 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07029420 00000048 W CTRPluginFramework::Search::~Search()
07029420 00000048 W CTRPluginFramework::Search::~Search()
07029468 00000044 T CTRPluginFramework::Search32::~Search32()
07029468 00000044 T CTRPluginFramework::Search32::~Search32()
070294ac 0000001c T CTRPluginFramework::Search32::~Search32()
070294c8 0000001c W CTRPluginFramework::Search::~Search()
070294e4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070294e4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0702970c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702970c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702972c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0702972c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070297a4 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070298fc 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029948 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07029a8c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07029bd0 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07029c00 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07029cc4 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07029d00 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07029d38 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07029e18 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029e64 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0702a17c 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0702a2f4 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702a5e0 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
0702a784 0000002c T CTRPluginFramework::Screenshot::Initialize()
0702a7b0 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0702a85c 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702a8f0 0000003c T CTRPluginFramework::SystemImpl::Status()
0702a92c 000000c8 T CTRPluginFramework::HookManager::Init()
0702a9f4 00000018 T CTRPluginFramework::HookManager::Lock()
0702aa0c 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
0702aab4 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
0702ab14 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702ab14 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702ab4c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ab4c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ab84 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702abcc 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0702acd8 000000d4 T CTRPluginFramework::Scheduler::Initialize()
0702adac 00000050 T CTRPluginFramework::Scheduler::Exit()
0702adfc 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702adfc 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702ae44 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
0702aeb0 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0702af80 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0702afb0 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
0702afcc 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702b0d4 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0702b0ec 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b0ec 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b130 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
0702b184 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0702b264 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
0702b39c 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0702b438 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0702b468 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0702b470 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b4d4 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b538 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b5a8 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b61c 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b68c 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
0702b75c 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702b820 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0702b87c 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
0702b920 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0702b978 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702ba34 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0702bb0c 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
0702bb74 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0702bb7c 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0702bb84 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0702bb8c 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0702bba8 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702bbc4 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0702bc1c 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0702bc4c 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0702bca8 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0702bd20 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702bd44 00000004 t addrMapNodeDestructor(rbtree_node*)
0702bd48 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0702be78 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0702be80 00000070 T CTRPluginFramework::Heap::Free(void*)
0702bef0 0000000c T CTRPluginFramework::Heap::SpaceFree()
0702befc 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702bf2c 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702c030 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702c20c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c20c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c2d0 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702c330 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702c33c 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c37c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702c38c 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c3a4 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702c3b8 00000004 T Kernel::Initialize()
0702c3bc 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702c3d4 0000000c T KProcess::GetCurrent()
0702c3e0 00000024 T KProcess::PatchCore2Access()
0702c404 0000002c T KProcess::PatchCategory(unsigned long)
0702c430 00000014 T KProcess__PatchCategory
0702c444 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702c470 00000014 T KProcess__PatchMaxPriority
0702c484 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702c508 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702c53c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c53c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c55c 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702c640 00000018 T IsPaused
0702c658 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702c694 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702c6b0 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702c6cc 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702c734 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702c7b0 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702c84c 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702c8fc 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702c9c4 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702ca98 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702cb30 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702cb8c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cb8c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cc1c 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702cd7c 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702cdb8 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702d054 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702d14c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702d154 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702d180 00000034 W MemPool::DelBlock(MemBlock*)
0702d1b4 0000005c T MemPool::CoalesceRight(MemBlock*)
0702d210 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702d328 000000fc T MemPool::Deallocate(MemChunk const&)
0702d424 00000020 T MemPool::GetFreeSpace()
0702d444 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702d468 00000004 t addrMapNodeDestructor(rbtree_node*)
0702d46c 00000154 T vramMemAlign
0702d5c0 00000008 T vramAlloc
0702d5c8 00000070 T vramFree
0702d638 00000030 t _GLOBAL__sub_I_vramMemAlign
0702d668 000001d8 T threadCreate
0702d840 0000002c T threadFree
0702d86c 00000024 T threadJoin
0702d890 00000020 T threadGetCurrent
0702d8b0 0000003c T threadExit
0702d8ec 0000003c t _thread_begin
0702d928 00000050 T srvExit
0702d978 00000034 T srvRegisterClient
0702d9ac 00000064 T srvInit
0702da10 00000068 T srvGetServiceHandleDirect
0702da78 00000004 T srvGetServiceHandle
0702da7c 00000034 T srvPublishToSubscriber
0702dab0 00000034 T errfExit
0702dae4 00000058 T errfInit
0702db3c 0000003c T ERRF_Throw
0702db78 00000090 T ERRF_ExceptionHandler
0702dc08 000000a8 T fontEnsureMapped
0702dcb0 00000110 T fontGlyphIndexFromCodePoint
0702ddc0 00000074 T fontGetCharWidthInfo
0702de34 0000000c T __sync_init
0702de40 00000018 T __sync_fini
0702de58 00000018 T LightLock_Init
0702de70 0000008c T LightLock_Lock
0702defc 00000034 T LightLock_TryLock
0702df30 00000050 T LightLock_Unlock
0702df80 00000018 T RecursiveLock_Init
0702df98 00000030 T RecursiveLock_Lock
0702dfc8 00000044 T RecursiveLock_TryLock
0702e00c 00000034 T RecursiveLock_Unlock
0702e040 00000030 T LightEvent_Init
0702e070 00000060 T LightEvent_Clear
0702e0d0 00000064 T LightEvent_Pulse
0702e134 000000b4 T LightEvent_Signal
0702e1e8 000000a8 T LightEvent_Wait
0702e290 000000a0 T cfguInit
0702e330 00000034 T cfguExit
0702e364 00000044 T CFGU_GetConfigInfoBlk2
0702e3a8 00000014 T CFGU_GetSystemLanguage
0702e3bc 00000028 t fsSession
0702e3e4 00000044 t fsSessionForArchive
0702e428 00000038 T fsExit
0702e460 00000028 T FSUSER_Initialize
0702e488 000000b0 T fsInit
0702e538 00000080 T FSUSER_OpenFile
0702e5b8 00000068 T FSUSER_DeleteFile
0702e620 000000a4 T FSUSER_RenameFile
0702e6c4 00000068 T FSUSER_DeleteDirectoryRecursively
0702e72c 00000080 T FSUSER_CreateFile
0702e7ac 00000070 T FSUSER_CreateDirectory
0702e81c 000000a4 T FSUSER_RenameDirectory
0702e8c0 0000006c T FSUSER_OpenDirectory
0702e92c 00000074 T FSUSER_OpenArchive
0702e9a0 00000058 T FSFILE_Read
0702e9f8 00000060 T FSFILE_Write
0702ea58 00000038 T FSFILE_GetSize
0702ea90 00000028 T FSFILE_SetSize
0702eab8 0000003c T FSFILE_Close
0702eaf4 00000024 T FSFILE_Flush
0702eb18 00000054 T FSDIR_Read
0702eb6c 0000003c T FSDIR_Close
0702eba8 00000104 T aptSendCommand
0702ecac 0000006c T APT_CheckNew3DS
0702ed18 00000048 T APT_GetSharedFont
0702ed60 000000a0 T amInit
0702ee00 00000034 T amExit
0702ee34 00000088 T acInit
0702eebc 00000034 T acExit
0702eef0 000000bc T hidExit
0702efac 00000034 T hidCheckSectionUpdateTime
0702efe0 00000174 T hidScanInput
0702f154 00000010 T hidKeysHeld
0702f164 00000010 T hidKeysDown
0702f174 00000010 T hidKeysUp
0702f184 00000018 T hidTouchRead
0702f19c 00000090 T HIDUSER_GetHandles
0702f22c 00000174 T hidInit
0702f3a0 000000e8 t gspEventThreadMain
0702f488 000000a0 T gspInitEventHandler
0702f528 00000040 T gspExitEventHandler
0702f568 0000008c T gspExit
0702f5f4 0000005c T gspWaitForEvent
0702f650 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702f6b4 000000dc T gspInit
0702f790 00000034 T irrstCheckSectionUpdateTime
0702f7c4 00000070 T irrstScanInput
0702f834 0000001c T irrstKeysHeld
0702f850 00000050 T IRRST_GetHandles
0702f8a0 00000034 T IRRST_Initialize
0702f8d4 00000128 T irrstInit
0702f9fc 0000002c T IRRST_Shutdown
0702fa28 000000a8 T irrstExit
0702fad0 00000028 t __ctru_get_reent
0702faf8 000000ec T __system_initSyscalls
0702fbe4 000000ac T utf8_to_utf16
0702fc90 00000138 T decode_utf8
0702fdc8 0000005c T decode_utf16
0702fe24 000000d4 T utf16_to_utf8
0702fef8 000000e0 T encode_utf8
0702ffd8 00000054 T encode_utf16
0703002c 00000054 T rbtree_find
07030080 00000014 t is_black
07030094 000002bc T rbtree_remove
07030350 00000050 T rbtree_node_next
070303a0 00000090 T rbtree_rotate
07030430 00000174 t do_insert
070305a4 00000008 T rbtree_insert
070305ac 00000010 T rbtree_init
070305bc T LoadCROHooked
070305d0 T AR__ExecuteRoutine
070305f8 t stackBak
07030600 T svcCustomBackdoor
07030608 T svcConvertVAToPA
07030610 T svcFlushDataCacheRange
07030618 T svcMapProcessMemoryEx
0703062c T svcUnmapProcessMemoryEx
07030634 T svcControlProcess
0703063c T svcQueryMemory
0703066c T svcCreateThread
0703068c T svcExitThread
07030694 T svcSleepThread
0703069c T svcSetThreadPriority
070306a4 T svcCreateEvent
070306b8 T svcSignalEvent
070306c0 T svcClearEvent
070306c8 T svcMapMemoryBlock
070306d0 T svcUnmapMemoryBlock
070306d8 T svcCreateAddressArbiter
070306ec T svcArbitrateAddress
07030704 T svcCloseHandle
0703070c T svcWaitSynchronization
07030714 T svcWaitSynchronizationN
0703073c T svcGetSystemTick
07030744 T svcGetSystemInfo
0703075c T svcGetProcessInfo
07030774 T svcConnectToPort
07030788 T svcSendSyncRequest
07030790 T svcOpenProcess
070307a4 T svcGetProcessId
070307b8 T svcBreak
070307c0 T svcInvalidateProcessDataCache
070307c8 T svcFlushProcessDataCache
070307d0 T svcKernelSetState
070307d8 T svcQueryProcessMemory
070307fc 00000030 t CTRPluginFramework::GetCurrentTime()
0703082c 00000014 T CTRPluginFramework::Clock::Clock()
0703082c 00000014 T CTRPluginFramework::Clock::Clock()
07030840 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030840 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030848 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
07030880 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
070308b0 00000044 T CTRPluginFramework::Clock::Restart()
070308f4 00000014 T CTRPluginFramework::Touch::IsDown()
07030908 00000028 T CTRPluginFramework::Touch::GetPosition()
07030930 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07030930 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070309b4 00000048 T CTRPluginFramework::Task::~Task()
070309b4 00000048 T CTRPluginFramework::Task::~Task()
070309fc 00000030 T CTRPluginFramework::Task::Start() const
07030a2c 00000044 T CTRPluginFramework::Task::Wait() const
07030a70 00000014 T CTRPluginFramework::Task::Status() const
07030a84 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030a84 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030aac 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030b2c 00000048 T CTRPluginFramework::LineWriter::Flush()
07030b74 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030b74 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030b90 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030bfc 00000018 T CTRPluginFramework::LineWriter::Close()
07030c14 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030cd8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
07030d50 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703108c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0703108c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
070310ac 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031134 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031134 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031260 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0703129c 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703139c 00000084 T CTRPluginFramework::ARCode::Update()
07031420 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07031420 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07031444 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0703146c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703146c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07031524 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031524 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031558 00000040 T CTRPluginFramework::ARCodeContext::Update()
07031598 00000090 T CTRPluginFramework::ARCodeContext::Clear()
07031628 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07031700 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07031700 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07031720 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
07031738 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703182c 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
07031848 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703195c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703196c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
070319e4 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070319fc 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07031a50 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031a94 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031adc 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031fb0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031fb0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031ff4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07031ff4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07032008 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07032028 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
070321a0 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
070322c4 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070329f8 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07032a48 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032a48 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032ab0 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032acc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032acc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032b18 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07032c34 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07032cc4 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07032ddc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07032e64 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032ec0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032ec0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032f38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032f38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032f38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032f38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032f88 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070342dc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070342dc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07034470 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07034724 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
070347ac 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070347f0 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07034804 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07034840 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070349a8 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070349e4 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07034a48 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07034a6c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07034a94 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034a94 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034abc 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07034e3c 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
070354c0 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0703550c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070355c4 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07035a38 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07035f04 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07035ffc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07036084 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
070360c0 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070363e4 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07036460 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
070364cc 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07036504 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07036580 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703694c 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07036b50 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07036bf0 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07036cac 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07036d68 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07036e14 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07036ea0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07037018 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703712c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070371d4 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703723c 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
070372cc 00000160 T ARM_Disasm::Decode01(unsigned long)
0703742c 00000028 T ARM_Disasm::Decode10(unsigned long)
07037454 0000007c T ARM_Disasm::Decode11(unsigned long)
070374d0 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07037538 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07037588 00000118 T ARM_Disasm::DecodeALU(unsigned long)
070376a0 000000c4 T ARM_Disasm::Decode00(unsigned long)
07037764 00000030 T ARM_Disasm::Decode(unsigned long)
07037794 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
0703786c 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07037b50 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07037e40 00000020 T CTRPluginFramework::Button::~Button()
07037e40 00000020 T CTRPluginFramework::Button::~Button()
07037e60 0000001c T CTRPluginFramework::Button::~Button()
07037e7c 00000040 T CTRPluginFramework::Button::operator()()
07037ebc 00000148 T CTRPluginFramework::Button::Draw()
07038004 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07038158 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038158 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703827c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703827c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703829c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703829c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038330 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038330 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038344 00000018 T CTRPluginFramework::Button::Enable(bool)
0703835c 00000010 T CTRPluginFramework::Button::Enable()
0703836c 00000010 T CTRPluginFramework::Button::Disable()
0703837c 00000010 T CTRPluginFramework::Button::Lock()
0703838c 00000010 T CTRPluginFramework::Button::Execute()
0703839c 00000018 T CTRPluginFramework::Button::SetState(bool)
070383b4 00000010 T CTRPluginFramework::Button::GetState() const
070383c4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070383c4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070383d8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070383d8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070383f8 00000024 T CTRPluginFramework::UIContainer::Draw()
0703841c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07038450 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07038514 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07038554 00000094 T CTRPluginFramework::ComboBox::Draw()
070385e8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070385e8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07038634 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07038650 000000a8 T CTRPluginFramework::ComboBox::operator()()
070386f8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070386f8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07038744 0000003c T CTRPluginFramework::ComboBox::Clear()
07038780 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070387d0 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07038854 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038854 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038858 00000014 T CTRPluginFramework::FloatingButton::Draw()
0703886c 00000014 T CTRPluginFramework::FloatingButton::operator()()
07038880 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038894 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07038a54 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038a54 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038a94 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038a94 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038b54 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07038bf0 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07038c90 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07038ca8 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07038cd8 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038d78 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038d78 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038e28 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038e28 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038ed4 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038ed4 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038f54 00000040 T CTRPluginFramework::TouchKey::Clear()
07038f94 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038f94 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038fb4 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07038fd0 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07038fd8 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07039038 00000060 T CTRPluginFramework::TouchKey::Draw()
07039098 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07039134 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070391f8 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070391f8 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07039348 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039348 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039368 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039384 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07039400 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07039438 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070394a0 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07039598 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070395a8 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070395b8 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070395c0 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070395cc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070395cc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07039634 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070396a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
07039720 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07039720 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703976c 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703982c 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07039964 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703998c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070399f0 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07039d00 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07039df4 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703a03c 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703a368 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703a3f0 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
0703a488 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703a504 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703a5b8 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703a744 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703a78c 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703a8d4 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703aa2c 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
0703ab10 00000030 W std::__cxx11::to_string(unsigned long)
0703ab40 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ab40 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703abf4 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0703ac78 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703b1c0 00000230 T CTRPluginFramework::SearchMenu::Update()
0703b3f0 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b900 000000e4 T CTRPluginFramework::Converter::Converter()
0703b900 000000e4 T CTRPluginFramework::Converter::Converter()
0703b9e4 00000010 T CTRPluginFramework::Converter::Instance()
0703b9f4 00000108 T CTRPluginFramework::Converter::_Draw()
0703bafc 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bafc 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bb10 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703bd2c 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c1b0 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c638 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703cab4 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d0dc 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d9e8 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e2f8 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ebcc 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f80c 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070400b0 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070409ec 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041310 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070420ac 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042d10 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043454 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704385c 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043f3c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070441cc 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044474 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044704 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07044738 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044a5c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07044a80 00000004 t addrMapNodeDestructor(rbtree_node*)
07044a84 000000d8 T mappableAlloc
07044b5c 00000050 T mappableFree
07044bac 00000090 T __system_allocateHeaps
07044c3c 0000005c t getSysTime
07044c98 000000fc T __libctru_gtod
07044d94 00000008 T envGetHandle
07044d9c 00000004 T envDestroyHandles
07044da0 00000020 T __libctru_exit
07044dc0 00000020 T __appExit
07044de0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044de0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044e0c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044e0c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044e24 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07044f2c 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
07044f8c 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07044f94 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07044fb8 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07044fdc 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07045000 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07045028 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07045050 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07045078 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07045148 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07046fbc 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0704702c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0704704c 00000008 T __cxa_pure_virtual
07047054 00000010 T __aeabi_atexit
07047064 00000004 T operator new[](unsigned int)
07047068 00000058 T operator new(unsigned int)
070470c0 00000034 T __cxxabiv1::__terminate(void (*)())
070470f4 00000018 T std::terminate()
0704710c 0000000c T __cxxabiv1::__unexpected(void (*)())
07047118 00000018 T std::unexpected()
07047130 00000014 T std::get_terminate()
07047144 00000014 T std::get_unexpected()
07047158 0000000c T std::bad_alloc::what() const
07047164 00000020 T std::bad_alloc::~bad_alloc()
07047164 00000020 T std::bad_alloc::~bad_alloc()
07047184 0000002c T std::bad_alloc::~bad_alloc()
070471b0 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07047318 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07047380 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07047458 000006f4 T __gxx_personality_v0
07047b4c 00000004 T operator delete[](void*)
07047b50 00000014 T std::get_new_handler()
07047b64 0000005c T __cxa_guard_acquire
07047bc0 0000000c T __cxa_guard_release
07047bcc 00000004 T std::exception::~exception()
07047bcc 00000004 T std::exception::~exception()
07047bd0 00000004 T std::bad_exception::~bad_exception()
07047bd0 00000004 T std::bad_exception::~bad_exception()
07047bd4 0000000c T transaction clone for std::exception::what() const
07047bd4 0000000c T std::exception::what() const
07047be0 0000000c T transaction clone for std::bad_exception::what() const
07047be0 0000000c T std::bad_exception::what() const
07047bec 00000018 T std::bad_exception::~bad_exception()
07047c04 00000004 T operator delete(void*, unsigned int)
07047c08 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07047c68 00000070 T __cxa_init_primary_exception
07047cd8 00000054 T __cxa_throw
07047d2c 000000b0 T __cxa_rethrow
07047ddc 000000cc T __cxa_begin_catch
07047ea8 000000e0 T __cxa_end_catch
07047f88 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
07048074 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
07048128 00000044 T __cxa_allocate_exception
0704816c 00000030 T __cxa_free_exception
0704819c 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070481dc 00000004 T operator delete(void*)
070481e0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070481e0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07048200 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704822c 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07048298 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07048374 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070483b8 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
070483d0 00000014 T std::__detail::_List_node_base::_M_unhook()
070483e4 0000002c T std::__throw_bad_alloc()
07048410 00000040 T std::__throw_logic_error(char const*)
07048450 00000040 T std::__throw_invalid_argument(char const*)
07048490 00000040 T std::__throw_length_error(char const*)
070484d0 00000040 T std::__throw_out_of_range(char const*)
07048510 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704858c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
070485e0 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070485f4 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07048618 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704863c 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070486f4 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07048800 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0704887c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0704887c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070488e8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
070488e8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0704890c 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070489d8 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07048ae8 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07048b58 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07048bc4 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048c08 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048c20 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07048d44 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07048d7c 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07049004 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0704903c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049088 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
070490e8 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0704917c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704918c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704919c 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
070491c8 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07049210 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07049258 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
070492fc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0704930c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07049370 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070493a0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
070493ec 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0704949c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704949c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070494cc 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07049544 T __cxa_end_cleanup
07049554 00000138 T __cxa_type_match
0704968c 000000b4 T __cxa_begin_cleanup
07049740 000000b4 T __gnu_end_cleanup
070497f4 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07049864 0000002c T __cxa_call_terminate
07049890 00000158 T __cxa_call_unexpected
070499e8 0000000c T __cxa_get_globals_fast
070499f4 0000000c T __cxa_get_globals
07049a00 00000004 T std::type_info::~type_info()
07049a00 00000004 T std::type_info::~type_info()
07049a04 00000008 T std::type_info::__is_pointer_p() const
07049a04 00000008 T std::type_info::__is_function_p() const
07049a0c 0000004c T std::type_info::operator==(std::type_info const&) const
07049a58 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07049ab4 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07049ac8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049ac8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049ae8 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07049b14 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07049b7c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07049ba8 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07049bec 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049bec 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049c0c 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049c38 00000008 T std::logic_error::what() const
07049c40 00000064 T std::logic_error::~logic_error()
07049c40 00000064 T std::logic_error::~logic_error()
07049ca4 0000001c T std::logic_error::~logic_error()
07049cc0 00000020 T std::invalid_argument::~invalid_argument()
07049cc0 00000020 T std::invalid_argument::~invalid_argument()
07049ce0 00000028 T std::invalid_argument::~invalid_argument()
07049d08 00000020 T std::length_error::~length_error()
07049d08 00000020 T std::length_error::~length_error()
07049d28 00000028 T std::length_error::~length_error()
07049d50 00000020 T std::out_of_range::~out_of_range()
07049d50 00000020 T std::out_of_range::~out_of_range()
07049d70 00000028 T std::out_of_range::~out_of_range()
07049d98 00000038 T std::logic_error::logic_error(char const*)
07049d98 00000038 T std::logic_error::logic_error(char const*)
07049dd0 00000020 T std::invalid_argument::invalid_argument(char const*)
07049dd0 00000020 T std::invalid_argument::invalid_argument(char const*)
07049df0 00000020 T std::length_error::length_error(char const*)
07049df0 00000020 T std::length_error::length_error(char const*)
07049e10 00000020 T std::out_of_range::out_of_range(char const*)
07049e10 00000020 T std::out_of_range::out_of_range(char const*)
07049e30 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07049e9c 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07049f1c 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0704a014 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0704a098 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
0704a098 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
0704a108 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704a10c 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0704a13c 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a13c 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a180 000002bc T log2
0704a43c 00000024 t with_errno
0704a460 00000048 T __math_divzero
0704a4a8 0000001c T __math_invalid
0704a4c8 0000015c T ceil
0704a624 000000b4 T ceilf
0704a6d8 0000016c T floor
0704a844 00000088 T roundf
0704a8d0 00000108 T sqrtf
0704a9d8 00000008 T __ieee754_sqrtf
0704a9e0 00000008 T matherr
0704a9e8 0000002c T __aeabi_f2lz
0704a9e8 0000002c T __fixsfdi
0704aa14 0000002c T __aeabi_d2lz
0704aa14 0000002c T __fixdfdi
0704aa40 00000040 T __aeabi_f2ulz
0704aa40 00000040 T __fixunssfdi
0704aa80 00000040 T __aeabi_d2ulz
0704aa80 00000040 T __fixunsdfdi
0704aac0 00000128 T __udivmoddi4
0704abe8 00000018 t selfrel_offset31
0704ac00 00000094 t search_EIT_table
0704ac94 00000040 t __gnu_unwind_get_pr_addr
0704acd4 0000011c t get_eit_entry
0704adf0 00000088 t restore_non_core_regs
0704ae78 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704ae8c 00000004 t _Unwind_DebugHook
0704ae90 00000064 t unwind_phase2
0704aef4 0000014c t unwind_phase2_forced
0704b040 000000a4 T __gnu_Unwind_RaiseException
0704b0e4 00000024 T __gnu_Unwind_ForcedUnwind
0704b108 00000074 T __gnu_Unwind_Resume
0704b17c 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704b19c 00000004 T _Unwind_Complete
0704b1a0 00000018 T _Unwind_DeleteException
0704b1b8 00000054 T _Unwind_VRS_Get
0704b20c 0000002c t _Unwind_GetGR
0704b238 00000054 T _Unwind_VRS_Set
0704b28c 0000002c t _Unwind_SetGR
0704b2b8 000000c0 T __gnu_Unwind_Backtrace
0704b378 00000448 t __gnu_unwind_pr_common
0704b7c0 00000008 T __aeabi_unwind_cpp_pr0
0704b7c8 00000008 W __aeabi_unwind_cpp_pr1
0704b7d0 00000008 W __aeabi_unwind_cpp_pr2
0704b7d8 000003dc T _Unwind_VRS_Pop
0704bbb4 00000060 t next_unwind_byte
0704bc14 0000002c t _Unwind_GetGR.constprop.0
0704bc40 00000004 t unwind_UCB_from_context
0704bc44 000003c8 T __gnu_unwind_execute
0704c00c 00000048 T __gnu_unwind_frame
0704c054 00000010 T _Unwind_GetRegionStart
0704c064 0000001c T _Unwind_GetLanguageSpecificData
0704c080 00000008 T _Unwind_GetDataRelBase
0704c088 00000008 T _Unwind_GetTextRelBase
0704c090 00000010 T ctime
0704c0a0 00000014 T __cxa_atexit
0704c0b4 0000000c T __errno
0704c0c0 0000007c T __libc_init_array
0704c13c 00000018 T isspace
0704c154 00000018 T isxdigit
0704c16c 0000001c T localtime
0704c188 00000378 T localtime_r
0704c500 00000020 T memalign
0704c520 0000014c T _memalign_r
0704c66c 00000018 T malloc
0704c684 00000018 T free
0704c69c 000007d8 T _malloc_r
0704ce74 00000100 T memchr
0704cf74 000000fc T memcmp
0704d070 00000118 T memcpy
0704d188 00000154 T memmove
0704d2dc 00000114 T memset
0704d3f0 0000000c T __malloc_lock
0704d3fc 0000000c T __malloc_unlock
0704d408 000000d4 T snprintf
0704d4dc 00000064 T sprintf
0704d540 00000008 T __seofread
0704d548 00000154 t iso_year_adjust
0704d69c 00001138 t __strftime
0704e7d4 00000020 T strftime
0704e7f4 0000005c T strlen
0704e850 0000010c T strncmp
0704e95c 000000e0 T strncpy
0704ea3c 00000054 t sulp
0704ea90 000013c4 T _strtod_l
0704fe58 000000bc T strtof
0704ff18 0000025c t _strtoull_l.isra.0
07050174 00000004 T _strtoull_r
07050178 000001d0 t _strtoul_l.isra.0
07050348 00000004 T _strtoul_r
0705034c 00000028 T strtoul
07050374 00000620 t get_arg
07050998 000035c0 T _svfprintf_r
07053f58 0000003c T time
07053f94 00000224 T __tzcalc_limits
070541b8 0000000c T __tz_lock
070541c4 0000000c T __tz_unlock
070541d0 00000010 T _tzset_unlocked
070541e0 0000046c T _tzset_unlocked_r
0705464c 000000a4 T _vsnprintf_r
070546f0 00000038 T vsnprintf
07054728 00000054 T _wcrtomb_r
0705477c 00000020 T _wcsrtombs_r
0705479c 0000000c T abs
070547a8 0000001c T asctime
070547c4 00000078 T asctime_r
0705483c 000000b0 T __register_exitproc
070548ec 000001c8 t quorem
07054ab8 000012ec T _dtoa_r
07055da4 000000f8 T _malloc_trim_r
07055e9c 000002e4 T _free_r
07056180 000000ec t rshift
0705626c 00000828 T __gethex
07056a94 00000060 T __match
07056af4 00000254 T __hexnan
07056d48 000000c8 T _findenv_r
07056e10 00000018 T _getenv_r
07056e28 0000000c T __gettzinfo
07056e34 0000027c T gmtime_r
070570b0 0000000c T labs
070570bc 0000000c T _localeconv_r
070570c8 00000010 T __locale_mb_cur_max
070570d8 000002fc T __utf8_mbtowc
070573d4 00000088 T _Balloc
0705745c 0000001c T _Bfree
07057478 000000e0 T __multadd
07057558 000000e4 T __s2b
0705763c 00000058 T __hi0bits
07057694 0000009c T __lo0bits
07057730 00000020 T __i2b
07057750 000001c4 T __multiply
07057914 00000100 T __pow5mult
07057a14 000000f4 T __lshift
07057b08 0000005c T __mcmp
07057b64 00000168 T __mdiff
07057ccc 00000074 T __ulp
07057d40 000000d4 T __b2d
07057e14 00000100 T __d2b
07057f14 00000084 T __ratio
07057f98 0000006c T __copybits
07058004 00000078 T __any_on
0705807c 0000000c T nanf
07058088 000000a8 T frexp
07058130 00000064 T siprintf
07058194 00000074 T siscanf
07058208 00000010 T nan
07058218 000000d4 T sniprintf
070582ec 000000f0 T strcpy
070583dc 000001bc t _strtol_l.isra.0
07058598 00000004 T _strtol_r
0705859c 00000620 t get_arg
07058bbc 00000188 T __ssprint_r
07058d44 0000248c T _svfiprintf_r
0705b1d0 00000048 t get_arg
0705b218 000000e4 T _sungetc_r
0705b2fc 0000006c T __ssrefill_r
0705b368 000000c8 T _sfread_r
0705b430 00002234 T __ssvfiscanf_r
0705d664 000000a4 T __submore
0705d708 00000184 T _wcsnrtombs_l
0705d88c 0000004c T _wcsnrtombs_r
0705d8d8 000000e8 T __utf8_wctomb
0705d9c0 00000094 T _calloc_r
0705da54 0000000c T __env_lock
0705da60 0000000c T __env_unlock
0705da6c 00000008 T iswspace
0705da74 00000060 T _mbrtowc_r
0705dad4 00000020 T realloc
0705daf4 000004bc T _realloc_r
0705dfb0 000000cc T __sccl
0705e07c 0000025c t _strtoll_l.isra.0
0705e2d8 00000004 T _strtoll_r
0705e2dc 0000003c T iswspace_l
0705e318 000001e0 t __jp2uc
0705e4f8 00000094 T _jp2uc_l
0705e58c 00000084 T category
0705e610 0000002c T _gettimeofday_r
0705e63c 00000070 T _sbrk_r
0705e6ac 00000018 T __libc_lock_acquire
0705e6c4 00000018 T __libc_lock_release
0705e6dc 00000018 T __libc_lock_acquire_recursive
0705e6f4 00000018 T __libc_lock_release_recursive
0705e70c 00000028 T __getreent
0705e734 T _fini
0705e74c 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0705e934 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0705e940 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0705e954 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0705e970 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0705e980 00000030 r ._190
0705e9b0 00000090 r ._188
0705ea40 00000010 r ._189
0705ea50 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0705ea9c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705eabc 00000a00 r font
0705f4bc 0000001c R vtable for CTRPluginFramework::TextBox
0705f4f8 00000058 r CTRPluginFramework::g_OSDPattern
0705f580 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705f594 00000038 r CTRPluginFramework::stable
0705f5cc 00000038 r CTRPluginFramework::ktable
0705f604 00000048 r CTRPluginFramework::g_ctrpf
0705f64c 00000030 r CTRPluginFramework::g_byme
0705f6a8 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705f6c0 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705f6d8 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705f6f0 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705f708 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705f710 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705f72c 00000038 R vtable for CTRPluginFramework::Search
0705f764 00000038 R vtable for CTRPluginFramework::Search32
0705f79c 00000005 r CSWTCH.74
0705f7a4 00000004 R Search15_array_length
0705f7a8 00000384 r Search15_array
0705fb2c 00000004 R UnCheckedCheckbox_array_length
0705fb30 00000384 r UnCheckedCheckbox_array
0705feb4 00000004 R Unsplash15_array_length
0705feb8 00000384 r Unsplash15_array
0706023c 00000004 R Plus25_array_length
07060240 000009c4 r Plus25_array
07060c04 00000004 R GameControllerFilled25_array_length
07060c08 000009c4 r GameControllerFilled25_array
070615cc 00000004 R About15_array_length
070615d0 00000384 r About15_array
07061954 00000004 R Trash25_array_length
07061958 000009c4 r Trash25_array
0706231c 00000004 R Cut25_array_length
07062320 000009c4 r Cut25_array
07062ce4 00000004 R CloseWindow20_array_length
07062ce8 00000640 r CloseWindow20_array
07063328 00000004 R AddFavoriteFilled25_array_length
0706332c 000009c4 r AddFavoriteFilled25_array
07063cf0 00000004 R ClearSymbolFilled15_array_length
07063cf4 00000384 r ClearSymbolFilled15_array
07064078 00000004 R ClipboardFilled25_array_length
0706407c 000009c4 r ClipboardFilled25_array
07064a40 00000004 R CheckedCheckbox_array_length
07064a44 00000384 r CheckedCheckbox_array
07064dc8 00000004 R CutFilled25_array_length
07064dcc 000009c4 r CutFilled25_array
07065790 00000004 R CapsLockOn15_array_length
07065794 00000384 r CapsLockOn15_array
07065b18 00000004 R TrashFilled25_array_length
07065b1c 000009c4 r TrashFilled25_array
070664e0 00000004 R RAM15_array_length
070664e4 00000384 r RAM15_array
07066868 00000004 R More15_array_length
0706686c 00000384 r More15_array
07066bf0 00000004 R InfoFilled25_array_length
07066bf4 000009c4 r InfoFilled25_array
070675b8 00000004 R CloseWindowFilled20_array_length
070675bc 00000640 r CloseWindowFilled20_array
07067bfc 00000004 R HandCursor15_array_length
07067c00 00000384 r HandCursor15_array
07067f84 00000004 R EnterKey15_array_length
07067f88 00000384 r EnterKey15_array
0706830c 00000004 R Duplicate25_array_length
07068310 000009c4 r Duplicate25_array
07068cd4 00000004 R Settings15_array_length
07068cd8 00000384 r Settings15_array
0706905c 00000004 R File15_array_length
07069060 00000384 r File15_array
070693e4 00000004 R AddFavorite25_array_length
070693e8 000009c4 r AddFavorite25_array
07069dac 00000004 R Edit25_array_length
07069db0 000009c4 r Edit25_array
0706a774 00000004 R DuplicateFilled25_array_length
0706a778 000009c4 r DuplicateFilled25_array
0706b13c 00000004 R Save25_array_length
0706b140 000009c4 r Save25_array
0706bb04 00000004 R Clipboard25_array_length
0706bb08 000009c4 r Clipboard25_array
0706c4cc 00000004 R Info25_array_length
0706c4d0 000009c4 r Info25_array
0706ce94 00000004 R EditFilled25_array_length
0706ce98 000009c4 r EditFilled25_array
0706d85c 00000004 R KeyboardFilled25_array_length
0706d860 000009c4 r KeyboardFilled25_array
0706e224 00000004 R PlusFilled25_array_length
0706e228 000009c4 r PlusFilled25_array
0706ebec 00000004 R Shutdown15_array_length
0706ebf0 00000384 r Shutdown15_array
0706ef74 00000004 R ClearSymbol15_array_length
0706ef78 00000384 r ClearSymbol15_array
0706f2fc 00000004 R Maintenance15_array_length
0706f300 00000384 r Maintenance15_array
0706f684 00000004 R Controller15_array_length
0706f688 00000384 r Controller15_array
0706fa0c 00000004 R Grid15_array_length
0706fa10 00000384 r Grid15_array
0706fd94 00000004 R Keyboard25_array_length
0706fd98 000009c4 r Keyboard25_array
0707075c 00000004 R CapsLockOnFilled15_array_length
07070760 00000384 r CapsLockOnFilled15_array
07070ae4 00000004 R UserManualFilled15_array_length
07070ae8 00000384 r UserManualFilled15_array
07070e6c 00000004 R Rocket40_array_length
07070e70 00001900 r Rocket40_array
07072770 00000004 R Star15_array_length
07072774 00000384 r Star15_array
07072af8 00000004 R EnterKeyFilled15_array_length
07072afc 00000384 r EnterKeyFilled15_array
07072e80 00000004 R GameController25_array_length
07072e84 000009c4 r GameController25_array
07073848 00000004 R FolderFilled_array_length
0707384c 00000384 r FolderFilled_array
07073bd0 00000004 R Restart15_array_length
07073bd4 00000384 r Restart15_array
07073f88 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07073fa4 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07073fb0 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07074030 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07074044 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0707404c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07074054 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0707405c 00000040 r RegNames
0707409c 00000040 r cond_names
070740dc 00000010 r shift_names
070740ec 0000001c R vtable for CTRPluginFramework::Button
07074108 0000001c R vtable for CTRPluginFramework::ComboBox
07074124 0000001c R vtable for CTRPluginFramework::FloatingButton
07074140 0000001c R vtable for CTRPluginFramework::TouchKey
0707415c 0000001c R vtable for CTRPluginFramework::NumericTextBox
0707665c 00000014 V vtable for CTRPluginFramework::MenuItem
07076d34 0000001c V vtable for CTRPluginFramework::MenuEntryTools
070780f4 0000000c R typeinfo for std::bad_alloc
07078100 0000000d R typeinfo name for std::bad_alloc
07078110 00000014 R vtable for std::bad_alloc
07078148 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07078150 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07078158 0000000c R typeinfo for std::bad_exception
07078164 00000008 R typeinfo for std::exception
0707816c 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0707818c 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
070781b0 00000012 R typeinfo name for std::bad_exception
070781c4 0000000d R typeinfo name for std::exception
070781d4 00000014 R vtable for std::bad_exception
070781e8 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070781f4 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0707821c 0000002c R vtable for __cxxabiv1::__si_class_type_info
07078378 00000008 R typeinfo for std::type_info
07078380 0000000d R typeinfo name for std::type_info
07078390 0000000c R typeinfo for __cxxabiv1::__class_type_info
0707839c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070783c0 0000002c R vtable for __cxxabiv1::__class_type_info
070783ec 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070783f8 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0707841c 00000014 R vtable for __gnu_cxx::recursive_init_error
07078430 0000000c R typeinfo for std::logic_error
0707843c 0000000c R typeinfo for std::length_error
07078448 0000000c R typeinfo for std::out_of_range
07078454 0000000c R typeinfo for std::invalid_argument
07078460 00000010 R typeinfo name for std::logic_error
07078470 00000011 R typeinfo name for std::length_error
07078484 00000011 R typeinfo name for std::out_of_range
07078498 00000015 R typeinfo name for std::invalid_argument
070784b0 00000014 R vtable for std::logic_error
070784c4 00000014 R vtable for std::length_error
070784d8 00000014 R vtable for std::out_of_range
070784ec 00000014 R vtable for std::invalid_argument
070785c8 00000890 R __log2_data
07078e58 00000004 R _global_impure_ptr
07078e5c 00000060 R __month_lengths
07078f48 00000014 r fpi.7554
07078f5c 00000014 r fpinan.7590
07078f70 00000028 r tinytens
07078fd4 00000010 r blanks.8740
07078fe4 00000010 r zeroes.8741
07078ff4 000000fc R _C_time_locale
070792bc 00000015 r day_name.6253
070792d4 00000024 r mon_name.6254
070792f8 00000101 R _ctype_
07079410 00000100 R __hexdig
07079510 0000000c R _C_numeric_locale
07079568 00000028 R __mprec_bigtens
07079590 000000c8 R __mprec_tens
07079658 0000000c r p05.7474
07079664 0000006c R __action_table
070796d0 00000100 R __chclass
070797d0 0000006c R __state_table
0707983c 00000010 r blanks.8719
0707984c 00000010 r zeroes.8720
0707985c 00000022 r basefix.8286
07079894 000000bc r a1
07079950 000000bc r a2
07079a0c 0000005b r a3
07079a68 00000070 r a6
07079ad8 000000a2 r a7
07079b7c 00000040 r a8
07079bbc 0000172a r b02cf
0707b2e8 00001a7c r d02f4
0707cd64 0000309c r categories
0707ff14 R __exidx_start
070801cc R __exidx_end
070801cc 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
070801d0 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
070801d4 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
070801d8 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
070801dc 00000001 D CTRPluginFramework::g_keepRunning
070801e0 00000004 D CTRPluginFramework::FwkSettings::Header
070801e4 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070801e8 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070801ec 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
070801f0 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070801f4 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070801f8 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070801fc 00000004 D CTRPluginFramework::Screenshot::Screens
07080200 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07080204 00000001 D CTRPluginFramework::SystemImpl::Language
07080205 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
07080208 00000004 D Search15
0708020c 00000004 D UnCheckedCheckbox
07080210 00000004 D Unsplash15
07080214 00000004 D Plus25
07080218 00000004 D GameControllerFilled25
0708021c 00000004 D About15
07080220 00000004 D Trash25
07080224 00000004 D Cut25
07080228 00000004 D CloseWindow20
0708022c 00000004 D AddFavoriteFilled25
07080230 00000004 D ClearSymbolFilled15
07080234 00000004 D ClipboardFilled25
07080238 00000004 D CheckedCheckbox
0708023c 00000004 D CutFilled25
07080240 00000004 D CapsLockOn15
07080244 00000004 D TrashFilled25
07080248 00000004 D RAM15
0708024c 00000004 D More15
07080250 00000004 D InfoFilled25
07080254 00000004 D CloseWindowFilled20
07080258 00000004 D HandCursor15
0708025c 00000004 D EnterKey15
07080260 00000004 D Duplicate25
07080264 00000004 D Settings15
07080268 00000004 D File15
0708026c 00000004 D AddFavorite25
07080270 00000004 D Edit25
07080274 00000004 D DuplicateFilled25
07080278 00000004 D Save25
0708027c 00000004 D Clipboard25
07080280 00000004 D Info25
07080284 00000004 D EditFilled25
07080288 00000004 D KeyboardFilled25
0708028c 00000004 D PlusFilled25
07080290 00000004 D Shutdown15
07080294 00000004 D ClearSymbol15
07080298 00000004 D Maintenance15
0708029c 00000004 D Controller15
070802a0 00000004 D Grid15
070802a4 00000004 D Keyboard25
070802a8 00000004 D CapsLockOnFilled15
070802ac 00000004 D UserManualFilled15
070802b0 00000004 D Rocket40
070802b4 00000004 D Star15
070802b8 00000004 D EnterKeyFilled15
070802bc 00000004 D GameController25
070802c0 00000004 D FolderFilled
070802c4 00000004 D Restart15
070802c8 000001f4 D opcode_names
070804bc D __dso_handle
070804c0 00000004 D __cxxabiv1::__terminate_handler
070804c4 00000004 D __cxxabiv1::__unexpected_handler
070804c8 00000001 D __fdlib_version
070804cc 00000004 D _impure_ptr
070804d0 00000460 d impure_data
07080930 00000408 D __malloc_av_
07080d38 00000004 D __malloc_sbrk_base
07080d3c 00000004 D __malloc_trim_threshold
07080d40 0000000c d __malloc_recursive_mutex
07080d4c 00000004 d __tz_mutex
07080d50 00000008 D _tzname
07080d58 0000000c D __atexit_recursive_mutex
07080d68 00000058 d tzinfo
07080dc0 00000002 d numempty
07080dc4 0000016c D __global_locale
07080f30 00000004 D environ
07080f34 0000000c d __env_recursive_mutex
07080f40 D __TMC_END__
07080f50 d _GLOBAL_OFFSET_TABLE_
07080f5c D __tdata_lma
07080f68 t __frame_dummy_init_array_entry
07080f68 T __init_array_start
07080f68 B __preinit_array_end
07080f68 B __preinit_array_start
07080f68 D __tdata_lma_end
07080fc0 t __do_global_dtors_aux_fini_array_entry
07080fc0 T __init_array_end
07080fc4 B __c_bss_start
07080fc4 00000004 B CTRPluginFramework::offset
07080fc8 000000b4 b CTRPluginFramework::original_speed
0708107c 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
07081080 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
07081084 00000004 B CTRPluginFramework::data
07081088 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0708108c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
07081090 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
07081094 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
07081098 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0708109c 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
070810a0 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
070810a1 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
070810a4 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
070810a8 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
070810a9 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
070810aa 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
070810ab 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
070810ac 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
070810ad 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
070810b0 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070810b4 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070810b8 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
070810bc 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
070810be 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
070810c0 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
070810c4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070810c8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070810cc 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070810d0 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070810dc 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
070810e0 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
070810ec 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070810f0 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070810fc 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
07081100 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
0708110c 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07081110 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0708111c 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
07081120 00000004 b g_onLoadCroLock
07081124 00000004 B g_mainThread
07081128 00000004 B CTRPluginFramework::g_keepEvent
0708112c 00000004 B CTRPluginFramework::g_continueGameEvent
07081130 0000005c b CTRPluginFramework::exception_data
0708118c 00000004 B CTRPluginFramework::g_keepThreadHandle
07081190 00000018 b g_onLoadCroHook
070811a8 00000008 B CTRPluginFramework::_sdmcArchive
070811b0 00000004 B g_gspEventThreadPriority
070811b4 00000004 B CTRPluginFramework::g_resumeEvent
070811b8 00001000 b CTRPluginFramework::keepThreadStack
070821b8 00000004 B __ctru_heap_size
070821bc 00000004 B CTRPluginFramework::Color::Black
070821c0 00000004 B CTRPluginFramework::Color::White
070821c4 00000004 B CTRPluginFramework::Color::Red
070821c8 00000004 B CTRPluginFramework::Color::Lime
070821cc 00000004 B CTRPluginFramework::Color::Blue
070821d0 00000004 B CTRPluginFramework::Color::Yellow
070821d4 00000004 B CTRPluginFramework::Color::Cyan
070821d8 00000004 B CTRPluginFramework::Color::Magenta
070821dc 00000004 B CTRPluginFramework::Color::Silver
070821e0 00000004 B CTRPluginFramework::Color::Gray
070821e4 00000004 B CTRPluginFramework::Color::Maroon
070821e8 00000004 B CTRPluginFramework::Color::Olive
070821ec 00000004 B CTRPluginFramework::Color::Green
070821f0 00000004 B CTRPluginFramework::Color::Purple
070821f4 00000004 B CTRPluginFramework::Color::Teal
070821f8 00000004 B CTRPluginFramework::Color::Navy
070821fc 00000004 B CTRPluginFramework::Color::BlackGrey
07082200 00000004 B CTRPluginFramework::Color::Brown
07082204 00000004 B CTRPluginFramework::Color::DarkGrey
07082208 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0708220c 00000004 B CTRPluginFramework::Color::DimGrey
07082210 00000004 B CTRPluginFramework::Color::DodgerBlue
07082214 00000004 B CTRPluginFramework::Color::Gainsboro
07082218 00000004 B CTRPluginFramework::Color::ForestGreen
0708221c 00000004 B CTRPluginFramework::Color::LimeGreen
07082220 00000004 B CTRPluginFramework::Color::Orange
07082224 00000004 B CTRPluginFramework::Color::SkyBlue
07082228 00000004 B CTRPluginFramework::Color::Turquoise
0708222c 00000004 b CTRPluginFramework::g_runningInstance
07082230 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082238 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082240 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082248 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708224c 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708224e 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082250 00000180 b CTRPluginFramework::g_keyName
070823d0 00000004 B CTRPluginFramework::__fileHandle
070823d8 00000008 B CTRPluginFramework::Time::Zero
070823e0 00000004 B CTRPluginFramework::System::OnAbort
070823e4 00000004 B CTRPluginFramework::Controller::_keysDown
070823e8 00000004 B CTRPluginFramework::Controller::_keysHeld
070823ec 00000004 B CTRPluginFramework::Controller::_keysReleased
070823f0 000009c4 b CTRPluginFramework::g_rng
07082db8 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
07082dbc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07082dc0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07082dc4 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
07082dc5 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
07082dc6 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
07082dc7 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
07082dc8 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
07082dc9 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
07082dca 00000001 B CTRPluginFramework::Preferences::ShowTopFps
07082dcb 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
07082dcc 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07082dcd 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07082dd0 00000070 B CTRPluginFramework::Preferences::Settings
07082e40 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07082e58 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07082e70 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07082e88 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
07082e89 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
07082e8a 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
07082e8c 00000004 b CTRPluginFramework::defaultSysFont
07082e90 00000004 B CTRPluginFramework::g_fontAllocated
07082e94 00000004 b CTRPluginFramework::tileData
07082e98 00000004 b CTRPluginFramework::glyph
07082e9c 0000000c B CTRPluginFramework::Font::_mutex
07082ea8 00000004 B CTRPluginFramework::g_glyphAllocated
07082eac 00000028 B CTRPluginFramework::Window::BottomWindow
07082ed4 00000028 B CTRPluginFramework::Window::TopWindow
07082efc 00000004 B CTRPluginFramework::RendererPriv::g_customColor
07082f00 00000008 B CTRPluginFramework::Renderer::hookContext
07082f08 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07082f0c 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07082f10 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07082f14 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07082f20 0000000c B CTRPluginFramework::OSDImpl::RecLock
07082f2c 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
07082f38 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07082f50 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07082f68 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
07082f6c 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
07082f74 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07082f78 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
07082f80 00000018 B CTRPluginFramework::OSDImpl::OSDHook
07082f98 00000010 b CTRPluginFramework::InstallOSD()::returnCode
07082fa8 00000004 B CTRPluginFramework::OSDImpl::HookReturn
07082fac 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
07082fb4 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
07082fd8 0000000c B CTRPluginFramework::OSDImpl::Callbacks
07082fe4 00000004 b CTRPluginFramework::g_second
07082fe8 00000010 b CTRPluginFramework::g_fpsClock
07082ff8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
07082ffc 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
07082ffd 00000001 B CTRPluginFramework::OSDImpl::MessColors
07083000 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
07083004 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07083008 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083010 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083030 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07083038 00000004 b CTRPluginFramework::g_ctrpfString
0708303c 00000004 b CTRPluginFramework::g_bymeString
07083040 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083048 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083050 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083058 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083060 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
07083064 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07083068 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083070 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083078 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708307c 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07083080 00000004 b CTRPluginFramework::g_mode
07083084 00000004 b CTRPluginFramework::g_OpenFileLock
07083088 00000004 b CTRPluginFramework::g_HookMode
07083090 00000040 b CTRPluginFramework::g_hookExportFile
070830d0 00000010 b CTRPluginFramework::g_returncode
070830e0 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
070830f8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070830fc 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
07083100 00000004 b CTRPluginFramework::g_screenshotEntry
07083104 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083108 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708310c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07083110 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07083114 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07083118 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07083128 00000004 B CTRPluginFramework::__g_hexEditor
0708312c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083130 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083140 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
07083144 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07083148 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07083158 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083168 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07083178 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708317c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083180 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07083184 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07083194 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07083198 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070831a8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070831ac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070831bc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070831c0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070831c8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070831d0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070831d8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070831e0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070831e8 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070831ec 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070831f8 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
07083204 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07083210 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083218 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083220 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07083224 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07083234 00000004 b CTRPluginFramework::__pmARinstance
07083238 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708323c 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083240 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083250 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083260 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083264 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083268 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083270 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083280 00000004 b CTRPluginFramework::g_radioId
07083284 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
07083288 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0708328c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
07083290 00000004 B CTRPluginFramework::_pool
07083298 00000008 B CTRPluginFramework::Screenshot::_timer
070832a0 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070832a8 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070832b0 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070832c8 00000004 B CTRPluginFramework::Screenshot::_filecount
070832cc 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070832e4 00000004 B CTRPluginFramework::Screenshot::_display
070832e8 00000004 B CTRPluginFramework::Screenshot::_mode
070832f0 00000008 B CTRPluginFramework::Screenshot::Timer
070832f8 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070832fc 00000004 B CTRPluginFramework::Screenshot::_task
07083300 00000004 B CTRPluginFramework::Screenshot::_count
07083304 00000008 b CTRPluginFramework::g_sleepEvent
0708330c 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07083310 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
07083314 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07083318 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708331c 00000004 B CTRPluginFramework::HookManager::instance
07083320 00000078 B CTRPluginFramework::Scheduler::_singleton
07083398 00000040 b CTRPluginFramework::_topBuf
070833d8 00000004 B CTRPluginFramework::ScreenImpl::Top
070833dc 00000040 b CTRPluginFramework::_botBuf
0708341c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
07083420 0000000c b CTRPluginFramework::Heap::_mutex
0708342c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07083430 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
07083434 00000008 b CTRPluginFramework::Heap::g_heapPool
0708343c 0000000c b sAddrMap
07083448 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07083460 0000000c B CTRPluginFramework::FSPath::FSMutex
07083470 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
07083474 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070834d8 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070834dc 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070834e0 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070834e8 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070834ec 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070834f0 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070834fc 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07083508 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07083518 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0708351a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
07083520 0000000c b _mutex
0708352c 00000008 b sVramPool
07083534 0000000c b sAddrMap
07083540 00000004 b srvRefCount
07083544 00000004 b srv2Handle
07083548 00000004 b errfRefCount
0708354c 00000004 b errfHandle
07083550 00000004 b sharedFontAddr
07083554 00000004 b arbiter
07083558 00000004 b cfguRefCount
0708355c 00000004 b cfguHandle
07083560 00000004 b fsuHandle
07083568 00000080 b fsExemptArchives
070835e8 00000004 b fsuRefCount
070835ec 00000001 B fs
070835f0 0000000c b aptFirstHook
070835fc 00000004 b serviceName.7785
07083600 00000004 b aptRefCount
07083604 0000000c b aptEvents
07083610 00000008 b aptSleepEvent
07083618 00000004 b aptEventHandlerThread
0708361c 00000004 b aptMessageFunc
07083620 00000004 b aptMessageFuncData
07083624 00000001 b aptHomeButtonState
07083625 00000001 b flagInit.8135
07083626 00000001 b flagValue.8136
07083628 00001000 b aptParameters
07084628 00001000 b __stack
07085628 00000004 b amRefCount
0708562c 00000004 b amHandle
07085630 00000004 b acRefCount
07085634 00000004 b acHandle
07085638 00000004 b hidRefCount
0708563c 00000004 b kOld
07085640 00000004 b kHeld
07085644 00000004 b cPos
07085648 00000004 b tPos
0708564c 00000006 b aVec
07085652 00000006 b gRate
07085658 00000004 b kDown
0708565c 00000004 b kUp
07085660 00000004 b gspEventData
07085664 00000038 b gspEvents
0708569c 0000001c b gspEventCounts
070856b8 00000001 b gspRunEvents
070856bc 00000004 b gspRefCount
070856c0 00000004 b gfxSharedMemory
070856c4 00000001 b gfxThreadID
070856c8 00000004 b irrstRefCount
070856cc 00000004 b kHeld
070856d0 00000004 b csPos
070856d4 00000004 b g_mainThreadVars
070856d8 b saved_stack
070856e0 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070856e4 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070856fc 0000000c B CTRPluginFramework::g_codeTypes
07085708 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708570c 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085718 00000001 b CTRPluginFramework::g_condAgainstData
07085719 00000001 b CTRPluginFramework::g_newCondDataToggle
0708571c 00000004 b CTRPluginFramework::__arCodeEditor
07085720 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07085724 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07085730 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07085738 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085740 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085748 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085750 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085760 00000001 b CTRPluginFramework::g_progressLoop
07085768 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085770 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085778 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085780 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085788 00000004 b CTRPluginFramework::__converter
0708578c 00000008 b sMappablePool
07085794 0000000c b sAddrMap
070857a0 00000004 B CTRPluginFramework::ARHandler::ActiveData
070857a4 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070857a8 00000008 B CTRPluginFramework::ARHandler::Offset
070857b0 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070857b4 00000010 B CTRPluginFramework::ARHandler::Data
070857c4 00000008 B CTRPluginFramework::ARHandler::Storage
070857cc 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070857d0 00000001 b CTRPluginFramework::ToggleFloat
070857d4 00000004 b CTRPluginFramework::g_context
070857d8 00000fa0 b CTRPluginFramework::arStack
07086778 b completed.10351
0708677c b object.10356
07086794 00000004 b (anonymous namespace)::__new_handler
07086798 00000010 b (anonymous namespace)::emergency_pool
070867a8 0000000c b eh_globals
070867b4 00000010 V std::string::_Rep::_S_empty_rep_storage
070867c4 00000028 B __malloc_current_mallinfo
070867ec 00000004 B __malloc_max_sbrked_mem
070867f0 00000004 B __malloc_max_total_mem
070867f4 00000004 B __malloc_top_pad
070867f8 0000000b b __tzname_dst
07086804 0000000b b __tzname_std
07086810 00000004 b prev_tzenv
07086814 00000004 B _daylight
07086818 00000004 B _timezone
0708681c 00000004 b initial_env
07086820 00000004 b heap_start.7414
07086824 00000004 B fake_heap_end
07086828 00000004 B fake_heap_start
0708682c 00000048 B __syscalls
07086874 00000004 B g_sharedFont
07086878 00000004 B charPerSheet
0708687c 00000004 B hidMemHandle
07086880 00000004 B hidHandle
07086884 00000014 B hidEvents
07086898 00000004 B hidSharedMem
0708689c 00000004 B gspEventThread
070868a0 00000004 B gspEvent
070868a4 00000004 B gspGpuHandle
070868a8 00000004 B gspSharedMemHandle
070868ac 00000004 B gspThreadEventHandle
070868b0 00000004 B irrstMemHandle
070868b4 00000004 B irrstEvent
070868b8 00000004 B irrstHandle
070868bc 00000004 B irrstSharedMem
070868c0 00000004 B __ctru_linear_heap
070868c4 00000004 B __tmp
070868c8 00000004 B __ctru_linear_heap_size
070868cc 00000004 B __system_retAddr
070868d0 00000004 B __ctru_heap
070868d4 B __c_bss_end
070868d4 B __tls_start
070868f4 A __end__
070868f4 B __tls_end
