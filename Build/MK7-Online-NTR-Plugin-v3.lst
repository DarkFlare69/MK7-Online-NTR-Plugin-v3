00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 00000154 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
0700147c 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
070014d8 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001518 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001558 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001598 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
070015d4 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07001610 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07001678 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
070016dc 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
0700179c 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
070017f8 00000070 t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.33]
070017f8 00000070 t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.34]
07001868 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001868 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001888 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
07001888 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
070018a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018c8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.105]
07001950 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
070019fc 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.143]
07001a58 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a58 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a94 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001ad0 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07001b0c 00000024 W CTRPluginFramework::File::~File()
07001b0c 00000024 W CTRPluginFramework::File::~File()
07001b30 00000084 T CTRPluginFramework::IsInRace()
07001bb4 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001c1c 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001c70 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001ce4 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001da8 00000110 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001eb8 000000bc T CTRPluginFramework::GetRacePointer()
07001f74 00000030 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
07001fa4 00000030 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07001fd4 0000002c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07002000 00000030 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07002030 0000002c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
0700205c 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07002060 0000003c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
0700209c 000000a0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
0700213c 000000c4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07002200 00000270 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
07002470 00000254 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
070026c4 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
07002844 00000038 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
0700287c 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
070029ac 0000009c T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07002a48 000000a4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002aec 0000004c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002b38 00000050 T CTRPluginFramework::GetFNsPointer()
07002b88 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002bf0 0000006c T CTRPluginFramework::GetOldPointer5CC()
07002c5c 00000034 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002c90 00000070 T CTRPluginFramework::GetOldPointer5D0()
07002d00 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002d48 0000009c T CTRPluginFramework::GetItemPointer()
07002de4 000001a4 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002f88 000000b8 T CTRPluginFramework::GetTotalPlayers()
07003040 000001f0 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07003230 00000060 T CTRPluginFramework::GetTime()
07003290 0000002c T CTRPluginFramework::GetMinutes()
070032bc 0000001c T CTRPluginFramework::GetSeconds()
070032d8 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07003390 00000070 T CTRPluginFramework::SubToTime(unsigned short)
07003400 0000042c T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
0700382c 0000005c T CTRPluginFramework::writeItem(unsigned long)
07003888 000000c8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003950 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07003980 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003a64 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003aa4 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003ae4 00000230 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003d14 00000230 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003f44 00000048 T CTRPluginFramework::writeVR(unsigned long)
07003f8c 000000ac T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07004038 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07004054 00000060 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
070040b4 0000004c T CTRPluginFramework::writeLocation(unsigned long)
07004100 00000060 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
07004160 00000064 T CTRPluginFramework::writeFlag(unsigned short)
070041c4 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
070042b8 000016ac T CTRPluginFramework::main()
07005964 0000003c W std::vector<CTRPluginFramework::Mii, std::allocator<CTRPluginFramework::Mii> >::~vector()
07005964 0000003c W std::vector<CTRPluginFramework::Mii, std::allocator<CTRPluginFramework::Mii> >::~vector()
070059a0 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005a80 000001d4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07005c54 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07005c58 00000004 T CTRPluginFramework::OnProcessExit()
07005c5c 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
07005cc0 000000f0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005db0 00000100 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005eb0 00000170 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
07006020 00000550 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
07006570 000000f4 t _GLOBAL__sub_I__ZN18CTRPluginFramework6offsetE
07006664 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
070066dc 00000038 T OnLoadCro
07006714 00000170 T CTRPluginFramework::Initialize()
07006884 000000b0 T CTRPluginFramework::ThreadExit()
07006934 00000060 T abort
07006994 0000003c T CTRPluginFramework::ThreadInit(void*)
070069d0 0000008c T LaunchMainThread
07006a5c 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07006e64 0000000c t _GLOBAL__sub_I_g_mainThread
07006e70 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006ebc 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07006f38 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07006ffc 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
07007074 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07007074 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
0700708c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
0700708c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07007098 00000008 T CTRPluginFramework::Color::ToU32() const
070070a0 00000120 T CTRPluginFramework::Color::Fade(double)
070071c0 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07007200 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0700727c 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07007490 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
070075b0 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070075b0 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007620 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07007620 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700764c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07007660 00000044 T CTRPluginFramework::PluginMenu::Run() const
070076a4 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070076ac 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070076bc 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
070076c8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070076c8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007708 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007708 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007730 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07007740 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007740 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700778c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700778c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070077dc 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070077dc 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700780c 00000010 T CTRPluginFramework::MenuEntry::Disable() const
0700781c 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07007824 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
0700782c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07007834 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007834 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007864 0000001c W CTRPluginFramework::TextBox::~TextBox()
07007880 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007880 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070078c8 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070078c8 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007904 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007904 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007940 00000008 T CTRPluginFramework::MessageBox::operator()() const
07007948 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007a0c 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07007ab4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007ab4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007afc 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007afc 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007b64 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007b64 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007b90 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07007b98 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007bb4 00000028 T CTRPluginFramework::Keyboard::Open() const
07007bdc 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007c54 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007d04 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07007d58 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007dc0 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07007dc8 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007dd0 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07007e6c 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007ef8 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07007fa0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07008088 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008114 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
070081bc 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070082a4 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008330 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
070083d8 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
070084c0 00000028 t __tcf_0
070084e8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07008560 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07008568 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
070085e8 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07008664 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
0700873c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0700873c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07008758 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008758 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008798 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
070087a8 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07008868 00000020 T CTRPluginFramework::HotkeyManager::Count()
07008888 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070089f8 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008b24 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008c4c 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07008cbc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008d44 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07008d88 0000004c T CTRPluginFramework::Directory::Close() const
07008dd4 000000e8 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
07008ebc 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07008ed0 00000008 T CTRPluginFramework::Directory::IsOpen() const
07008ed8 00000040 T CTRPluginFramework::Directory::Directory()
07008ed8 00000040 T CTRPluginFramework::Directory::Directory()
07008f18 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07008f4c 00000060 T CTRPluginFramework::Directory::~Directory()
07008f4c 00000060 T CTRPluginFramework::Directory::~Directory()
07008fac 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008fac 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008fcc 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009064 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070090fc 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700919c 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009270 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009304 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009450 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009450 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070094a8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070094e4 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070094e4 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009500 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07009670 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
0700968c 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
070097b4 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
0700982c 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07009894 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07009940 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07009984 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07009b60 000001b4 T CTRPluginFramework::Directory::_List() const
07009d14 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009df4 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009ed8 0000000c T CTRPluginFramework::FwkSettings::Get()
07009ee4 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
07009fc4 00000010 T CTRPluginFramework::Process::GetHandle()
07009fd4 00000010 T CTRPluginFramework::Process::GetTitleID()
07009fe4 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a040 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a078 00000024 T CTRPluginFramework::Process::GetTextSize()
0700a09c 00000008 T CTRPluginFramework::Process::Pause()
0700a0a4 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700a0b4 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700a15c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700a160 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700a1ac 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700a1e4 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700a208 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700a224 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0700a248 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a284 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a2ac 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a2cc 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0700a2ec 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
0700a458 0000002c T CTRPluginFramework::Hook::Hook()
0700a458 0000002c T CTRPluginFramework::Hook::Hook()
0700a484 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700a49c 00000230 T CTRPluginFramework::Hook::Enable()
0700a6cc 0000005c T CTRPluginFramework::Hook::Disable()
0700a728 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a728 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a73c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a73c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a764 00000004 T CTRPluginFramework::Mutex::Lock()
0700a768 00000014 T CTRPluginFramework::Mutex::TryLock()
0700a77c 00000004 T CTRPluginFramework::Mutex::Unlock()
0700a780 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a780 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a7a4 0000004c T CTRPluginFramework::Lock::~Lock()
0700a7a4 0000004c T CTRPluginFramework::Lock::~Lock()
0700a7f0 00000074 T CTRPluginFramework::File::Close() const
0700a864 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
0700a91c 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700aa0c 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700aa38 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700ab1c 00000008 T CTRPluginFramework::File::Tell() const
0700ab24 00000030 T CTRPluginFramework::File::Rewind() const
0700ab54 00000034 T CTRPluginFramework::File::Flush() const
0700ab88 0000006c T CTRPluginFramework::File::GetSize() const
0700abf4 000000dc T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
0700acd0 00000008 T CTRPluginFramework::File::IsOpen() const
0700acd8 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700acec 00000044 T CTRPluginFramework::File::File()
0700acec 00000044 T CTRPluginFramework::File::File()
0700ad30 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700adc4 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ae98 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af1c 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700afbc 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700b0c4 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b0c4 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b130 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700b178 00000014 T CTRPluginFramework::Time::Time()
0700b178 00000014 T CTRPluginFramework::Time::Time()
0700b18c 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700b1ac 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700b1c4 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700b1cc 00000028 T CTRPluginFramework::Seconds(float)
0700b1f4 00000010 T CTRPluginFramework::Milliseconds(int)
0700b204 00000008 T CTRPluginFramework::Microseconds(long long)
0700b20c 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b220 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b234 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b248 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b260 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700b2ac 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700b2c4 00000010 T CTRPluginFramework::System::IsNew3DS()
0700b2d4 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700b2e8 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700b304 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700b320 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700b33c 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700b358 0000002c T CTRPluginFramework::Controller::Update()
0700b384 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700b3fc 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b458 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700b4b4 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700b510 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700b554 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700b5d4 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b688 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b7c4 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700b7fc 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700b818 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700ba6c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700ba6c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bab0 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700c1f0 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c1f8 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c23c 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700c348 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700c3b0 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700c3cc 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700c408 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700c42c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c450 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700c4c8 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700c4f8 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700c604 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700c7d0 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700cab0 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700cb7c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700cc38 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700ccf4 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700cd50 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700cda0 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700ce20 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700cff0 00000004 T CTRPluginFramework::Preferences::Initialize()
0700cff4 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700d0e0 00000010 T CTRPluginFramework::Glyph::Width() const
0700d0f0 00000060 T CTRPluginFramework::Font::Initialize()
0700d150 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700d4a4 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700d7a8 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700d8b4 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700d91c 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700d93c 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700d96c 00000020 W CTRPluginFramework::Renderer::GetContext()
0700d98c 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700d9ec 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700db54 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700dcc0 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700dd60 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700df48 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700df78 00000028 T CTRPluginFramework::Window::~Window()
0700df78 00000028 T CTRPluginFramework::Window::~Window()
0700dfa0 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700dfa0 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e040 00000064 T CTRPluginFramework::Window::Draw() const
0700e0a4 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700e17c 00000018 T CTRPluginFramework::Window::DrawButton() const
0700e194 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700e1ac 00000018 T CTRPluginFramework::Window::MustClose() const
0700e1c4 0000002c T CTRPluginFramework::Window::Close() const
0700e1f0 00000004 T CTRPluginFramework::Window::GetRect() const
0700e1f4 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700e220 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700e2c8 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700e3f8 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700e4c4 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700e610 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e754 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e78c 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700e92c 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700eaf0 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700ed24 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700ed94 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700ee00 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700ee14 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700ee38 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700ee54 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700ee84 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700eeb4 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700eedc 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700ef04 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700ef24 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700ef60 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700efa8 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700efec 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700f108 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700f128 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700f198 00000038 t __tls_init
0700f198 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700f1d0 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700f20c 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f280 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f2ec 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f374 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f408 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f498 00000008 W CTRPluginFramework::Drawable::operator()()
0700f4a0 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0700f4a4 000002f0 T CTRPluginFramework::TextBox::Draw()
0700f794 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f794 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f828 0000000c T CTRPluginFramework::TextBox::Open() const
0700f834 0000000c T CTRPluginFramework::TextBox::Close() const
0700f840 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0700f848 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0700fa90 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0700fa9c 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0700fb34 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0700fbe8 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0700fc40 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0700fc70 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0700fd2c 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
0700fde8 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
0700ffb0 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0700ffb0 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070100f4 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070101dc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
07010254 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
070102c4 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
070102e8 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0701030c 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0701030c 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0701034c 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07010354 00000008 T CTRPluginFramework::BMPImage::Width() const
0701035c 00000008 T CTRPluginFramework::BMPImage::Height() const
07010364 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0701036c 00000010 T CTRPluginFramework::BMPImage::data() const
0701037c 0000001c T CTRPluginFramework::BMPImage::end() const
07010398 00000010 W CTRPluginFramework::BMPImage::DataClear()
070103a8 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
070103a8 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
07010450 0000003c T CTRPluginFramework::BMPImage::Unload()
0701048c 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
070105c8 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
070105d0 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07010820 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070109f4 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07010a3c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07010a6c 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07010b40 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
07010bc0 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07010be4 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07010d00 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010d00 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010d54 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
07011074 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011074 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070110c0 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0701110c 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0701141c 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
070114dc 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
0701160c 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07011778 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
070117b8 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
070117b8 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
070117d8 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07011948 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07011a3c 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07011ad0 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07011b78 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07011e04 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011e04 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011e48 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07011e9c 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
07012024 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
070120d0 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07012110 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07012790 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012938 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07012938 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07012964 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012964 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012984 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07012a34 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07012a90 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012a90 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012b14 0000000c T CTRPluginFramework::OSDImpl::Lock()
07012b20 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07012b3c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07012b48 000000cc T CTRPluginFramework::OSDImpl::Draw()
07012c14 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07012cec 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07012d18 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07012d60 0000020c T CTRPluginFramework::InstallOSD()
07012f6c 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
07012fb4 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0701308c 00000108 T CTRPluginFramework::OSDImpl::Update()
07013194 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0701381c 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07013884 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
070138f0 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070138f0 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013a68 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013a68 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013bc0 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07013c38 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07013eec 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07014088 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
070142a8 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
070142d4 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07014310 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701434c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07014388 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
070143c4 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07014400 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701442c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07014468 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
070144a4 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
070144e0 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701451c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07014548 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07014584 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
070145b0 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
070145dc 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
07014618 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07014644 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07014680 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070146ac 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
070146e0 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701471c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07014748 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07014784 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070147b0 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
070147dc 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07014808 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07014834 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07014860 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0701488c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070148b8 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070148e4 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07014920 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0701494c 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
070149dc 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
070149dc 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
070149fc 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070149fc 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014adc 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07014ae4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014ae4 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014b78 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07014b98 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07014d20 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014d40 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07014d5c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07014d78 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07014d80 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014d88 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014d88 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014da8 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07014e8c 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07015588 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
070155e0 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070156c4 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07015700 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07015830 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0701596c 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015a24 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015b2c 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015b2c 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015bb0 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07015ca4 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07015ddc 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015f74 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015f74 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07016070 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016070 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016210 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07016288 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016288 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016364 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07016364 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701647c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
070164b8 00000058 T CTRPluginFramework::Menu::CloseAll()
07016510 00000030 T CTRPluginFramework::Menu::~Menu()
07016510 00000030 T CTRPluginFramework::Menu::~Menu()
07016540 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701654c 00000008 T CTRPluginFramework::Menu::GetFolder() const
07016554 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701655c 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
0701659c 00000384 T CTRPluginFramework::Menu::Draw() const
07016920 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
070169ac 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07016a38 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07016c60 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07016dd4 00000068 T CTRPluginFramework::Menu::ShowNote()
07016e3c 00000008 T CTRPluginFramework::Menu::CloseNote()
07016e44 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07016e4c 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07016e8c 00000044 T CTRPluginFramework::Menu::Pop()
07016ed0 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07016f94 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701704c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07017054 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07017054 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
0701707c 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07017098 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017098 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701716c 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017188 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017188 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017240 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017240 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070172fc 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07017310 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07017360 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07017378 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701739c 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
07017444 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07017454 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07017478 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
070174d8 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
070174e8 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070174f8 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07017508 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07017598 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070176b4 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
07017724 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
070177c8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
070177f4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070177f4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07017824 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07017824 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07017890 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
070179e4 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07017a20 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017a20 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017b8c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07017be4 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017c98 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017d78 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07017df0 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07017df0 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070182b4 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
070182c0 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
070185e0 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
070186e8 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07018b3c 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07018c58 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07018ce4 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07018d20 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07018d4c 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07018e1c 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07018e9c 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07018f18 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07018f9c 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07018ff8 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07019038 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07019168 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
070194a4 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070196b8 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
070196d0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
070196e4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
070196f8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0701970c 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07019848 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0701984c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07019850 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07019868 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07019880 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07019898 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070198b0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
070198c8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
070198e0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
070198f8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07019910 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07019928 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
0701996c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
070199e4 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07019a48 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07019ae0 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07019c84 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019e08 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019eb4 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07019fd8 0000005c t CTRPluginFramework::Reboot()
0701a034 00000064 t CTRPluginFramework::Shutdown()
0701a098 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0701a28c 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
0701ac8c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701ac8c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701ae1c 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0701af38 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0701afc4 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0701b004 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701b174 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701b220 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
0701b838 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701b874 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701b8b0 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701b8c0 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701b8c0 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701b998 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701b998 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701b9d4 0000001c T CTRPluginFramework::SubMenu::operator()()
0701b9f0 00000200 T CTRPluginFramework::SubMenu::Draw()
0701bbf0 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0701bcb4 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701bcbc 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701bcd8 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701be7c 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bec8 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
0701bec8 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
0701becc 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
0701bed0 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
0701bed4 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701c070 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701c16c 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701c2a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701c320 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c570 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701c7c4 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701c9c0 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701cba0 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701cbbc 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701cc78 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701cc94 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701cd04 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701cd34 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701cd70 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701ce18 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701ce4c 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701ce7c 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701cf08 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701cfa0 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701d06c 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701d128 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701d1d8 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701d36c 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701d37c 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701d38c 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701d39c 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d39c 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d610 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701d654 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701d81c 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701d8e0 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701d938 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701da1c 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701db8c 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701dd10 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701dd3c 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701dd3c 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701dda4 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701ddcc 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701df20 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701df94 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701e134 00000160 T CTRPluginFramework::HexEditor::_Update()
0701e294 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701e534 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701e548 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e548 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e570 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e58c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701e6a4 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e6a4 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e774 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e774 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e848 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701e850 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701e864 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701e870 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701e878 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701e89c 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701e8cc 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701e8e8 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701e950 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701e950 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701e970 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701e98c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701e98c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701ea20 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ea20 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ea80 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ea80 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eae0 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701eae4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701eb5c 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701ec1c 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701ec50 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701f048 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701f060 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701f324 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f324 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f4e4 00000158 T CTRPluginFramework::GuideReader::Draw()
0701f63c 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701f6b0 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701f718 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701f718 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701f760 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701f7ac 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701f7b8 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701f7e4 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701f840 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701f8c8 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701f92c 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701f92c 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701f98c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f98c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fb38 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fb38 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fcf4 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fcf4 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fd58 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701fd60 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701fd68 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701fd70 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701fd78 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701fd80 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701fee4 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0702033c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070203cc 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0702044c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
070204d0 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07020630 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
070208b0 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07020e1c 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07020e84 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07020ed4 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07020f44 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07020f4c 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
07021010 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070211ec 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07021250 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0702127c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702127c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702129c 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07021368 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
07021424 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
070214e8 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07021a54 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07021fc4 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0702207c 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07022ad0 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07022b88 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
070237cc 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07023810 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
070238cc 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07023a90 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
07023ae0 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07023b38 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07023b80 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07023ea4 00000254 T CTRPluginFramework::KeyboardImpl::Run()
070240f8 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07024170 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07024184 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
070241a8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
07024230 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
07024340 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702439c 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
07024434 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07024434 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07024684 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
070246b8 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702470c 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07024730 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07024758 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07024834 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07024958 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07024b24 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024b24 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024b4c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07024cc4 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07024e40 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07024fa8 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
07024fe4 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0702512c 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0702515c 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07025230 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07025430 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
070254a8 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07025570 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07025728 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
070258d0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07025948 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
070259a4 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07025abc 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07025b20 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07025c8c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07025c8c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070260e4 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
070264a0 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07026510 000000f4 t CTRPluginFramework::ClearSearchFolder()
07026604 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07026638 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07026860 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07026888 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070268f8 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070269c0 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
070269fc 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07026c64 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07026d48 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07026d88 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07026db8 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07026e8c 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07027118 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070274d0 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
07027528 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07027528 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07027554 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
07027560 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
0702756c 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
070276c8 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07027704 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
07027710 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
0702771c 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
0702773c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
070278d8 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07027934 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07027a90 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07027aa8 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07027bcc 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07027c90 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07027e40 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07027f04 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07027f84 00000044 T CTRPluginFramework::Search::UpdateProgress()
07027fc8 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0702815c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
070281d4 00000008 T CTRPluginFramework::Search::GetHeader() const
070281dc 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07028224 0000000c T CTRPluginFramework::Search::GetType() const
07028230 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07028248 00000070 T CTRPluginFramework::Search::WriteHeader()
070282b8 00000058 T CTRPluginFramework::Search::WriteResults()
07028310 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0702835c 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0702859c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702859c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070287dc 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070288a4 00000088 T CTRPluginFramework::Search::CreateIndexTable()
0702892c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702892c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028ad4 00000080 T CTRPluginFramework::Search::Cancel()
07028b54 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07028c6c 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07028d30 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07028df0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07028e68 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
070290d0 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07029360 00000048 W CTRPluginFramework::Search::~Search()
07029360 00000048 W CTRPluginFramework::Search::~Search()
070293a8 00000044 T CTRPluginFramework::Search32::~Search32()
070293a8 00000044 T CTRPluginFramework::Search32::~Search32()
070293ec 0000001c T CTRPluginFramework::Search32::~Search32()
07029408 0000001c W CTRPluginFramework::Search::~Search()
07029424 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07029424 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0702964c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702964c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702966c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0702966c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070296e4 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0702983c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029888 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
070299cc 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07029b10 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07029b40 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07029c04 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07029c40 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07029c78 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07029d58 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029da4 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0702a0bc 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0702a234 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702a520 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
0702a6c4 0000002c T CTRPluginFramework::Screenshot::Initialize()
0702a6f0 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0702a79c 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702a830 0000003c T CTRPluginFramework::SystemImpl::Status()
0702a86c 000000c8 T CTRPluginFramework::HookManager::Init()
0702a934 00000018 T CTRPluginFramework::HookManager::Lock()
0702a94c 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
0702a9f4 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
0702aa54 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702aa54 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702aa8c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702aa8c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702aac4 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702ab0c 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0702ac18 000000d4 T CTRPluginFramework::Scheduler::Initialize()
0702acec 00000050 T CTRPluginFramework::Scheduler::Exit()
0702ad3c 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702ad3c 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702ad84 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
0702adf0 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0702aec0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0702aef0 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
0702af0c 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702b014 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0702b02c 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b02c 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b070 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
0702b0c4 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0702b1a4 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
0702b2dc 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0702b378 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0702b3a8 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0702b3b0 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b414 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b478 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b4e8 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b55c 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b5cc 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
0702b69c 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702b760 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0702b7bc 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
0702b860 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0702b8b8 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702b974 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0702ba4c 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
0702bab4 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0702babc 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0702bac4 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0702bacc 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0702bae8 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702bb04 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0702bb5c 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0702bb8c 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0702bbe8 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0702bc60 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702bc84 00000004 t addrMapNodeDestructor(rbtree_node*)
0702bc88 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0702bdb8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0702bdc0 00000070 T CTRPluginFramework::Heap::Free(void*)
0702be30 0000000c T CTRPluginFramework::Heap::SpaceFree()
0702be3c 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702be6c 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702bf70 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702c14c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c14c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c210 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702c270 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702c27c 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c2bc 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702c2cc 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c2e4 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702c2f8 00000004 T Kernel::Initialize()
0702c2fc 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702c314 0000000c T KProcess::GetCurrent()
0702c320 00000024 T KProcess::PatchCore2Access()
0702c344 0000002c T KProcess::PatchCategory(unsigned long)
0702c370 00000014 T KProcess__PatchCategory
0702c384 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702c3b0 00000014 T KProcess__PatchMaxPriority
0702c3c4 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702c448 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702c47c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c47c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c49c 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702c580 00000018 T IsPaused
0702c598 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702c5d4 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702c5f0 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702c60c 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702c674 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702c6f0 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702c78c 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702c83c 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702c904 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702c9d8 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702ca70 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702cacc 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cacc 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cb5c 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702ccbc 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702ccf8 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702cf94 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702d08c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702d094 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702d0c0 00000034 W MemPool::DelBlock(MemBlock*)
0702d0f4 0000005c T MemPool::CoalesceRight(MemBlock*)
0702d150 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702d268 000000fc T MemPool::Deallocate(MemChunk const&)
0702d364 00000020 T MemPool::GetFreeSpace()
0702d384 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702d3a8 00000004 t addrMapNodeDestructor(rbtree_node*)
0702d3ac 00000154 T vramMemAlign
0702d500 00000008 T vramAlloc
0702d508 00000070 T vramFree
0702d578 00000030 t _GLOBAL__sub_I_vramMemAlign
0702d5a8 000001d8 T threadCreate
0702d780 0000002c T threadFree
0702d7ac 00000024 T threadJoin
0702d7d0 00000020 T threadGetCurrent
0702d7f0 0000003c T threadExit
0702d82c 0000003c t _thread_begin
0702d868 00000050 T srvExit
0702d8b8 00000034 T srvRegisterClient
0702d8ec 00000064 T srvInit
0702d950 00000068 T srvGetServiceHandleDirect
0702d9b8 00000004 T srvGetServiceHandle
0702d9bc 00000034 T srvPublishToSubscriber
0702d9f0 00000034 T errfExit
0702da24 00000058 T errfInit
0702da7c 0000003c T ERRF_Throw
0702dab8 00000090 T ERRF_ExceptionHandler
0702db48 000000a8 T fontEnsureMapped
0702dbf0 00000110 T fontGlyphIndexFromCodePoint
0702dd00 00000074 T fontGetCharWidthInfo
0702dd74 0000000c T __sync_init
0702dd80 00000018 T __sync_fini
0702dd98 00000018 T LightLock_Init
0702ddb0 0000008c T LightLock_Lock
0702de3c 00000034 T LightLock_TryLock
0702de70 00000050 T LightLock_Unlock
0702dec0 00000018 T RecursiveLock_Init
0702ded8 00000030 T RecursiveLock_Lock
0702df08 00000044 T RecursiveLock_TryLock
0702df4c 00000034 T RecursiveLock_Unlock
0702df80 00000030 T LightEvent_Init
0702dfb0 00000060 T LightEvent_Clear
0702e010 00000064 T LightEvent_Pulse
0702e074 000000b4 T LightEvent_Signal
0702e128 000000a8 T LightEvent_Wait
0702e1d0 000000a0 T cfguInit
0702e270 00000034 T cfguExit
0702e2a4 00000044 T CFGU_GetConfigInfoBlk2
0702e2e8 00000014 T CFGU_GetSystemLanguage
0702e2fc 00000028 t fsSession
0702e324 00000044 t fsSessionForArchive
0702e368 00000038 T fsExit
0702e3a0 00000028 T FSUSER_Initialize
0702e3c8 000000b0 T fsInit
0702e478 00000080 T FSUSER_OpenFile
0702e4f8 00000068 T FSUSER_DeleteFile
0702e560 000000a4 T FSUSER_RenameFile
0702e604 00000068 T FSUSER_DeleteDirectoryRecursively
0702e66c 00000080 T FSUSER_CreateFile
0702e6ec 00000070 T FSUSER_CreateDirectory
0702e75c 000000a4 T FSUSER_RenameDirectory
0702e800 0000006c T FSUSER_OpenDirectory
0702e86c 00000074 T FSUSER_OpenArchive
0702e8e0 00000058 T FSFILE_Read
0702e938 00000060 T FSFILE_Write
0702e998 00000038 T FSFILE_GetSize
0702e9d0 00000028 T FSFILE_SetSize
0702e9f8 0000003c T FSFILE_Close
0702ea34 00000024 T FSFILE_Flush
0702ea58 00000054 T FSDIR_Read
0702eaac 0000003c T FSDIR_Close
0702eae8 00000104 T aptSendCommand
0702ebec 0000006c T APT_CheckNew3DS
0702ec58 00000048 T APT_GetSharedFont
0702eca0 000000a0 T amInit
0702ed40 00000034 T amExit
0702ed74 00000088 T acInit
0702edfc 00000034 T acExit
0702ee30 000000bc T hidExit
0702eeec 00000034 T hidCheckSectionUpdateTime
0702ef20 00000174 T hidScanInput
0702f094 00000010 T hidKeysHeld
0702f0a4 00000010 T hidKeysDown
0702f0b4 00000010 T hidKeysUp
0702f0c4 00000018 T hidTouchRead
0702f0dc 00000090 T HIDUSER_GetHandles
0702f16c 00000174 T hidInit
0702f2e0 000000e8 t gspEventThreadMain
0702f3c8 000000a0 T gspInitEventHandler
0702f468 00000040 T gspExitEventHandler
0702f4a8 0000008c T gspExit
0702f534 0000005c T gspWaitForEvent
0702f590 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702f5f4 000000dc T gspInit
0702f6d0 00000034 T irrstCheckSectionUpdateTime
0702f704 00000070 T irrstScanInput
0702f774 0000001c T irrstKeysHeld
0702f790 00000050 T IRRST_GetHandles
0702f7e0 00000034 T IRRST_Initialize
0702f814 00000128 T irrstInit
0702f93c 0000002c T IRRST_Shutdown
0702f968 000000a8 T irrstExit
0702fa10 00000028 t __ctru_get_reent
0702fa38 000000ec T __system_initSyscalls
0702fb24 000000ac T utf8_to_utf16
0702fbd0 00000138 T decode_utf8
0702fd08 0000005c T decode_utf16
0702fd64 000000d4 T utf16_to_utf8
0702fe38 000000e0 T encode_utf8
0702ff18 00000054 T encode_utf16
0702ff6c 00000054 T rbtree_find
0702ffc0 00000014 t is_black
0702ffd4 000002bc T rbtree_remove
07030290 00000050 T rbtree_node_next
070302e0 00000090 T rbtree_rotate
07030370 00000174 t do_insert
070304e4 00000008 T rbtree_insert
070304ec 00000010 T rbtree_init
070304fc T LoadCROHooked
07030510 T AR__ExecuteRoutine
07030538 t stackBak
07030540 T svcCustomBackdoor
07030548 T svcConvertVAToPA
07030550 T svcFlushDataCacheRange
07030558 T svcMapProcessMemoryEx
0703056c T svcUnmapProcessMemoryEx
07030574 T svcControlProcess
0703057c T svcQueryMemory
070305ac T svcCreateThread
070305cc T svcExitThread
070305d4 T svcSleepThread
070305dc T svcSetThreadPriority
070305e4 T svcCreateEvent
070305f8 T svcSignalEvent
07030600 T svcClearEvent
07030608 T svcMapMemoryBlock
07030610 T svcUnmapMemoryBlock
07030618 T svcCreateAddressArbiter
0703062c T svcArbitrateAddress
07030644 T svcCloseHandle
0703064c T svcWaitSynchronization
07030654 T svcWaitSynchronizationN
0703067c T svcGetSystemTick
07030684 T svcGetSystemInfo
0703069c T svcGetProcessInfo
070306b4 T svcConnectToPort
070306c8 T svcSendSyncRequest
070306d0 T svcOpenProcess
070306e4 T svcGetProcessId
070306f8 T svcBreak
07030700 T svcInvalidateProcessDataCache
07030708 T svcFlushProcessDataCache
07030710 T svcKernelSetState
07030718 T svcQueryProcessMemory
0703073c 00000030 t CTRPluginFramework::GetCurrentTime()
0703076c 00000014 T CTRPluginFramework::Clock::Clock()
0703076c 00000014 T CTRPluginFramework::Clock::Clock()
07030780 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030780 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030788 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
070307c0 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
070307f0 00000044 T CTRPluginFramework::Clock::Restart()
07030834 00000014 T CTRPluginFramework::Touch::IsDown()
07030848 00000028 T CTRPluginFramework::Touch::GetPosition()
07030870 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07030870 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070308f4 00000048 T CTRPluginFramework::Task::~Task()
070308f4 00000048 T CTRPluginFramework::Task::~Task()
0703093c 00000030 T CTRPluginFramework::Task::Start() const
0703096c 00000044 T CTRPluginFramework::Task::Wait() const
070309b0 00000014 T CTRPluginFramework::Task::Status() const
070309c4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070309c4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070309ec 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030a6c 00000048 T CTRPluginFramework::LineWriter::Flush()
07030ab4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030ab4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030ad0 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030b3c 00000018 T CTRPluginFramework::LineWriter::Close()
07030b54 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030c18 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
07030c90 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07030fcc 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07030fcc 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07030fec 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031074 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031074 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070311a0 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
070311dc 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070312dc 00000084 T CTRPluginFramework::ARCode::Update()
07031360 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07031360 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07031384 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
070313ac 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070313ac 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07031464 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031464 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031498 00000040 T CTRPluginFramework::ARCodeContext::Update()
070314d8 00000090 T CTRPluginFramework::ARCodeContext::Clear()
07031568 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07031640 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07031640 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07031660 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
07031678 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703176c 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
07031788 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703189c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070318ac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
07031924 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0703193c 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07031990 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070319d4 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031a1c 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031ef0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031ef0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031f34 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07031f34 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07031f48 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07031f68 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
070320e0 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
07032204 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07032938 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07032988 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032988 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070329f0 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032a0c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032a0c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032a58 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07032b74 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07032c04 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07032d1c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07032da4 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032e00 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032e00 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032e78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032e78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032e78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032e78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032ec8 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0703421c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703421c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070343b0 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07034664 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
070346ec 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034730 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07034744 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07034780 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070348e8 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034924 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07034988 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
070349ac 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
070349d4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070349d4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070349fc 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07034d7c 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07035400 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0703544c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07035504 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07035978 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07035e44 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07035f3c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07035fc4 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07036000 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07036324 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
070363a0 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0703640c 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07036444 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
070364c0 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703688c 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07036a90 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07036b30 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07036bec 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07036ca8 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07036d54 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07036de0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07036f58 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703706c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07037114 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703717c 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0703720c 00000160 T ARM_Disasm::Decode01(unsigned long)
0703736c 00000028 T ARM_Disasm::Decode10(unsigned long)
07037394 0000007c T ARM_Disasm::Decode11(unsigned long)
07037410 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07037478 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
070374c8 00000118 T ARM_Disasm::DecodeALU(unsigned long)
070375e0 000000c4 T ARM_Disasm::Decode00(unsigned long)
070376a4 00000030 T ARM_Disasm::Decode(unsigned long)
070376d4 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
070377ac 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07037a90 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07037d80 00000020 T CTRPluginFramework::Button::~Button()
07037d80 00000020 T CTRPluginFramework::Button::~Button()
07037da0 0000001c T CTRPluginFramework::Button::~Button()
07037dbc 00000040 T CTRPluginFramework::Button::operator()()
07037dfc 00000148 T CTRPluginFramework::Button::Draw()
07037f44 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07038098 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038098 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070381bc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070381bc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070381dc 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070381dc 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038270 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038270 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038284 00000018 T CTRPluginFramework::Button::Enable(bool)
0703829c 00000010 T CTRPluginFramework::Button::Enable()
070382ac 00000010 T CTRPluginFramework::Button::Disable()
070382bc 00000010 T CTRPluginFramework::Button::Lock()
070382cc 00000010 T CTRPluginFramework::Button::Execute()
070382dc 00000018 T CTRPluginFramework::Button::SetState(bool)
070382f4 00000010 T CTRPluginFramework::Button::GetState() const
07038304 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07038304 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07038318 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07038318 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07038338 00000024 T CTRPluginFramework::UIContainer::Draw()
0703835c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07038390 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07038454 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07038494 00000094 T CTRPluginFramework::ComboBox::Draw()
07038528 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07038528 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07038574 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07038590 000000a8 T CTRPluginFramework::ComboBox::operator()()
07038638 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07038638 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07038684 0000003c T CTRPluginFramework::ComboBox::Clear()
070386c0 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038710 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07038794 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038794 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038798 00000014 T CTRPluginFramework::FloatingButton::Draw()
070387ac 00000014 T CTRPluginFramework::FloatingButton::operator()()
070387c0 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
070387d4 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07038994 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038994 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070389d4 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070389d4 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038a94 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07038b30 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07038bd0 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07038be8 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07038c18 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038cb8 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038cb8 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038d68 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038d68 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038e14 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038e14 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038e94 00000040 T CTRPluginFramework::TouchKey::Clear()
07038ed4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038ed4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038ef4 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07038f10 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07038f18 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07038f78 00000060 T CTRPluginFramework::TouchKey::Draw()
07038fd8 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07039074 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07039138 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07039138 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07039288 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039288 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070392a8 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070392c4 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07039340 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07039378 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070393e0 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
070394d8 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070394e8 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070394f8 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07039500 0000000c T CTRPluginFramework::NumericTextBox::Clear()
0703950c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0703950c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07039574 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070395e8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
07039660 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07039660 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070396ac 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703976c 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
070398a4 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
070398cc 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039930 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07039c40 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07039d34 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07039f7c 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703a2a8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703a330 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
0703a3c8 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703a444 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703a4f8 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703a684 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703a6cc 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703a814 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703a96c 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
0703aa50 00000030 W std::__cxx11::to_string(unsigned long)
0703aa80 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703aa80 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ab34 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0703abb8 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703b100 00000230 T CTRPluginFramework::SearchMenu::Update()
0703b330 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b840 000000e4 T CTRPluginFramework::Converter::Converter()
0703b840 000000e4 T CTRPluginFramework::Converter::Converter()
0703b924 00000010 T CTRPluginFramework::Converter::Instance()
0703b934 00000108 T CTRPluginFramework::Converter::_Draw()
0703ba3c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703ba3c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703ba50 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703bc6c 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c0f0 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c578 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c9f4 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d01c 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d928 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e238 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703eb0c 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f74c 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703fff0 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704092c 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041250 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041fec 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042c50 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043394 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704379c 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043e7c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704410c 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070443b4 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044644 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07044678 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704499c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070449c0 00000004 t addrMapNodeDestructor(rbtree_node*)
070449c4 000000d8 T mappableAlloc
07044a9c 00000050 T mappableFree
07044aec 00000090 T __system_allocateHeaps
07044b7c 0000005c t getSysTime
07044bd8 000000fc T __libctru_gtod
07044cd4 00000008 T envGetHandle
07044cdc 00000004 T envDestroyHandles
07044ce0 00000020 T __libctru_exit
07044d00 00000020 T __appExit
07044d20 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044d20 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044d4c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044d4c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044d64 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07044e6c 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
07044ecc 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07044ed4 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07044ef8 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07044f1c 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07044f40 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07044f68 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07044f90 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07044fb8 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07045088 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07046efc 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07046f6c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07046f8c 00000008 T __cxa_pure_virtual
07046f94 00000010 T __aeabi_atexit
07046fa4 00000004 T operator new[](unsigned int)
07046fa8 00000058 T operator new(unsigned int)
07047000 00000034 T __cxxabiv1::__terminate(void (*)())
07047034 00000018 T std::terminate()
0704704c 0000000c T __cxxabiv1::__unexpected(void (*)())
07047058 00000018 T std::unexpected()
07047070 00000014 T std::get_terminate()
07047084 00000014 T std::get_unexpected()
07047098 0000000c T std::bad_alloc::what() const
070470a4 00000020 T std::bad_alloc::~bad_alloc()
070470a4 00000020 T std::bad_alloc::~bad_alloc()
070470c4 0000002c T std::bad_alloc::~bad_alloc()
070470f0 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07047258 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
070472c0 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07047398 000006f4 T __gxx_personality_v0
07047a8c 00000004 T operator delete[](void*)
07047a90 00000014 T std::get_new_handler()
07047aa4 0000005c T __cxa_guard_acquire
07047b00 0000000c T __cxa_guard_release
07047b0c 00000004 T std::exception::~exception()
07047b0c 00000004 T std::exception::~exception()
07047b10 00000004 T std::bad_exception::~bad_exception()
07047b10 00000004 T std::bad_exception::~bad_exception()
07047b14 0000000c T transaction clone for std::exception::what() const
07047b14 0000000c T std::exception::what() const
07047b20 0000000c T transaction clone for std::bad_exception::what() const
07047b20 0000000c T std::bad_exception::what() const
07047b2c 00000018 T std::bad_exception::~bad_exception()
07047b44 00000004 T operator delete(void*, unsigned int)
07047b48 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07047ba8 00000070 T __cxa_init_primary_exception
07047c18 00000054 T __cxa_throw
07047c6c 000000b0 T __cxa_rethrow
07047d1c 000000cc T __cxa_begin_catch
07047de8 000000e0 T __cxa_end_catch
07047ec8 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
07047fb4 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
07048068 00000044 T __cxa_allocate_exception
070480ac 00000030 T __cxa_free_exception
070480dc 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704811c 00000004 T operator delete(void*)
07048120 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07048120 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07048140 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704816c 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070481d8 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070482b4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070482f8 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07048310 00000014 T std::__detail::_List_node_base::_M_unhook()
07048324 0000002c T std::__throw_bad_alloc()
07048350 00000040 T std::__throw_logic_error(char const*)
07048390 00000040 T std::__throw_invalid_argument(char const*)
070483d0 00000040 T std::__throw_length_error(char const*)
07048410 00000040 T std::__throw_out_of_range(char const*)
07048450 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
070484cc 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07048520 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07048534 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07048558 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704857c 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048634 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07048740 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
070487bc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070487bc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07048828 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07048828 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0704884c 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07048918 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07048a28 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07048a98 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07048b04 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048b48 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048b60 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07048c84 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07048cbc 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07048f44 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
07048f7c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048fc8 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07049028 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070490bc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070490cc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070490dc 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07049108 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07049150 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07049198 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0704923c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0704924c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
070492b0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070492e0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704932c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
070493dc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070493dc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704940c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07049484 T __cxa_end_cleanup
07049494 00000138 T __cxa_type_match
070495cc 000000b4 T __cxa_begin_cleanup
07049680 000000b4 T __gnu_end_cleanup
07049734 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
070497a4 0000002c T __cxa_call_terminate
070497d0 00000158 T __cxa_call_unexpected
07049928 0000000c T __cxa_get_globals_fast
07049934 0000000c T __cxa_get_globals
07049940 00000004 T std::type_info::~type_info()
07049940 00000004 T std::type_info::~type_info()
07049944 00000008 T std::type_info::__is_pointer_p() const
07049944 00000008 T std::type_info::__is_function_p() const
0704994c 0000004c T std::type_info::operator==(std::type_info const&) const
07049998 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
070499f4 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07049a08 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049a08 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049a28 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07049a54 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07049abc 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07049ae8 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07049b2c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049b2c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049b4c 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049b78 00000008 T std::logic_error::what() const
07049b80 00000064 T std::logic_error::~logic_error()
07049b80 00000064 T std::logic_error::~logic_error()
07049be4 0000001c T std::logic_error::~logic_error()
07049c00 00000020 T std::invalid_argument::~invalid_argument()
07049c00 00000020 T std::invalid_argument::~invalid_argument()
07049c20 00000028 T std::invalid_argument::~invalid_argument()
07049c48 00000020 T std::length_error::~length_error()
07049c48 00000020 T std::length_error::~length_error()
07049c68 00000028 T std::length_error::~length_error()
07049c90 00000020 T std::out_of_range::~out_of_range()
07049c90 00000020 T std::out_of_range::~out_of_range()
07049cb0 00000028 T std::out_of_range::~out_of_range()
07049cd8 00000038 T std::logic_error::logic_error(char const*)
07049cd8 00000038 T std::logic_error::logic_error(char const*)
07049d10 00000020 T std::invalid_argument::invalid_argument(char const*)
07049d10 00000020 T std::invalid_argument::invalid_argument(char const*)
07049d30 00000020 T std::length_error::length_error(char const*)
07049d30 00000020 T std::length_error::length_error(char const*)
07049d50 00000020 T std::out_of_range::out_of_range(char const*)
07049d50 00000020 T std::out_of_range::out_of_range(char const*)
07049d70 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07049ddc 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07049e5c 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07049f54 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07049fd8 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
07049fd8 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
0704a048 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704a04c 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0704a07c 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a07c 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a0c0 000002bc T log2
0704a37c 00000024 t with_errno
0704a3a0 00000048 T __math_divzero
0704a3e8 0000001c T __math_invalid
0704a408 0000015c T ceil
0704a564 000000b4 T ceilf
0704a618 0000016c T floor
0704a784 00000088 T roundf
0704a810 00000108 T sqrtf
0704a918 00000008 T __ieee754_sqrtf
0704a920 00000008 T matherr
0704a928 0000002c T __aeabi_f2lz
0704a928 0000002c T __fixsfdi
0704a954 0000002c T __aeabi_d2lz
0704a954 0000002c T __fixdfdi
0704a980 00000040 T __aeabi_f2ulz
0704a980 00000040 T __fixunssfdi
0704a9c0 00000040 T __aeabi_d2ulz
0704a9c0 00000040 T __fixunsdfdi
0704aa00 00000128 T __udivmoddi4
0704ab28 00000018 t selfrel_offset31
0704ab40 00000094 t search_EIT_table
0704abd4 00000040 t __gnu_unwind_get_pr_addr
0704ac14 0000011c t get_eit_entry
0704ad30 00000088 t restore_non_core_regs
0704adb8 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704adcc 00000004 t _Unwind_DebugHook
0704add0 00000064 t unwind_phase2
0704ae34 0000014c t unwind_phase2_forced
0704af80 000000a4 T __gnu_Unwind_RaiseException
0704b024 00000024 T __gnu_Unwind_ForcedUnwind
0704b048 00000074 T __gnu_Unwind_Resume
0704b0bc 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704b0dc 00000004 T _Unwind_Complete
0704b0e0 00000018 T _Unwind_DeleteException
0704b0f8 00000054 T _Unwind_VRS_Get
0704b14c 0000002c t _Unwind_GetGR
0704b178 00000054 T _Unwind_VRS_Set
0704b1cc 0000002c t _Unwind_SetGR
0704b1f8 000000c0 T __gnu_Unwind_Backtrace
0704b2b8 00000448 t __gnu_unwind_pr_common
0704b700 00000008 T __aeabi_unwind_cpp_pr0
0704b708 00000008 W __aeabi_unwind_cpp_pr1
0704b710 00000008 W __aeabi_unwind_cpp_pr2
0704b718 000003dc T _Unwind_VRS_Pop
0704baf4 00000060 t next_unwind_byte
0704bb54 0000002c t _Unwind_GetGR.constprop.0
0704bb80 00000004 t unwind_UCB_from_context
0704bb84 000003c8 T __gnu_unwind_execute
0704bf4c 00000048 T __gnu_unwind_frame
0704bf94 00000010 T _Unwind_GetRegionStart
0704bfa4 0000001c T _Unwind_GetLanguageSpecificData
0704bfc0 00000008 T _Unwind_GetDataRelBase
0704bfc8 00000008 T _Unwind_GetTextRelBase
0704bfd0 00000010 T ctime
0704bfe0 00000014 T __cxa_atexit
0704bff4 0000000c T __errno
0704c000 0000007c T __libc_init_array
0704c07c 00000018 T isspace
0704c094 00000018 T isxdigit
0704c0ac 0000001c T localtime
0704c0c8 00000378 T localtime_r
0704c440 00000020 T memalign
0704c460 0000014c T _memalign_r
0704c5ac 00000018 T malloc
0704c5c4 00000018 T free
0704c5dc 000007d8 T _malloc_r
0704cdb4 00000100 T memchr
0704ceb4 000000fc T memcmp
0704cfb0 00000118 T memcpy
0704d0c8 00000154 T memmove
0704d21c 00000114 T memset
0704d330 0000000c T __malloc_lock
0704d33c 0000000c T __malloc_unlock
0704d348 000000d4 T snprintf
0704d41c 00000064 T sprintf
0704d480 00000008 T __seofread
0704d488 00000154 t iso_year_adjust
0704d5dc 00001138 t __strftime
0704e714 00000020 T strftime
0704e734 0000005c T strlen
0704e790 0000010c T strncmp
0704e89c 000000e0 T strncpy
0704e97c 00000054 t sulp
0704e9d0 000013c4 T _strtod_l
0704fd98 000000bc T strtof
0704fe58 0000025c t _strtoull_l.isra.0
070500b4 00000004 T _strtoull_r
070500b8 000001d0 t _strtoul_l.isra.0
07050288 00000004 T _strtoul_r
0705028c 00000028 T strtoul
070502b4 00000620 t get_arg
070508d8 000035c0 T _svfprintf_r
07053e98 0000003c T time
07053ed4 00000224 T __tzcalc_limits
070540f8 0000000c T __tz_lock
07054104 0000000c T __tz_unlock
07054110 00000010 T _tzset_unlocked
07054120 0000046c T _tzset_unlocked_r
0705458c 000000a4 T _vsnprintf_r
07054630 00000038 T vsnprintf
07054668 00000054 T _wcrtomb_r
070546bc 00000020 T _wcsrtombs_r
070546dc 0000000c T abs
070546e8 0000001c T asctime
07054704 00000078 T asctime_r
0705477c 000000b0 T __register_exitproc
0705482c 000001c8 t quorem
070549f8 000012ec T _dtoa_r
07055ce4 000000f8 T _malloc_trim_r
07055ddc 000002e4 T _free_r
070560c0 000000ec t rshift
070561ac 00000828 T __gethex
070569d4 00000060 T __match
07056a34 00000254 T __hexnan
07056c88 000000c8 T _findenv_r
07056d50 00000018 T _getenv_r
07056d68 0000000c T __gettzinfo
07056d74 0000027c T gmtime_r
07056ff0 0000000c T labs
07056ffc 0000000c T _localeconv_r
07057008 00000010 T __locale_mb_cur_max
07057018 000002fc T __utf8_mbtowc
07057314 00000088 T _Balloc
0705739c 0000001c T _Bfree
070573b8 000000e0 T __multadd
07057498 000000e4 T __s2b
0705757c 00000058 T __hi0bits
070575d4 0000009c T __lo0bits
07057670 00000020 T __i2b
07057690 000001c4 T __multiply
07057854 00000100 T __pow5mult
07057954 000000f4 T __lshift
07057a48 0000005c T __mcmp
07057aa4 00000168 T __mdiff
07057c0c 00000074 T __ulp
07057c80 000000d4 T __b2d
07057d54 00000100 T __d2b
07057e54 00000084 T __ratio
07057ed8 0000006c T __copybits
07057f44 00000078 T __any_on
07057fbc 0000000c T nanf
07057fc8 000000a8 T frexp
07058070 00000064 T siprintf
070580d4 00000074 T siscanf
07058148 00000010 T nan
07058158 000000d4 T sniprintf
0705822c 000000f0 T strcpy
0705831c 000001bc t _strtol_l.isra.0
070584d8 00000004 T _strtol_r
070584dc 00000620 t get_arg
07058afc 00000188 T __ssprint_r
07058c84 0000248c T _svfiprintf_r
0705b110 00000048 t get_arg
0705b158 000000e4 T _sungetc_r
0705b23c 0000006c T __ssrefill_r
0705b2a8 000000c8 T _sfread_r
0705b370 00002234 T __ssvfiscanf_r
0705d5a4 000000a4 T __submore
0705d648 00000184 T _wcsnrtombs_l
0705d7cc 0000004c T _wcsnrtombs_r
0705d818 000000e8 T __utf8_wctomb
0705d900 00000094 T _calloc_r
0705d994 0000000c T __env_lock
0705d9a0 0000000c T __env_unlock
0705d9ac 00000008 T iswspace
0705d9b4 00000060 T _mbrtowc_r
0705da14 00000020 T realloc
0705da34 000004bc T _realloc_r
0705def0 000000cc T __sccl
0705dfbc 0000025c t _strtoll_l.isra.0
0705e218 00000004 T _strtoll_r
0705e21c 0000003c T iswspace_l
0705e258 000001e0 t __jp2uc
0705e438 00000094 T _jp2uc_l
0705e4cc 00000084 T category
0705e550 0000002c T _gettimeofday_r
0705e57c 00000070 T _sbrk_r
0705e5ec 00000018 T __libc_lock_acquire
0705e604 00000018 T __libc_lock_release
0705e61c 00000018 T __libc_lock_acquire_recursive
0705e634 00000018 T __libc_lock_release_recursive
0705e64c 00000028 T __getreent
0705e674 T _fini
0705e68c 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0705e874 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0705e880 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0705e894 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0705e8b0 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0705e8c0 00000030 r ._190
0705e8f0 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0705e900 00000090 r ._188
0705e990 00000010 r ._189
0705e9dc 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705e9fc 00000a00 r font
0705f3fc 0000001c R vtable for CTRPluginFramework::TextBox
0705f438 00000058 r CTRPluginFramework::g_OSDPattern
0705f4c0 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705f4d4 00000038 r CTRPluginFramework::stable
0705f50c 00000038 r CTRPluginFramework::ktable
0705f544 00000048 r CTRPluginFramework::g_ctrpf
0705f58c 00000030 r CTRPluginFramework::g_byme
0705f5e8 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705f600 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705f618 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705f630 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705f648 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705f650 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705f66c 00000038 R vtable for CTRPluginFramework::Search
0705f6a4 00000038 R vtable for CTRPluginFramework::Search32
0705f6dc 00000005 r CSWTCH.74
0705f6e4 00000004 R Search15_array_length
0705f6e8 00000384 r Search15_array
0705fa6c 00000004 R UnCheckedCheckbox_array_length
0705fa70 00000384 r UnCheckedCheckbox_array
0705fdf4 00000004 R Unsplash15_array_length
0705fdf8 00000384 r Unsplash15_array
0706017c 00000004 R Plus25_array_length
07060180 000009c4 r Plus25_array
07060b44 00000004 R GameControllerFilled25_array_length
07060b48 000009c4 r GameControllerFilled25_array
0706150c 00000004 R About15_array_length
07061510 00000384 r About15_array
07061894 00000004 R Trash25_array_length
07061898 000009c4 r Trash25_array
0706225c 00000004 R Cut25_array_length
07062260 000009c4 r Cut25_array
07062c24 00000004 R CloseWindow20_array_length
07062c28 00000640 r CloseWindow20_array
07063268 00000004 R AddFavoriteFilled25_array_length
0706326c 000009c4 r AddFavoriteFilled25_array
07063c30 00000004 R ClearSymbolFilled15_array_length
07063c34 00000384 r ClearSymbolFilled15_array
07063fb8 00000004 R ClipboardFilled25_array_length
07063fbc 000009c4 r ClipboardFilled25_array
07064980 00000004 R CheckedCheckbox_array_length
07064984 00000384 r CheckedCheckbox_array
07064d08 00000004 R CutFilled25_array_length
07064d0c 000009c4 r CutFilled25_array
070656d0 00000004 R CapsLockOn15_array_length
070656d4 00000384 r CapsLockOn15_array
07065a58 00000004 R TrashFilled25_array_length
07065a5c 000009c4 r TrashFilled25_array
07066420 00000004 R RAM15_array_length
07066424 00000384 r RAM15_array
070667a8 00000004 R More15_array_length
070667ac 00000384 r More15_array
07066b30 00000004 R InfoFilled25_array_length
07066b34 000009c4 r InfoFilled25_array
070674f8 00000004 R CloseWindowFilled20_array_length
070674fc 00000640 r CloseWindowFilled20_array
07067b3c 00000004 R HandCursor15_array_length
07067b40 00000384 r HandCursor15_array
07067ec4 00000004 R EnterKey15_array_length
07067ec8 00000384 r EnterKey15_array
0706824c 00000004 R Duplicate25_array_length
07068250 000009c4 r Duplicate25_array
07068c14 00000004 R Settings15_array_length
07068c18 00000384 r Settings15_array
07068f9c 00000004 R File15_array_length
07068fa0 00000384 r File15_array
07069324 00000004 R AddFavorite25_array_length
07069328 000009c4 r AddFavorite25_array
07069cec 00000004 R Edit25_array_length
07069cf0 000009c4 r Edit25_array
0706a6b4 00000004 R DuplicateFilled25_array_length
0706a6b8 000009c4 r DuplicateFilled25_array
0706b07c 00000004 R Save25_array_length
0706b080 000009c4 r Save25_array
0706ba44 00000004 R Clipboard25_array_length
0706ba48 000009c4 r Clipboard25_array
0706c40c 00000004 R Info25_array_length
0706c410 000009c4 r Info25_array
0706cdd4 00000004 R EditFilled25_array_length
0706cdd8 000009c4 r EditFilled25_array
0706d79c 00000004 R KeyboardFilled25_array_length
0706d7a0 000009c4 r KeyboardFilled25_array
0706e164 00000004 R PlusFilled25_array_length
0706e168 000009c4 r PlusFilled25_array
0706eb2c 00000004 R Shutdown15_array_length
0706eb30 00000384 r Shutdown15_array
0706eeb4 00000004 R ClearSymbol15_array_length
0706eeb8 00000384 r ClearSymbol15_array
0706f23c 00000004 R Maintenance15_array_length
0706f240 00000384 r Maintenance15_array
0706f5c4 00000004 R Controller15_array_length
0706f5c8 00000384 r Controller15_array
0706f94c 00000004 R Grid15_array_length
0706f950 00000384 r Grid15_array
0706fcd4 00000004 R Keyboard25_array_length
0706fcd8 000009c4 r Keyboard25_array
0707069c 00000004 R CapsLockOnFilled15_array_length
070706a0 00000384 r CapsLockOnFilled15_array
07070a24 00000004 R UserManualFilled15_array_length
07070a28 00000384 r UserManualFilled15_array
07070dac 00000004 R Rocket40_array_length
07070db0 00001900 r Rocket40_array
070726b0 00000004 R Star15_array_length
070726b4 00000384 r Star15_array
07072a38 00000004 R EnterKeyFilled15_array_length
07072a3c 00000384 r EnterKeyFilled15_array
07072dc0 00000004 R GameController25_array_length
07072dc4 000009c4 r GameController25_array
07073788 00000004 R FolderFilled_array_length
0707378c 00000384 r FolderFilled_array
07073b10 00000004 R Restart15_array_length
07073b14 00000384 r Restart15_array
07073ec8 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07073ee4 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07073ef0 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07073f70 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07073f84 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07073f8c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07073f94 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07073f9c 00000040 r RegNames
07073fdc 00000040 r cond_names
0707401c 00000010 r shift_names
0707402c 0000001c R vtable for CTRPluginFramework::Button
07074048 0000001c R vtable for CTRPluginFramework::ComboBox
07074064 0000001c R vtable for CTRPluginFramework::FloatingButton
07074080 0000001c R vtable for CTRPluginFramework::TouchKey
0707409c 0000001c R vtable for CTRPluginFramework::NumericTextBox
07076584 00000014 V vtable for CTRPluginFramework::MenuItem
07076c5c 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0707801c 0000000c R typeinfo for std::bad_alloc
07078028 0000000d R typeinfo name for std::bad_alloc
07078038 00000014 R vtable for std::bad_alloc
07078070 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07078078 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07078080 0000000c R typeinfo for std::bad_exception
0707808c 00000008 R typeinfo for std::exception
07078094 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
070780b4 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
070780d8 00000012 R typeinfo name for std::bad_exception
070780ec 0000000d R typeinfo name for std::exception
070780fc 00000014 R vtable for std::bad_exception
07078110 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0707811c 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07078144 0000002c R vtable for __cxxabiv1::__si_class_type_info
070782a0 00000008 R typeinfo for std::type_info
070782a8 0000000d R typeinfo name for std::type_info
070782b8 0000000c R typeinfo for __cxxabiv1::__class_type_info
070782c4 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070782e8 0000002c R vtable for __cxxabiv1::__class_type_info
07078314 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07078320 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07078344 00000014 R vtable for __gnu_cxx::recursive_init_error
07078358 0000000c R typeinfo for std::logic_error
07078364 0000000c R typeinfo for std::length_error
07078370 0000000c R typeinfo for std::out_of_range
0707837c 0000000c R typeinfo for std::invalid_argument
07078388 00000010 R typeinfo name for std::logic_error
07078398 00000011 R typeinfo name for std::length_error
070783ac 00000011 R typeinfo name for std::out_of_range
070783c0 00000015 R typeinfo name for std::invalid_argument
070783d8 00000014 R vtable for std::logic_error
070783ec 00000014 R vtable for std::length_error
07078400 00000014 R vtable for std::out_of_range
07078414 00000014 R vtable for std::invalid_argument
070784f0 00000890 R __log2_data
07078d80 00000004 R _global_impure_ptr
07078d84 00000060 R __month_lengths
07078e70 00000014 r fpi.7554
07078e84 00000014 r fpinan.7590
07078e98 00000028 r tinytens
07078efc 00000010 r blanks.8740
07078f0c 00000010 r zeroes.8741
07078f1c 000000fc R _C_time_locale
070791e4 00000015 r day_name.6253
070791fc 00000024 r mon_name.6254
07079220 00000101 R _ctype_
07079338 00000100 R __hexdig
07079438 0000000c R _C_numeric_locale
07079490 00000028 R __mprec_bigtens
070794b8 000000c8 R __mprec_tens
07079580 0000000c r p05.7474
0707958c 0000006c R __action_table
070795f8 00000100 R __chclass
070796f8 0000006c R __state_table
07079764 00000010 r blanks.8719
07079774 00000010 r zeroes.8720
07079784 00000022 r basefix.8286
070797bc 000000bc r a1
07079878 000000bc r a2
07079934 0000005b r a3
07079990 00000070 r a6
07079a00 000000a2 r a7
07079aa4 00000040 r a8
07079ae4 0000172a r b02cf
0707b210 00001a7c r d02f4
0707cc8c 0000309c r categories
0707fe3c R __exidx_start
070800f4 R __exidx_end
070800f4 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
070800f8 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
070800fc 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
07080100 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
07080104 00000001 D CTRPluginFramework::g_keepRunning
07080108 00000004 D CTRPluginFramework::FwkSettings::Header
0708010c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07080110 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07080114 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
07080118 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0708011c 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07080120 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07080124 00000004 D CTRPluginFramework::Screenshot::Screens
07080128 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708012c 00000001 D CTRPluginFramework::SystemImpl::Language
0708012d 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
07080130 00000004 D Search15
07080134 00000004 D UnCheckedCheckbox
07080138 00000004 D Unsplash15
0708013c 00000004 D Plus25
07080140 00000004 D GameControllerFilled25
07080144 00000004 D About15
07080148 00000004 D Trash25
0708014c 00000004 D Cut25
07080150 00000004 D CloseWindow20
07080154 00000004 D AddFavoriteFilled25
07080158 00000004 D ClearSymbolFilled15
0708015c 00000004 D ClipboardFilled25
07080160 00000004 D CheckedCheckbox
07080164 00000004 D CutFilled25
07080168 00000004 D CapsLockOn15
0708016c 00000004 D TrashFilled25
07080170 00000004 D RAM15
07080174 00000004 D More15
07080178 00000004 D InfoFilled25
0708017c 00000004 D CloseWindowFilled20
07080180 00000004 D HandCursor15
07080184 00000004 D EnterKey15
07080188 00000004 D Duplicate25
0708018c 00000004 D Settings15
07080190 00000004 D File15
07080194 00000004 D AddFavorite25
07080198 00000004 D Edit25
0708019c 00000004 D DuplicateFilled25
070801a0 00000004 D Save25
070801a4 00000004 D Clipboard25
070801a8 00000004 D Info25
070801ac 00000004 D EditFilled25
070801b0 00000004 D KeyboardFilled25
070801b4 00000004 D PlusFilled25
070801b8 00000004 D Shutdown15
070801bc 00000004 D ClearSymbol15
070801c0 00000004 D Maintenance15
070801c4 00000004 D Controller15
070801c8 00000004 D Grid15
070801cc 00000004 D Keyboard25
070801d0 00000004 D CapsLockOnFilled15
070801d4 00000004 D UserManualFilled15
070801d8 00000004 D Rocket40
070801dc 00000004 D Star15
070801e0 00000004 D EnterKeyFilled15
070801e4 00000004 D GameController25
070801e8 00000004 D FolderFilled
070801ec 00000004 D Restart15
070801f0 000001f4 D opcode_names
070803e4 D __dso_handle
070803e8 00000004 D __cxxabiv1::__terminate_handler
070803ec 00000004 D __cxxabiv1::__unexpected_handler
070803f0 00000001 D __fdlib_version
070803f4 00000004 D _impure_ptr
070803f8 00000460 d impure_data
07080858 00000408 D __malloc_av_
07080c60 00000004 D __malloc_sbrk_base
07080c64 00000004 D __malloc_trim_threshold
07080c68 0000000c d __malloc_recursive_mutex
07080c74 00000004 d __tz_mutex
07080c78 00000008 D _tzname
07080c80 0000000c D __atexit_recursive_mutex
07080c90 00000058 d tzinfo
07080ce8 00000002 d numempty
07080cec 0000016c D __global_locale
07080e58 00000004 D environ
07080e5c 0000000c d __env_recursive_mutex
07080e68 D __TMC_END__
07080e78 d _GLOBAL_OFFSET_TABLE_
07080e84 D __tdata_lma
07080e90 t __frame_dummy_init_array_entry
07080e90 T __init_array_start
07080e90 B __preinit_array_end
07080e90 B __preinit_array_start
07080e90 D __tdata_lma_end
07080eec t __do_global_dtors_aux_fini_array_entry
07080eec T __init_array_end
07080ef0 B __c_bss_start
07080ef0 00000004 B CTRPluginFramework::offset
07080ef4 000000b4 b CTRPluginFramework::original_speed
07080fa8 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
07080fac 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
07080fb0 00000004 B CTRPluginFramework::data
07080fb4 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
07080fb8 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
07080fbc 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
07080fc0 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
07080fc4 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
07080fc8 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
07080fcc 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
07080fcd 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
07080fd0 00000004 B CTRPluginFramework::g_FNsPointer
07080fd4 00000004 B CTRPluginFramework::g_oldRacePointer5D0
07080fd8 00000004 B CTRPluginFramework::g_itemPointer
07080fdc 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
07080fe0 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
07080fe1 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
07080fe2 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
07080fe3 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
07080fe4 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
07080fe5 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
07080fe8 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
07080fec 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
07080ff0 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
07080ff4 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
07080ff6 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
07080ff8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
07080ff9 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
07080ffa 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
07080ffc 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
07081000 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
07081004 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07081008 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07081014 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
07081018 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
07081024 0000000c b CTRPluginFramework::g_items
07081030 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07081034 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07081040 0000000c b CTRPluginFramework::speed
0708104c 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
07081050 00000004 B CTRPluginFramework::g_oldRacePointer5CC
07081058 00000004 b g_onLoadCroLock
0708105c 00000004 B g_mainThread
07081060 00000004 B CTRPluginFramework::g_keepEvent
07081064 00000004 B CTRPluginFramework::g_continueGameEvent
07081068 0000005c b CTRPluginFramework::exception_data
070810c4 00000004 B CTRPluginFramework::g_keepThreadHandle
070810c8 00000018 b g_onLoadCroHook
070810e0 00000008 B CTRPluginFramework::_sdmcArchive
070810e8 00000004 B g_gspEventThreadPriority
070810ec 00000004 B CTRPluginFramework::g_resumeEvent
070810f0 00001000 b CTRPluginFramework::keepThreadStack
070820f0 00000004 B __ctru_heap_size
070820f4 00000004 B CTRPluginFramework::Color::Black
070820f8 00000004 B CTRPluginFramework::Color::White
070820fc 00000004 B CTRPluginFramework::Color::Red
07082100 00000004 B CTRPluginFramework::Color::Lime
07082104 00000004 B CTRPluginFramework::Color::Blue
07082108 00000004 B CTRPluginFramework::Color::Yellow
0708210c 00000004 B CTRPluginFramework::Color::Cyan
07082110 00000004 B CTRPluginFramework::Color::Magenta
07082114 00000004 B CTRPluginFramework::Color::Silver
07082118 00000004 B CTRPluginFramework::Color::Gray
0708211c 00000004 B CTRPluginFramework::Color::Maroon
07082120 00000004 B CTRPluginFramework::Color::Olive
07082124 00000004 B CTRPluginFramework::Color::Green
07082128 00000004 B CTRPluginFramework::Color::Purple
0708212c 00000004 B CTRPluginFramework::Color::Teal
07082130 00000004 B CTRPluginFramework::Color::Navy
07082134 00000004 B CTRPluginFramework::Color::BlackGrey
07082138 00000004 B CTRPluginFramework::Color::Brown
0708213c 00000004 B CTRPluginFramework::Color::DarkGrey
07082140 00000004 B CTRPluginFramework::Color::DeepSkyBlue
07082144 00000004 B CTRPluginFramework::Color::DimGrey
07082148 00000004 B CTRPluginFramework::Color::DodgerBlue
0708214c 00000004 B CTRPluginFramework::Color::Gainsboro
07082150 00000004 B CTRPluginFramework::Color::ForestGreen
07082154 00000004 B CTRPluginFramework::Color::LimeGreen
07082158 00000004 B CTRPluginFramework::Color::Orange
0708215c 00000004 B CTRPluginFramework::Color::SkyBlue
07082160 00000004 B CTRPluginFramework::Color::Turquoise
07082164 00000004 b CTRPluginFramework::g_runningInstance
07082168 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082170 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082178 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082180 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082184 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082186 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082188 00000180 b CTRPluginFramework::g_keyName
07082308 00000004 B CTRPluginFramework::__fileHandle
07082310 00000008 B CTRPluginFramework::Time::Zero
07082318 00000004 B CTRPluginFramework::System::OnAbort
0708231c 00000004 B CTRPluginFramework::Controller::_keysDown
07082320 00000004 B CTRPluginFramework::Controller::_keysHeld
07082324 00000004 B CTRPluginFramework::Controller::_keysReleased
07082328 000009c4 b CTRPluginFramework::g_rng
07082cf0 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
07082cf4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07082cf8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07082cfc 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
07082cfd 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
07082cfe 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
07082cff 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
07082d00 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
07082d01 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
07082d02 00000001 B CTRPluginFramework::Preferences::ShowTopFps
07082d03 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
07082d04 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07082d05 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07082d08 00000070 B CTRPluginFramework::Preferences::Settings
07082d78 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07082d90 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07082da8 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07082dc0 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
07082dc1 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
07082dc2 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
07082dc4 00000004 b CTRPluginFramework::defaultSysFont
07082dc8 00000004 B CTRPluginFramework::g_fontAllocated
07082dcc 00000004 b CTRPluginFramework::tileData
07082dd0 00000004 b CTRPluginFramework::glyph
07082dd4 0000000c B CTRPluginFramework::Font::_mutex
07082de0 00000004 B CTRPluginFramework::g_glyphAllocated
07082de4 00000028 B CTRPluginFramework::Window::BottomWindow
07082e0c 00000028 B CTRPluginFramework::Window::TopWindow
07082e34 00000004 B CTRPluginFramework::RendererPriv::g_customColor
07082e38 00000008 B CTRPluginFramework::Renderer::hookContext
07082e40 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07082e44 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07082e48 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07082e4c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07082e58 0000000c B CTRPluginFramework::OSDImpl::RecLock
07082e64 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
07082e70 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07082e88 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07082ea0 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
07082ea4 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
07082eac 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07082eb0 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
07082eb8 00000018 B CTRPluginFramework::OSDImpl::OSDHook
07082ed0 00000010 b CTRPluginFramework::InstallOSD()::returnCode
07082ee0 00000004 B CTRPluginFramework::OSDImpl::HookReturn
07082ee4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
07082eec 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
07082f10 0000000c B CTRPluginFramework::OSDImpl::Callbacks
07082f1c 00000004 b CTRPluginFramework::g_second
07082f20 00000010 b CTRPluginFramework::g_fpsClock
07082f30 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
07082f34 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
07082f35 00000001 B CTRPluginFramework::OSDImpl::MessColors
07082f38 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
07082f3c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07082f40 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07082f48 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07082f68 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07082f70 00000004 b CTRPluginFramework::g_ctrpfString
07082f74 00000004 b CTRPluginFramework::g_bymeString
07082f78 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07082f80 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07082f88 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07082f90 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07082f98 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
07082f9c 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07082fa0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07082fa8 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07082fb0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07082fb4 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07082fb8 00000004 b CTRPluginFramework::g_mode
07082fbc 00000004 b CTRPluginFramework::g_OpenFileLock
07082fc0 00000004 b CTRPluginFramework::g_HookMode
07082fc8 00000040 b CTRPluginFramework::g_hookExportFile
07083008 00000010 b CTRPluginFramework::g_returncode
07083018 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
07083030 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
07083034 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
07083038 00000004 b CTRPluginFramework::g_screenshotEntry
0708303c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083040 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083044 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07083048 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708304c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07083050 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07083060 00000004 B CTRPluginFramework::__g_hexEditor
07083064 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083068 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083078 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708307c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07083080 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07083090 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070830a0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070830b0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070830b4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070830b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070830bc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070830cc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070830d0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070830e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070830e4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070830f4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070830f8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07083100 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07083108 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07083110 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07083118 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07083120 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
07083124 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
07083130 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708313c 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07083148 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083150 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083158 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708315c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708316c 00000004 b CTRPluginFramework::__pmARinstance
07083170 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083174 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083178 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083188 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083198 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708319c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
070831a0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
070831a8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
070831b8 00000004 b CTRPluginFramework::g_radioId
070831bc 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070831c0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
070831c4 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
070831c8 00000004 B CTRPluginFramework::_pool
070831d0 00000008 B CTRPluginFramework::Screenshot::_timer
070831d8 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070831e0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070831e8 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
07083200 00000004 B CTRPluginFramework::Screenshot::_filecount
07083204 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708321c 00000004 B CTRPluginFramework::Screenshot::_display
07083220 00000004 B CTRPluginFramework::Screenshot::_mode
07083228 00000008 B CTRPluginFramework::Screenshot::Timer
07083230 00000001 B CTRPluginFramework::Screenshot::IsEnabled
07083234 00000004 B CTRPluginFramework::Screenshot::_task
07083238 00000004 B CTRPluginFramework::Screenshot::_count
0708323c 00000008 b CTRPluginFramework::g_sleepEvent
07083244 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07083248 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708324c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07083250 00000004 B CTRPluginFramework::SystemImpl::AptStatus
07083254 00000004 B CTRPluginFramework::HookManager::instance
07083258 00000078 B CTRPluginFramework::Scheduler::_singleton
070832d0 00000040 b CTRPluginFramework::_topBuf
07083310 00000004 B CTRPluginFramework::ScreenImpl::Top
07083314 00000040 b CTRPluginFramework::_botBuf
07083354 00000004 B CTRPluginFramework::ScreenImpl::Bottom
07083358 0000000c b CTRPluginFramework::Heap::_mutex
07083364 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07083368 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708336c 00000008 b CTRPluginFramework::Heap::g_heapPool
07083374 0000000c b sAddrMap
07083380 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07083398 0000000c B CTRPluginFramework::FSPath::FSMutex
070833a8 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
070833ac 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
07083410 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
07083414 00000004 B CTRPluginFramework::ProcessImpl::MainThread
07083418 00000008 B CTRPluginFramework::ProcessImpl::TitleId
07083420 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
07083424 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
07083428 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
07083434 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07083440 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07083450 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
07083452 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
07083458 0000000c b _mutex
07083464 00000008 b sVramPool
0708346c 0000000c b sAddrMap
07083478 00000004 b srvRefCount
0708347c 00000004 b srv2Handle
07083480 00000004 b errfRefCount
07083484 00000004 b errfHandle
07083488 00000004 b sharedFontAddr
0708348c 00000004 b arbiter
07083490 00000004 b cfguRefCount
07083494 00000004 b cfguHandle
07083498 00000004 b fsuHandle
070834a0 00000080 b fsExemptArchives
07083520 00000004 b fsuRefCount
07083524 00000001 B fs
07083528 0000000c b aptFirstHook
07083534 00000004 b serviceName.7785
07083538 00000004 b aptRefCount
0708353c 0000000c b aptEvents
07083548 00000008 b aptSleepEvent
07083550 00000004 b aptEventHandlerThread
07083554 00000004 b aptMessageFunc
07083558 00000004 b aptMessageFuncData
0708355c 00000001 b aptHomeButtonState
0708355d 00000001 b flagInit.8135
0708355e 00000001 b flagValue.8136
07083560 00001000 b aptParameters
07084560 00001000 b __stack
07085560 00000004 b amRefCount
07085564 00000004 b amHandle
07085568 00000004 b acRefCount
0708556c 00000004 b acHandle
07085570 00000004 b hidRefCount
07085574 00000004 b kOld
07085578 00000004 b kHeld
0708557c 00000004 b cPos
07085580 00000004 b tPos
07085584 00000006 b aVec
0708558a 00000006 b gRate
07085590 00000004 b kDown
07085594 00000004 b kUp
07085598 00000004 b gspEventData
0708559c 00000038 b gspEvents
070855d4 0000001c b gspEventCounts
070855f0 00000001 b gspRunEvents
070855f4 00000004 b gspRefCount
070855f8 00000004 b gfxSharedMemory
070855fc 00000001 b gfxThreadID
07085600 00000004 b irrstRefCount
07085604 00000004 b kHeld
07085608 00000004 b csPos
0708560c 00000004 b g_mainThreadVars
07085610 b saved_stack
07085618 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708561c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07085634 0000000c B CTRPluginFramework::g_codeTypes
07085640 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085644 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085650 00000001 b CTRPluginFramework::g_condAgainstData
07085651 00000001 b CTRPluginFramework::g_newCondDataToggle
07085654 00000004 b CTRPluginFramework::__arCodeEditor
07085658 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708565c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07085668 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07085670 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085678 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085680 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085688 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085698 00000001 b CTRPluginFramework::g_progressLoop
070856a0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070856a8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070856b0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070856b8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070856c0 00000004 b CTRPluginFramework::__converter
070856c4 00000008 b sMappablePool
070856cc 0000000c b sAddrMap
070856d8 00000004 B CTRPluginFramework::ARHandler::ActiveData
070856dc 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070856e0 00000008 B CTRPluginFramework::ARHandler::Offset
070856e8 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070856ec 00000010 B CTRPluginFramework::ARHandler::Data
070856fc 00000008 B CTRPluginFramework::ARHandler::Storage
07085704 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
07085708 00000001 b CTRPluginFramework::ToggleFloat
0708570c 00000004 b CTRPluginFramework::g_context
07085710 00000fa0 b CTRPluginFramework::arStack
070866b0 b completed.10351
070866b4 b object.10356
070866cc 00000004 b (anonymous namespace)::__new_handler
070866d0 00000010 b (anonymous namespace)::emergency_pool
070866e0 0000000c b eh_globals
070866ec 00000010 V std::string::_Rep::_S_empty_rep_storage
070866fc 00000028 B __malloc_current_mallinfo
07086724 00000004 B __malloc_max_sbrked_mem
07086728 00000004 B __malloc_max_total_mem
0708672c 00000004 B __malloc_top_pad
07086730 0000000b b __tzname_dst
0708673c 0000000b b __tzname_std
07086748 00000004 b prev_tzenv
0708674c 00000004 B _daylight
07086750 00000004 B _timezone
07086754 00000004 b initial_env
07086758 00000004 b heap_start.7414
0708675c 00000004 B fake_heap_end
07086760 00000004 B fake_heap_start
07086764 00000048 B __syscalls
070867ac 00000004 B g_sharedFont
070867b0 00000004 B charPerSheet
070867b4 00000004 B hidMemHandle
070867b8 00000004 B hidHandle
070867bc 00000014 B hidEvents
070867d0 00000004 B hidSharedMem
070867d4 00000004 B gspEventThread
070867d8 00000004 B gspEvent
070867dc 00000004 B gspGpuHandle
070867e0 00000004 B gspSharedMemHandle
070867e4 00000004 B gspThreadEventHandle
070867e8 00000004 B irrstMemHandle
070867ec 00000004 B irrstEvent
070867f0 00000004 B irrstHandle
070867f4 00000004 B irrstSharedMem
070867f8 00000004 B __ctru_linear_heap
070867fc 00000004 B __tmp
07086800 00000004 B __ctru_linear_heap_size
07086804 00000004 B __system_retAddr
07086808 00000004 B __ctru_heap
0708680c B __c_bss_end
0708680c B __tls_start
0708682c A __end__
0708682c B __tls_end
