00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 00000154 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
0700147c 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
070014d8 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001518 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001558 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001598 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
070015d4 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07001610 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07001678 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
070016dc 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
0700179c 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
070017f8 00000070 t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.32]
070017f8 00000070 t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.33]
07001868 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001868 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001888 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
07001888 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
070018a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018c8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.105]
07001950 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
070019fc 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.144]
07001a58 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a58 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a94 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07001ad0 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001b0c 00000024 W CTRPluginFramework::File::~File()
07001b0c 00000024 W CTRPluginFramework::File::~File()
07001b30 00000084 T CTRPluginFramework::IsInRace()
07001bb4 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001c1c 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001c70 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001ce4 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001da8 00000120 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001ec8 000000a8 T CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)
07001f70 000000bc T CTRPluginFramework::GetRacePointer()
0700202c 00000030 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
0700205c 00000030 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
0700208c 0000002c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
070020b8 00000030 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
070020e8 0000002c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
07002114 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07002118 0000003c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07002154 000000a0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
070021f4 000000c4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
070022b8 00000270 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
07002528 00000254 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
0700277c 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
070028fc 00000038 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
07002934 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07002a64 0000009c T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07002b00 000000a4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002ba4 0000004c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002bf0 00000050 T CTRPluginFramework::GetFNsPointer()
07002c40 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002ca8 0000006c T CTRPluginFramework::GetOldPointer5CC()
07002d14 00000034 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002d48 00000070 T CTRPluginFramework::GetOldPointer5D0()
07002db8 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002e00 0000009c T CTRPluginFramework::GetItemPointer()
07002e9c 000001a4 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07003040 000000b8 T CTRPluginFramework::GetTotalPlayers()
070030f8 000001f0 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
070032e8 00000060 T CTRPluginFramework::GetTime()
07003348 0000002c T CTRPluginFramework::GetMinutes()
07003374 0000001c T CTRPluginFramework::GetSeconds()
07003390 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07003448 00000070 T CTRPluginFramework::SubToTime(unsigned short)
070034b8 0000042c T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
070038e4 0000005c T CTRPluginFramework::writeItem(unsigned long)
07003940 000000c8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003a08 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07003a38 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003b1c 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003b5c 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003b9c 00000230 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003dcc 00000230 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003ffc 00000048 T CTRPluginFramework::writeVR(unsigned long)
07004044 000000d8 T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
0700411c 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07004138 00000060 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07004198 0000004c T CTRPluginFramework::writeLocation(unsigned long)
070041e4 00000060 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
07004244 00000064 T CTRPluginFramework::writeFlag(unsigned short)
070042a8 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
0700439c 00001708 T CTRPluginFramework::main()
07005aa4 0000003c W std::vector<CTRPluginFramework::Mii, std::allocator<CTRPluginFramework::Mii> >::~vector()
07005aa4 0000003c W std::vector<CTRPluginFramework::Mii, std::allocator<CTRPluginFramework::Mii> >::~vector()
07005ae0 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005bc0 000001d4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07005d94 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07005d98 00000004 T CTRPluginFramework::OnProcessExit()
07005d9c 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
07005e00 000000f0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005ef0 00000100 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005ff0 00000170 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
07006160 00000550 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
070066b0 000000f4 t _GLOBAL__sub_I__ZN18CTRPluginFramework6offsetE
070067a4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0700681c 00000038 T OnLoadCro
07006854 00000170 T CTRPluginFramework::Initialize()
070069c4 000000b0 T CTRPluginFramework::ThreadExit()
07006a74 00000060 T abort
07006ad4 0000003c T CTRPluginFramework::ThreadInit(void*)
07006b10 0000008c T LaunchMainThread
07006b9c 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07006fa4 0000000c t _GLOBAL__sub_I_g_mainThread
07006fb0 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006ffc 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07007078 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
0700713c 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
070071b4 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070071b4 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070071cc 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070071cc 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070071d8 00000008 T CTRPluginFramework::Color::ToU32() const
070071e0 00000120 T CTRPluginFramework::Color::Fade(double)
07007300 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07007340 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
070073bc 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
070075d0 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
070076f0 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070076f0 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007760 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07007760 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700778c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
070077a0 00000044 T CTRPluginFramework::PluginMenu::Run() const
070077e4 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070077ec 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070077fc 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07007808 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007808 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007848 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007848 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007870 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07007880 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007880 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070078cc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070078cc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700791c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700791c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700794c 00000010 T CTRPluginFramework::MenuEntry::Disable() const
0700795c 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07007964 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
0700796c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07007974 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007974 00000030 W CTRPluginFramework::TextBox::~TextBox()
070079a4 0000001c W CTRPluginFramework::TextBox::~TextBox()
070079c0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070079c0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007a08 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007a08 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007a44 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007a44 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007a80 00000008 T CTRPluginFramework::MessageBox::operator()() const
07007a88 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007b4c 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07007bf4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007bf4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007c3c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007c3c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007ca4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007ca4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007cd0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07007cd8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007cf4 00000028 T CTRPluginFramework::Keyboard::Open() const
07007d1c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007d94 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007e44 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07007e98 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007f00 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07007f08 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007f10 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07007fac 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008038 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070080e0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070081c8 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008254 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
070082fc 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070083e4 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008470 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07008518 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07008600 00000028 t __tcf_0
07008628 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
070086a0 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
070086a8 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07008728 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070087a4 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
0700887c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0700887c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07008898 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008898 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070088d8 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
070088e8 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070089a8 00000020 T CTRPluginFramework::HotkeyManager::Count()
070089c8 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008b38 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008c64 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008d8c 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07008dfc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008e84 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07008ec8 0000004c T CTRPluginFramework::Directory::Close() const
07008f14 000000e8 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
07008ffc 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07009010 00000008 T CTRPluginFramework::Directory::IsOpen() const
07009018 00000040 T CTRPluginFramework::Directory::Directory()
07009018 00000040 T CTRPluginFramework::Directory::Directory()
07009058 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0700908c 00000060 T CTRPluginFramework::Directory::~Directory()
0700908c 00000060 T CTRPluginFramework::Directory::~Directory()
070090ec 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070090ec 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700910c 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070091a4 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700923c 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070092dc 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070093b0 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009444 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009590 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009590 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070095e8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009624 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009624 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009640 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
070097b0 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
070097cc 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
070098f4 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
0700996c 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
070099d4 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07009a80 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07009ac4 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07009ca0 000001b4 T CTRPluginFramework::Directory::_List() const
07009e54 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009f34 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700a018 0000000c T CTRPluginFramework::FwkSettings::Get()
0700a024 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0700a104 00000010 T CTRPluginFramework::Process::GetHandle()
0700a114 00000010 T CTRPluginFramework::Process::GetTitleID()
0700a124 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a180 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a1b8 00000024 T CTRPluginFramework::Process::GetTextSize()
0700a1dc 00000008 T CTRPluginFramework::Process::Pause()
0700a1e4 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700a1f4 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700a29c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700a2a0 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700a2ec 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700a324 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700a348 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700a364 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0700a388 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a3c4 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a3ec 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a40c 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0700a42c 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
0700a598 0000002c T CTRPluginFramework::Hook::Hook()
0700a598 0000002c T CTRPluginFramework::Hook::Hook()
0700a5c4 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700a5dc 00000230 T CTRPluginFramework::Hook::Enable()
0700a80c 0000005c T CTRPluginFramework::Hook::Disable()
0700a868 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a868 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a87c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a87c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a8a4 00000004 T CTRPluginFramework::Mutex::Lock()
0700a8a8 00000014 T CTRPluginFramework::Mutex::TryLock()
0700a8bc 00000004 T CTRPluginFramework::Mutex::Unlock()
0700a8c0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a8c0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a8e4 0000004c T CTRPluginFramework::Lock::~Lock()
0700a8e4 0000004c T CTRPluginFramework::Lock::~Lock()
0700a930 00000074 T CTRPluginFramework::File::Close() const
0700a9a4 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
0700aa5c 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700ab4c 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700ab78 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700ac5c 00000008 T CTRPluginFramework::File::Tell() const
0700ac64 00000030 T CTRPluginFramework::File::Rewind() const
0700ac94 00000034 T CTRPluginFramework::File::Flush() const
0700acc8 0000006c T CTRPluginFramework::File::GetSize() const
0700ad34 000000dc T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
0700ae10 00000008 T CTRPluginFramework::File::IsOpen() const
0700ae18 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700ae2c 00000044 T CTRPluginFramework::File::File()
0700ae2c 00000044 T CTRPluginFramework::File::File()
0700ae70 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af04 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700afd8 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b05c 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b0fc 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700b204 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b204 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b270 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700b2b8 00000014 T CTRPluginFramework::Time::Time()
0700b2b8 00000014 T CTRPluginFramework::Time::Time()
0700b2cc 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700b2ec 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700b304 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700b30c 00000028 T CTRPluginFramework::Seconds(float)
0700b334 00000010 T CTRPluginFramework::Milliseconds(int)
0700b344 00000008 T CTRPluginFramework::Microseconds(long long)
0700b34c 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b360 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b374 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b388 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b3a0 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700b3ec 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700b404 00000010 T CTRPluginFramework::System::IsNew3DS()
0700b414 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700b428 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700b444 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700b460 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700b47c 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700b498 0000002c T CTRPluginFramework::Controller::Update()
0700b4c4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700b53c 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b598 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700b5f4 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700b650 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700b694 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700b714 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b7c8 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b904 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700b93c 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700b958 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700bbac 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bbac 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bbf0 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700c330 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c338 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c37c 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700c488 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700c4f0 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700c50c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700c548 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700c56c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c590 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700c608 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700c638 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700c744 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700c910 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700cbf0 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700ccbc 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700cd78 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700ce34 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700ce90 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700cee0 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700cf60 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700d130 00000004 T CTRPluginFramework::Preferences::Initialize()
0700d134 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700d220 00000010 T CTRPluginFramework::Glyph::Width() const
0700d230 00000060 T CTRPluginFramework::Font::Initialize()
0700d290 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700d5e4 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700d8e8 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700d9f4 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700da5c 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700da7c 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700daac 00000020 W CTRPluginFramework::Renderer::GetContext()
0700dacc 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700db2c 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700dc94 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700de00 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700dea0 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700e088 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700e0b8 00000028 T CTRPluginFramework::Window::~Window()
0700e0b8 00000028 T CTRPluginFramework::Window::~Window()
0700e0e0 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e0e0 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e180 00000064 T CTRPluginFramework::Window::Draw() const
0700e1e4 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700e2bc 00000018 T CTRPluginFramework::Window::DrawButton() const
0700e2d4 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700e2ec 00000018 T CTRPluginFramework::Window::MustClose() const
0700e304 0000002c T CTRPluginFramework::Window::Close() const
0700e330 00000004 T CTRPluginFramework::Window::GetRect() const
0700e334 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700e360 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700e408 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700e538 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700e604 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700e750 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e894 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e8cc 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700ea6c 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700ec30 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700ee64 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700eed4 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700ef40 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700ef54 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700ef78 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700ef94 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700efc4 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700eff4 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700f01c 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700f044 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700f064 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700f0a0 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700f0e8 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700f12c 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700f248 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700f268 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700f2d8 00000038 t __tls_init
0700f2d8 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700f310 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700f34c 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f3c0 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f42c 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f4b4 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f548 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f5d8 00000008 W CTRPluginFramework::Drawable::operator()()
0700f5e0 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0700f5e4 000002f0 T CTRPluginFramework::TextBox::Draw()
0700f8d4 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f8d4 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f968 0000000c T CTRPluginFramework::TextBox::Open() const
0700f974 0000000c T CTRPluginFramework::TextBox::Close() const
0700f980 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0700f988 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0700fbd0 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0700fbdc 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0700fc74 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0700fd28 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0700fd80 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0700fdb0 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0700fe6c 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
0700ff28 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
070100f0 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070100f0 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010234 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701031c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
07010394 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
07010404 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07010428 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0701044c 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0701044c 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0701048c 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07010494 00000008 T CTRPluginFramework::BMPImage::Width() const
0701049c 00000008 T CTRPluginFramework::BMPImage::Height() const
070104a4 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070104ac 00000010 T CTRPluginFramework::BMPImage::data() const
070104bc 0000001c T CTRPluginFramework::BMPImage::end() const
070104d8 00000010 W CTRPluginFramework::BMPImage::DataClear()
070104e8 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
070104e8 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
07010590 0000003c T CTRPluginFramework::BMPImage::Unload()
070105cc 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
07010708 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07010710 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07010960 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07010b34 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07010b7c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07010bac 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07010c80 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
07010d00 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07010d24 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07010e40 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010e40 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010e94 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
070111b4 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070111b4 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011200 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0701124c 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0701155c 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0701161c 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
0701174c 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
070118b8 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
070118f8 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
070118f8 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
07011918 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07011a88 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07011b7c 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07011c10 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07011cb8 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07011f44 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011f44 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011f88 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07011fdc 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
07012164 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07012210 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07012250 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
070128d0 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012a78 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07012a78 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07012aa4 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012aa4 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012ac4 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07012b74 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07012bd0 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012bd0 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012c54 0000000c T CTRPluginFramework::OSDImpl::Lock()
07012c60 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07012c7c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07012c88 000000cc T CTRPluginFramework::OSDImpl::Draw()
07012d54 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07012e2c 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07012e58 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07012ea0 0000020c T CTRPluginFramework::InstallOSD()
070130ac 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
070130f4 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070131cc 00000108 T CTRPluginFramework::OSDImpl::Update()
070132d4 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0701395c 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070139c4 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07013a30 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013a30 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013ba8 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013ba8 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013d00 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07013d78 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
0701402c 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
070141c8 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
070143e8 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07014414 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07014450 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701448c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
070144c8 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07014504 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07014540 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701456c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
070145a8 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
070145e4 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07014620 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701465c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07014688 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
070146c4 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
070146f0 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701471c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
07014758 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07014784 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
070147c0 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070147ec 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07014820 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701485c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07014888 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
070148c4 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070148f0 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701491c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07014948 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07014974 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
070149a0 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
070149cc 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070149f8 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07014a24 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07014a60 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07014a8c 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
07014b1c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014b1c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014b3c 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014b3c 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014c1c 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07014c24 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014c24 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014cb8 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07014cd8 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07014e60 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014e80 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07014e9c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07014eb8 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07014ec0 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014ec8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014ec8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014ee8 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07014fcc 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
070156c8 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07015720 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07015804 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07015840 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07015970 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07015aac 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015b64 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015c6c 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015c6c 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015cf0 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07015de4 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07015f1c 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
070160b4 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
070160b4 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
070161b0 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070161b0 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016350 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
070163c8 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070163c8 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070164a4 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070164a4 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070165bc 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
070165f8 00000058 T CTRPluginFramework::Menu::CloseAll()
07016650 00000030 T CTRPluginFramework::Menu::~Menu()
07016650 00000030 T CTRPluginFramework::Menu::~Menu()
07016680 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701668c 00000008 T CTRPluginFramework::Menu::GetFolder() const
07016694 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701669c 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
070166dc 00000384 T CTRPluginFramework::Menu::Draw() const
07016a60 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
07016aec 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07016b78 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07016da0 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07016f14 00000068 T CTRPluginFramework::Menu::ShowNote()
07016f7c 00000008 T CTRPluginFramework::Menu::CloseNote()
07016f84 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07016f8c 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07016fcc 00000044 T CTRPluginFramework::Menu::Pop()
07017010 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
070170d4 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701718c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07017194 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07017194 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
070171bc 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
070171d8 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070171d8 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070172ac 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070172c8 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070172c8 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017380 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017380 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701743c 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07017450 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
070174a0 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
070174b8 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
070174dc 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
07017584 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07017594 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070175b8 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07017618 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07017628 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07017638 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07017648 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
070176d8 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070177f4 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
07017864 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07017908 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07017934 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07017934 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07017964 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07017964 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070179d0 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07017b24 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07017b60 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017b60 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017ccc 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07017d24 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017dd8 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017eb8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07017f30 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07017f30 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070183f4 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07018400 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07018720 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07018828 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07018c7c 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07018d98 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07018e24 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07018e60 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07018e8c 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07018f5c 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07018fdc 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07019058 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
070190dc 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07019138 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07019178 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
070192a8 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
070195e4 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070197f8 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07019810 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07019824 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07019838 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0701984c 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07019988 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0701998c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07019990 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
070199a8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
070199c0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
070199d8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070199f0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07019a08 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07019a20 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07019a38 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07019a50 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07019a68 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07019aac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019b24 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07019b88 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07019c20 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07019dc4 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019f48 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019ff4 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a118 0000005c t CTRPluginFramework::Reboot()
0701a174 00000064 t CTRPluginFramework::Shutdown()
0701a1d8 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0701a3cc 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
0701adcc 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701adcc 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701af5c 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0701b078 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0701b104 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0701b144 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701b2b4 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701b360 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
0701b978 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701b9b4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701b9f0 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701ba00 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701ba00 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bad8 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701bad8 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701bb14 0000001c T CTRPluginFramework::SubMenu::operator()()
0701bb30 00000200 T CTRPluginFramework::SubMenu::Draw()
0701bd30 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0701bdf4 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701bdfc 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701be18 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bfbc 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701c008 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
0701c008 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
0701c00c 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
0701c010 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
0701c014 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701c1b0 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701c2ac 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701c3e8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701c460 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c6b0 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701c904 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701cb00 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701cce0 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701ccfc 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701cdb8 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701cdd4 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701ce44 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701ce74 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701ceb0 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701cf58 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701cf8c 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701cfbc 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701d048 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701d0e0 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701d1ac 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701d268 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701d318 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701d4ac 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701d4bc 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701d4cc 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701d4dc 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d4dc 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d750 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701d794 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701d95c 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701da20 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701da78 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701db5c 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701dccc 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701de50 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701de7c 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701de7c 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701dee4 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701df0c 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701e060 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701e0d4 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701e274 00000160 T CTRPluginFramework::HexEditor::_Update()
0701e3d4 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701e674 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701e688 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e688 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e6b0 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e6cc 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701e7e4 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e7e4 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e8b4 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e8b4 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e988 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701e990 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701e9a4 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701e9b0 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701e9b8 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701e9dc 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701ea0c 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701ea28 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701ea90 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701ea90 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701eab0 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701eacc 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701eacc 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701eb60 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb60 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ebc0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ebc0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ec20 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701ec24 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701ec9c 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701ed5c 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701ed90 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701f188 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701f1a0 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701f464 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f464 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f624 00000158 T CTRPluginFramework::GuideReader::Draw()
0701f77c 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701f7f0 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701f858 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701f858 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701f8a0 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701f8ec 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701f8f8 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701f924 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701f980 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701fa08 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701fa6c 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701fa6c 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701facc 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701facc 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fc78 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fc78 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fe34 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fe34 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fe98 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701fea0 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701fea8 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701feb0 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701feb8 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701fec0 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
07020024 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0702047c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0702050c 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0702058c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07020610 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07020770 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
070209f0 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07020f5c 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07020fc4 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07021014 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07021084 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0702108c 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
07021150 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0702132c 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07021390 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
070213bc 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
070213bc 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
070213dc 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
070214a8 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
07021564 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
07021628 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07021b94 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07022104 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
070221bc 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07022c10 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07022cc8 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702390c 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07023950 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
07023a0c 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07023bd0 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
07023c20 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07023c78 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07023cc0 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07023fe4 00000254 T CTRPluginFramework::KeyboardImpl::Run()
07024238 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070242b0 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
070242c4 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
070242e8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
07024370 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
07024480 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070244dc 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
07024574 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07024574 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070247c4 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
070247f8 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702484c 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07024870 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07024898 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07024974 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07024a98 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07024c64 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024c64 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024c8c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07024e04 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07024f80 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070250e8 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
07025124 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0702526c 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0702529c 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07025370 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07025570 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
070255e8 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
070256b0 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07025868 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07025a10 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07025a88 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
07025ae4 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07025bfc 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07025c60 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07025dcc 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07025dcc 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07026224 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
070265e0 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07026650 000000f4 t CTRPluginFramework::ClearSearchFolder()
07026744 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07026778 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
070269a0 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
070269c8 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07026a38 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07026b00 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07026b3c 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07026da4 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07026e88 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07026ec8 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07026ef8 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07026fcc 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07027258 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07027610 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
07027668 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07027668 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07027694 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
070276a0 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
070276ac 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07027808 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07027844 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
07027850 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
0702785c 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
0702787c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07027a18 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07027a74 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07027bd0 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07027be8 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07027d0c 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07027dd0 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07027f80 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07028044 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
070280c4 00000044 T CTRPluginFramework::Search::UpdateProgress()
07028108 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0702829c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
07028314 00000008 T CTRPluginFramework::Search::GetHeader() const
0702831c 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07028364 0000000c T CTRPluginFramework::Search::GetType() const
07028370 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07028388 00000070 T CTRPluginFramework::Search::WriteHeader()
070283f8 00000058 T CTRPluginFramework::Search::WriteResults()
07028450 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0702849c 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
070286dc 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070286dc 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702891c 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070289e4 00000088 T CTRPluginFramework::Search::CreateIndexTable()
07028a6c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028a6c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028c14 00000080 T CTRPluginFramework::Search::Cancel()
07028c94 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07028dac 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07028e70 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07028f30 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07028fa8 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07029210 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
070294a0 00000048 W CTRPluginFramework::Search::~Search()
070294a0 00000048 W CTRPluginFramework::Search::~Search()
070294e8 00000044 T CTRPluginFramework::Search32::~Search32()
070294e8 00000044 T CTRPluginFramework::Search32::~Search32()
0702952c 0000001c T CTRPluginFramework::Search32::~Search32()
07029548 0000001c W CTRPluginFramework::Search::~Search()
07029564 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07029564 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0702978c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702978c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070297ac 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070297ac 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07029824 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0702997c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070299c8 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07029b0c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07029c50 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07029c80 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07029d44 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07029d80 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07029db8 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07029e98 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029ee4 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0702a1fc 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0702a374 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702a660 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
0702a804 0000002c T CTRPluginFramework::Screenshot::Initialize()
0702a830 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0702a8dc 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702a970 0000003c T CTRPluginFramework::SystemImpl::Status()
0702a9ac 000000c8 T CTRPluginFramework::HookManager::Init()
0702aa74 00000018 T CTRPluginFramework::HookManager::Lock()
0702aa8c 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
0702ab34 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
0702ab94 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702ab94 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702abcc 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702abcc 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ac04 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702ac4c 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0702ad58 000000d4 T CTRPluginFramework::Scheduler::Initialize()
0702ae2c 00000050 T CTRPluginFramework::Scheduler::Exit()
0702ae7c 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702ae7c 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702aec4 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
0702af30 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0702b000 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0702b030 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
0702b04c 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702b154 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0702b16c 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b16c 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b1b0 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
0702b204 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0702b2e4 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
0702b41c 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0702b4b8 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0702b4e8 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0702b4f0 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b554 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b5b8 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b628 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b69c 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b70c 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
0702b7dc 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702b8a0 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0702b8fc 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
0702b9a0 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0702b9f8 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702bab4 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0702bb8c 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
0702bbf4 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0702bbfc 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0702bc04 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0702bc0c 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0702bc28 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702bc44 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0702bc9c 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0702bccc 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0702bd28 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0702bda0 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702bdc4 00000004 t addrMapNodeDestructor(rbtree_node*)
0702bdc8 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0702bef8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0702bf00 00000070 T CTRPluginFramework::Heap::Free(void*)
0702bf70 0000000c T CTRPluginFramework::Heap::SpaceFree()
0702bf7c 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702bfac 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702c0b0 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702c28c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c28c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c350 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702c3b0 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702c3bc 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c3fc 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702c40c 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c424 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702c438 00000004 T Kernel::Initialize()
0702c43c 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702c454 0000000c T KProcess::GetCurrent()
0702c460 00000024 T KProcess::PatchCore2Access()
0702c484 0000002c T KProcess::PatchCategory(unsigned long)
0702c4b0 00000014 T KProcess__PatchCategory
0702c4c4 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702c4f0 00000014 T KProcess__PatchMaxPriority
0702c504 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702c588 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702c5bc 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c5bc 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c5dc 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702c6c0 00000018 T IsPaused
0702c6d8 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702c714 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702c730 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702c74c 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702c7b4 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702c830 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702c8cc 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702c97c 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702ca44 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702cb18 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702cbb0 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702cc0c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cc0c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cc9c 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702cdfc 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702ce38 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702d0d4 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702d1cc 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702d1d4 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702d200 00000034 W MemPool::DelBlock(MemBlock*)
0702d234 0000005c T MemPool::CoalesceRight(MemBlock*)
0702d290 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702d3a8 000000fc T MemPool::Deallocate(MemChunk const&)
0702d4a4 00000020 T MemPool::GetFreeSpace()
0702d4c4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702d4e8 00000004 t addrMapNodeDestructor(rbtree_node*)
0702d4ec 00000154 T vramMemAlign
0702d640 00000008 T vramAlloc
0702d648 00000070 T vramFree
0702d6b8 00000030 t _GLOBAL__sub_I_vramMemAlign
0702d6e8 000001d8 T threadCreate
0702d8c0 0000002c T threadFree
0702d8ec 00000024 T threadJoin
0702d910 00000020 T threadGetCurrent
0702d930 0000003c T threadExit
0702d96c 0000003c t _thread_begin
0702d9a8 00000050 T srvExit
0702d9f8 00000034 T srvRegisterClient
0702da2c 00000064 T srvInit
0702da90 00000068 T srvGetServiceHandleDirect
0702daf8 00000004 T srvGetServiceHandle
0702dafc 00000034 T srvPublishToSubscriber
0702db30 00000034 T errfExit
0702db64 00000058 T errfInit
0702dbbc 0000003c T ERRF_Throw
0702dbf8 00000090 T ERRF_ExceptionHandler
0702dc88 000000a8 T fontEnsureMapped
0702dd30 00000110 T fontGlyphIndexFromCodePoint
0702de40 00000074 T fontGetCharWidthInfo
0702deb4 0000000c T __sync_init
0702dec0 00000018 T __sync_fini
0702ded8 00000018 T LightLock_Init
0702def0 0000008c T LightLock_Lock
0702df7c 00000034 T LightLock_TryLock
0702dfb0 00000050 T LightLock_Unlock
0702e000 00000018 T RecursiveLock_Init
0702e018 00000030 T RecursiveLock_Lock
0702e048 00000044 T RecursiveLock_TryLock
0702e08c 00000034 T RecursiveLock_Unlock
0702e0c0 00000030 T LightEvent_Init
0702e0f0 00000060 T LightEvent_Clear
0702e150 00000064 T LightEvent_Pulse
0702e1b4 000000b4 T LightEvent_Signal
0702e268 000000a8 T LightEvent_Wait
0702e310 000000a0 T cfguInit
0702e3b0 00000034 T cfguExit
0702e3e4 00000044 T CFGU_GetConfigInfoBlk2
0702e428 00000014 T CFGU_GetSystemLanguage
0702e43c 00000028 t fsSession
0702e464 00000044 t fsSessionForArchive
0702e4a8 00000038 T fsExit
0702e4e0 00000028 T FSUSER_Initialize
0702e508 000000b0 T fsInit
0702e5b8 00000080 T FSUSER_OpenFile
0702e638 00000068 T FSUSER_DeleteFile
0702e6a0 000000a4 T FSUSER_RenameFile
0702e744 00000068 T FSUSER_DeleteDirectoryRecursively
0702e7ac 00000080 T FSUSER_CreateFile
0702e82c 00000070 T FSUSER_CreateDirectory
0702e89c 000000a4 T FSUSER_RenameDirectory
0702e940 0000006c T FSUSER_OpenDirectory
0702e9ac 00000074 T FSUSER_OpenArchive
0702ea20 00000058 T FSFILE_Read
0702ea78 00000060 T FSFILE_Write
0702ead8 00000038 T FSFILE_GetSize
0702eb10 00000028 T FSFILE_SetSize
0702eb38 0000003c T FSFILE_Close
0702eb74 00000024 T FSFILE_Flush
0702eb98 00000054 T FSDIR_Read
0702ebec 0000003c T FSDIR_Close
0702ec28 00000104 T aptSendCommand
0702ed2c 0000006c T APT_CheckNew3DS
0702ed98 00000048 T APT_GetSharedFont
0702ede0 000000a0 T amInit
0702ee80 00000034 T amExit
0702eeb4 00000088 T acInit
0702ef3c 00000034 T acExit
0702ef70 000000bc T hidExit
0702f02c 00000034 T hidCheckSectionUpdateTime
0702f060 00000174 T hidScanInput
0702f1d4 00000010 T hidKeysHeld
0702f1e4 00000010 T hidKeysDown
0702f1f4 00000010 T hidKeysUp
0702f204 00000018 T hidTouchRead
0702f21c 00000090 T HIDUSER_GetHandles
0702f2ac 00000174 T hidInit
0702f420 000000e8 t gspEventThreadMain
0702f508 000000a0 T gspInitEventHandler
0702f5a8 00000040 T gspExitEventHandler
0702f5e8 0000008c T gspExit
0702f674 0000005c T gspWaitForEvent
0702f6d0 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702f734 000000dc T gspInit
0702f810 00000034 T irrstCheckSectionUpdateTime
0702f844 00000070 T irrstScanInput
0702f8b4 0000001c T irrstKeysHeld
0702f8d0 00000050 T IRRST_GetHandles
0702f920 00000034 T IRRST_Initialize
0702f954 00000128 T irrstInit
0702fa7c 0000002c T IRRST_Shutdown
0702faa8 000000a8 T irrstExit
0702fb50 00000028 t __ctru_get_reent
0702fb78 000000ec T __system_initSyscalls
0702fc64 000000ac T utf8_to_utf16
0702fd10 00000138 T decode_utf8
0702fe48 0000005c T decode_utf16
0702fea4 000000d4 T utf16_to_utf8
0702ff78 000000e0 T encode_utf8
07030058 00000054 T encode_utf16
070300ac 00000054 T rbtree_find
07030100 00000014 t is_black
07030114 000002bc T rbtree_remove
070303d0 00000050 T rbtree_node_next
07030420 00000090 T rbtree_rotate
070304b0 00000174 t do_insert
07030624 00000008 T rbtree_insert
0703062c 00000010 T rbtree_init
0703063c T LoadCROHooked
07030650 T AR__ExecuteRoutine
07030678 t stackBak
07030680 T svcCustomBackdoor
07030688 T svcConvertVAToPA
07030690 T svcFlushDataCacheRange
07030698 T svcMapProcessMemoryEx
070306ac T svcUnmapProcessMemoryEx
070306b4 T svcControlProcess
070306bc T svcQueryMemory
070306ec T svcCreateThread
0703070c T svcExitThread
07030714 T svcSleepThread
0703071c T svcSetThreadPriority
07030724 T svcCreateEvent
07030738 T svcSignalEvent
07030740 T svcClearEvent
07030748 T svcMapMemoryBlock
07030750 T svcUnmapMemoryBlock
07030758 T svcCreateAddressArbiter
0703076c T svcArbitrateAddress
07030784 T svcCloseHandle
0703078c T svcWaitSynchronization
07030794 T svcWaitSynchronizationN
070307bc T svcGetSystemTick
070307c4 T svcGetSystemInfo
070307dc T svcGetProcessInfo
070307f4 T svcConnectToPort
07030808 T svcSendSyncRequest
07030810 T svcOpenProcess
07030824 T svcGetProcessId
07030838 T svcBreak
07030840 T svcInvalidateProcessDataCache
07030848 T svcFlushProcessDataCache
07030850 T svcKernelSetState
07030858 T svcQueryProcessMemory
0703087c 00000030 t CTRPluginFramework::GetCurrentTime()
070308ac 00000014 T CTRPluginFramework::Clock::Clock()
070308ac 00000014 T CTRPluginFramework::Clock::Clock()
070308c0 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
070308c0 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
070308c8 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
07030900 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07030930 00000044 T CTRPluginFramework::Clock::Restart()
07030974 00000014 T CTRPluginFramework::Touch::IsDown()
07030988 00000028 T CTRPluginFramework::Touch::GetPosition()
070309b0 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070309b0 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07030a34 00000048 T CTRPluginFramework::Task::~Task()
07030a34 00000048 T CTRPluginFramework::Task::~Task()
07030a7c 00000030 T CTRPluginFramework::Task::Start() const
07030aac 00000044 T CTRPluginFramework::Task::Wait() const
07030af0 00000014 T CTRPluginFramework::Task::Status() const
07030b04 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030b04 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030b2c 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030bac 00000048 T CTRPluginFramework::LineWriter::Flush()
07030bf4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030bf4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030c10 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030c7c 00000018 T CTRPluginFramework::LineWriter::Close()
07030c94 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030d58 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
07030dd0 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703110c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0703110c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0703112c 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070311b4 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070311b4 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070312e0 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0703131c 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703141c 00000084 T CTRPluginFramework::ARCode::Update()
070314a0 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070314a0 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070314c4 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
070314ec 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070314ec 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070315a4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070315a4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070315d8 00000040 T CTRPluginFramework::ARCodeContext::Update()
07031618 00000090 T CTRPluginFramework::ARCodeContext::Clear()
070316a8 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07031780 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07031780 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
070317a0 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
070317b8 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070318ac 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
070318c8 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070319dc 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070319ec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
07031a64 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
07031a7c 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07031ad0 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031b14 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031b5c 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07032030 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07032030 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07032074 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07032074 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07032088 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
070320a8 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07032220 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
07032344 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07032a78 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07032ac8 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032ac8 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032b30 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032b4c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032b4c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032b98 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07032cb4 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07032d44 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07032e5c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07032ee4 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032f40 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032f40 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032fb8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032fb8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032fb8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032fb8 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07033008 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0703435c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703435c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070344f0 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
070347a4 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0703482c 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034870 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07034884 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
070348c0 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034a28 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034a64 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07034ac8 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07034aec 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07034b14 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034b14 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034b3c 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07034ebc 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07035540 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0703558c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07035644 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07035ab8 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07035f84 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0703607c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07036104 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07036140 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07036464 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
070364e0 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0703654c 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07036584 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07036600 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
070369cc 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07036bd0 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07036c70 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07036d2c 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07036de8 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07036e94 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07036f20 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07037098 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
070371ac 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07037254 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
070372bc 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0703734c 00000160 T ARM_Disasm::Decode01(unsigned long)
070374ac 00000028 T ARM_Disasm::Decode10(unsigned long)
070374d4 0000007c T ARM_Disasm::Decode11(unsigned long)
07037550 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
070375b8 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07037608 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07037720 000000c4 T ARM_Disasm::Decode00(unsigned long)
070377e4 00000030 T ARM_Disasm::Decode(unsigned long)
07037814 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
070378ec 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07037bd0 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07037ec0 00000020 T CTRPluginFramework::Button::~Button()
07037ec0 00000020 T CTRPluginFramework::Button::~Button()
07037ee0 0000001c T CTRPluginFramework::Button::~Button()
07037efc 00000040 T CTRPluginFramework::Button::operator()()
07037f3c 00000148 T CTRPluginFramework::Button::Draw()
07038084 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
070381d8 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070381d8 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070382fc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070382fc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703831c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703831c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070383b0 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070383b0 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070383c4 00000018 T CTRPluginFramework::Button::Enable(bool)
070383dc 00000010 T CTRPluginFramework::Button::Enable()
070383ec 00000010 T CTRPluginFramework::Button::Disable()
070383fc 00000010 T CTRPluginFramework::Button::Lock()
0703840c 00000010 T CTRPluginFramework::Button::Execute()
0703841c 00000018 T CTRPluginFramework::Button::SetState(bool)
07038434 00000010 T CTRPluginFramework::Button::GetState() const
07038444 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07038444 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07038458 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07038458 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07038478 00000024 T CTRPluginFramework::UIContainer::Draw()
0703849c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
070384d0 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07038594 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
070385d4 00000094 T CTRPluginFramework::ComboBox::Draw()
07038668 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07038668 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070386b4 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
070386d0 000000a8 T CTRPluginFramework::ComboBox::operator()()
07038778 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07038778 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070387c4 0000003c T CTRPluginFramework::ComboBox::Clear()
07038800 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038850 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070388d4 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070388d4 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070388d8 00000014 T CTRPluginFramework::FloatingButton::Draw()
070388ec 00000014 T CTRPluginFramework::FloatingButton::operator()()
07038900 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038914 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07038ad4 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038ad4 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038b14 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038b14 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038bd4 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07038c70 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07038d10 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07038d28 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07038d58 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038df8 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038df8 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038ea8 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038ea8 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038f54 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038f54 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038fd4 00000040 T CTRPluginFramework::TouchKey::Clear()
07039014 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07039014 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07039034 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07039050 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07039058 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
070390b8 00000060 T CTRPluginFramework::TouchKey::Draw()
07039118 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070391b4 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07039278 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07039278 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070393c8 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070393c8 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070393e8 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039404 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07039480 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
070394b8 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07039520 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07039618 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07039628 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07039638 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07039640 0000000c T CTRPluginFramework::NumericTextBox::Clear()
0703964c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0703964c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070396b4 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07039728 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
070397a0 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070397a0 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070397ec 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
070398ac 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
070399e4 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07039a0c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039a70 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07039d80 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07039e74 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703a0bc 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703a3e8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703a470 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
0703a508 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703a584 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703a638 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703a7c4 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703a80c 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703a954 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703aaac 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
0703ab90 00000030 W std::__cxx11::to_string(unsigned long)
0703abc0 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703abc0 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ac74 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0703acf8 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703b240 00000230 T CTRPluginFramework::SearchMenu::Update()
0703b470 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b980 000000e4 T CTRPluginFramework::Converter::Converter()
0703b980 000000e4 T CTRPluginFramework::Converter::Converter()
0703ba64 00000010 T CTRPluginFramework::Converter::Instance()
0703ba74 00000108 T CTRPluginFramework::Converter::_Draw()
0703bb7c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bb7c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bb90 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703bdac 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c230 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c6b8 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703cb34 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d15c 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703da68 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e378 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ec4c 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f88c 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040130 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040a6c 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041390 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704212c 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042d90 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070434d4 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070438dc 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043fbc 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704424c 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070444f4 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044784 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
070447b8 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044adc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07044b00 00000004 t addrMapNodeDestructor(rbtree_node*)
07044b04 000000d8 T mappableAlloc
07044bdc 00000050 T mappableFree
07044c2c 00000090 T __system_allocateHeaps
07044cbc 0000005c t getSysTime
07044d18 000000fc T __libctru_gtod
07044e14 00000008 T envGetHandle
07044e1c 00000004 T envDestroyHandles
07044e20 00000020 T __libctru_exit
07044e40 00000020 T __appExit
07044e60 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044e60 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044e8c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044e8c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044ea4 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07044fac 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
0704500c 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07045014 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07045038 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0704505c 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07045080 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
070450a8 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
070450d0 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
070450f8 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
070451c8 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0704703c 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
070470ac 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
070470cc 00000008 T __cxa_pure_virtual
070470d4 00000010 T __aeabi_atexit
070470e4 00000004 T operator new[](unsigned int)
070470e8 00000058 T operator new(unsigned int)
07047140 00000034 T __cxxabiv1::__terminate(void (*)())
07047174 00000018 T std::terminate()
0704718c 0000000c T __cxxabiv1::__unexpected(void (*)())
07047198 00000018 T std::unexpected()
070471b0 00000014 T std::get_terminate()
070471c4 00000014 T std::get_unexpected()
070471d8 0000000c T std::bad_alloc::what() const
070471e4 00000020 T std::bad_alloc::~bad_alloc()
070471e4 00000020 T std::bad_alloc::~bad_alloc()
07047204 0000002c T std::bad_alloc::~bad_alloc()
07047230 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07047398 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07047400 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
070474d8 000006f4 T __gxx_personality_v0
07047bcc 00000004 T operator delete[](void*)
07047bd0 00000014 T std::get_new_handler()
07047be4 0000005c T __cxa_guard_acquire
07047c40 0000000c T __cxa_guard_release
07047c4c 00000004 T std::exception::~exception()
07047c4c 00000004 T std::exception::~exception()
07047c50 00000004 T std::bad_exception::~bad_exception()
07047c50 00000004 T std::bad_exception::~bad_exception()
07047c54 0000000c T transaction clone for std::exception::what() const
07047c54 0000000c T std::exception::what() const
07047c60 0000000c T transaction clone for std::bad_exception::what() const
07047c60 0000000c T std::bad_exception::what() const
07047c6c 00000018 T std::bad_exception::~bad_exception()
07047c84 00000004 T operator delete(void*, unsigned int)
07047c88 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07047ce8 00000070 T __cxa_init_primary_exception
07047d58 00000054 T __cxa_throw
07047dac 000000b0 T __cxa_rethrow
07047e5c 000000cc T __cxa_begin_catch
07047f28 000000e0 T __cxa_end_catch
07048008 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
070480f4 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
070481a8 00000044 T __cxa_allocate_exception
070481ec 00000030 T __cxa_free_exception
0704821c 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704825c 00000004 T operator delete(void*)
07048260 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07048260 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07048280 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070482ac 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07048318 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070483f4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07048438 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07048450 00000014 T std::__detail::_List_node_base::_M_unhook()
07048464 0000002c T std::__throw_bad_alloc()
07048490 00000040 T std::__throw_logic_error(char const*)
070484d0 00000040 T std::__throw_invalid_argument(char const*)
07048510 00000040 T std::__throw_length_error(char const*)
07048550 00000040 T std::__throw_out_of_range(char const*)
07048590 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704860c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07048660 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07048674 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07048698 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
070486bc 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048774 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07048880 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
070488fc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070488fc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07048968 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07048968 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0704898c 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07048a58 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07048b68 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07048bd8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07048c44 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048c88 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048ca0 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07048dc4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07048dfc 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07049084 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
070490bc 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049108 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07049168 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070491fc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704920c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704921c 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07049248 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07049290 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
070492d8 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0704937c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0704938c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
070493f0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07049420 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704946c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0704951c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704951c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704954c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
070495c4 T __cxa_end_cleanup
070495d4 00000138 T __cxa_type_match
0704970c 000000b4 T __cxa_begin_cleanup
070497c0 000000b4 T __gnu_end_cleanup
07049874 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
070498e4 0000002c T __cxa_call_terminate
07049910 00000158 T __cxa_call_unexpected
07049a68 0000000c T __cxa_get_globals_fast
07049a74 0000000c T __cxa_get_globals
07049a80 00000004 T std::type_info::~type_info()
07049a80 00000004 T std::type_info::~type_info()
07049a84 00000008 T std::type_info::__is_pointer_p() const
07049a84 00000008 T std::type_info::__is_function_p() const
07049a8c 0000004c T std::type_info::operator==(std::type_info const&) const
07049ad8 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07049b34 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07049b48 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049b48 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049b68 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07049b94 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07049bfc 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07049c28 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07049c6c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049c6c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049c8c 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049cb8 00000008 T std::logic_error::what() const
07049cc0 00000064 T std::logic_error::~logic_error()
07049cc0 00000064 T std::logic_error::~logic_error()
07049d24 0000001c T std::logic_error::~logic_error()
07049d40 00000020 T std::invalid_argument::~invalid_argument()
07049d40 00000020 T std::invalid_argument::~invalid_argument()
07049d60 00000028 T std::invalid_argument::~invalid_argument()
07049d88 00000020 T std::length_error::~length_error()
07049d88 00000020 T std::length_error::~length_error()
07049da8 00000028 T std::length_error::~length_error()
07049dd0 00000020 T std::out_of_range::~out_of_range()
07049dd0 00000020 T std::out_of_range::~out_of_range()
07049df0 00000028 T std::out_of_range::~out_of_range()
07049e18 00000038 T std::logic_error::logic_error(char const*)
07049e18 00000038 T std::logic_error::logic_error(char const*)
07049e50 00000020 T std::invalid_argument::invalid_argument(char const*)
07049e50 00000020 T std::invalid_argument::invalid_argument(char const*)
07049e70 00000020 T std::length_error::length_error(char const*)
07049e70 00000020 T std::length_error::length_error(char const*)
07049e90 00000020 T std::out_of_range::out_of_range(char const*)
07049e90 00000020 T std::out_of_range::out_of_range(char const*)
07049eb0 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07049f1c 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07049f9c 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0704a094 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0704a118 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
0704a118 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
0704a188 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704a18c 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0704a1bc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a1bc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a200 000002bc T log2
0704a4bc 00000024 t with_errno
0704a4e0 00000048 T __math_divzero
0704a528 0000001c T __math_invalid
0704a548 0000015c T ceil
0704a6a4 000000b4 T ceilf
0704a758 0000016c T floor
0704a8c4 00000088 T roundf
0704a950 00000108 T sqrtf
0704aa58 00000008 T __ieee754_sqrtf
0704aa60 00000008 T matherr
0704aa68 0000002c T __aeabi_f2lz
0704aa68 0000002c T __fixsfdi
0704aa94 0000002c T __aeabi_d2lz
0704aa94 0000002c T __fixdfdi
0704aac0 00000040 T __aeabi_f2ulz
0704aac0 00000040 T __fixunssfdi
0704ab00 00000040 T __aeabi_d2ulz
0704ab00 00000040 T __fixunsdfdi
0704ab40 00000128 T __udivmoddi4
0704ac68 00000018 t selfrel_offset31
0704ac80 00000094 t search_EIT_table
0704ad14 00000040 t __gnu_unwind_get_pr_addr
0704ad54 0000011c t get_eit_entry
0704ae70 00000088 t restore_non_core_regs
0704aef8 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704af0c 00000004 t _Unwind_DebugHook
0704af10 00000064 t unwind_phase2
0704af74 0000014c t unwind_phase2_forced
0704b0c0 000000a4 T __gnu_Unwind_RaiseException
0704b164 00000024 T __gnu_Unwind_ForcedUnwind
0704b188 00000074 T __gnu_Unwind_Resume
0704b1fc 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704b21c 00000004 T _Unwind_Complete
0704b220 00000018 T _Unwind_DeleteException
0704b238 00000054 T _Unwind_VRS_Get
0704b28c 0000002c t _Unwind_GetGR
0704b2b8 00000054 T _Unwind_VRS_Set
0704b30c 0000002c t _Unwind_SetGR
0704b338 000000c0 T __gnu_Unwind_Backtrace
0704b3f8 00000448 t __gnu_unwind_pr_common
0704b840 00000008 T __aeabi_unwind_cpp_pr0
0704b848 00000008 W __aeabi_unwind_cpp_pr1
0704b850 00000008 W __aeabi_unwind_cpp_pr2
0704b858 000003dc T _Unwind_VRS_Pop
0704bc34 00000060 t next_unwind_byte
0704bc94 0000002c t _Unwind_GetGR.constprop.0
0704bcc0 00000004 t unwind_UCB_from_context
0704bcc4 000003c8 T __gnu_unwind_execute
0704c08c 00000048 T __gnu_unwind_frame
0704c0d4 00000010 T _Unwind_GetRegionStart
0704c0e4 0000001c T _Unwind_GetLanguageSpecificData
0704c100 00000008 T _Unwind_GetDataRelBase
0704c108 00000008 T _Unwind_GetTextRelBase
0704c110 00000010 T ctime
0704c120 00000014 T __cxa_atexit
0704c134 0000000c T __errno
0704c140 0000007c T __libc_init_array
0704c1bc 00000018 T isspace
0704c1d4 00000018 T isxdigit
0704c1ec 0000001c T localtime
0704c208 00000378 T localtime_r
0704c580 00000020 T memalign
0704c5a0 0000014c T _memalign_r
0704c6ec 00000018 T malloc
0704c704 00000018 T free
0704c71c 000007d8 T _malloc_r
0704cef4 00000100 T memchr
0704cff4 000000fc T memcmp
0704d0f0 00000118 T memcpy
0704d208 00000154 T memmove
0704d35c 00000114 T memset
0704d470 0000000c T __malloc_lock
0704d47c 0000000c T __malloc_unlock
0704d488 000000d4 T snprintf
0704d55c 00000064 T sprintf
0704d5c0 00000008 T __seofread
0704d5c8 00000154 t iso_year_adjust
0704d71c 00001138 t __strftime
0704e854 00000020 T strftime
0704e874 0000005c T strlen
0704e8d0 0000010c T strncmp
0704e9dc 000000e0 T strncpy
0704eabc 00000054 t sulp
0704eb10 000013c4 T _strtod_l
0704fed8 000000bc T strtof
0704ff98 0000025c t _strtoull_l.isra.0
070501f4 00000004 T _strtoull_r
070501f8 000001d0 t _strtoul_l.isra.0
070503c8 00000004 T _strtoul_r
070503cc 00000028 T strtoul
070503f4 00000620 t get_arg
07050a18 000035c0 T _svfprintf_r
07053fd8 0000003c T time
07054014 00000224 T __tzcalc_limits
07054238 0000000c T __tz_lock
07054244 0000000c T __tz_unlock
07054250 00000010 T _tzset_unlocked
07054260 0000046c T _tzset_unlocked_r
070546cc 000000a4 T _vsnprintf_r
07054770 00000038 T vsnprintf
070547a8 00000054 T _wcrtomb_r
070547fc 00000020 T _wcsrtombs_r
0705481c 0000000c T abs
07054828 0000001c T asctime
07054844 00000078 T asctime_r
070548bc 000000b0 T __register_exitproc
0705496c 000001c8 t quorem
07054b38 000012ec T _dtoa_r
07055e24 000000f8 T _malloc_trim_r
07055f1c 000002e4 T _free_r
07056200 000000ec t rshift
070562ec 00000828 T __gethex
07056b14 00000060 T __match
07056b74 00000254 T __hexnan
07056dc8 000000c8 T _findenv_r
07056e90 00000018 T _getenv_r
07056ea8 0000000c T __gettzinfo
07056eb4 0000027c T gmtime_r
07057130 0000000c T labs
0705713c 0000000c T _localeconv_r
07057148 00000010 T __locale_mb_cur_max
07057158 000002fc T __utf8_mbtowc
07057454 00000088 T _Balloc
070574dc 0000001c T _Bfree
070574f8 000000e0 T __multadd
070575d8 000000e4 T __s2b
070576bc 00000058 T __hi0bits
07057714 0000009c T __lo0bits
070577b0 00000020 T __i2b
070577d0 000001c4 T __multiply
07057994 00000100 T __pow5mult
07057a94 000000f4 T __lshift
07057b88 0000005c T __mcmp
07057be4 00000168 T __mdiff
07057d4c 00000074 T __ulp
07057dc0 000000d4 T __b2d
07057e94 00000100 T __d2b
07057f94 00000084 T __ratio
07058018 0000006c T __copybits
07058084 00000078 T __any_on
070580fc 0000000c T nanf
07058108 000000a8 T frexp
070581b0 00000064 T siprintf
07058214 00000074 T siscanf
07058288 00000010 T nan
07058298 000000d4 T sniprintf
0705836c 000000f0 T strcpy
0705845c 000001bc t _strtol_l.isra.0
07058618 00000004 T _strtol_r
0705861c 00000620 t get_arg
07058c3c 00000188 T __ssprint_r
07058dc4 0000248c T _svfiprintf_r
0705b250 00000048 t get_arg
0705b298 000000e4 T _sungetc_r
0705b37c 0000006c T __ssrefill_r
0705b3e8 000000c8 T _sfread_r
0705b4b0 00002234 T __ssvfiscanf_r
0705d6e4 000000a4 T __submore
0705d788 00000184 T _wcsnrtombs_l
0705d90c 0000004c T _wcsnrtombs_r
0705d958 000000e8 T __utf8_wctomb
0705da40 00000094 T _calloc_r
0705dad4 0000000c T __env_lock
0705dae0 0000000c T __env_unlock
0705daec 00000008 T iswspace
0705daf4 00000060 T _mbrtowc_r
0705db54 00000020 T realloc
0705db74 000004bc T _realloc_r
0705e030 000000cc T __sccl
0705e0fc 0000025c t _strtoll_l.isra.0
0705e358 00000004 T _strtoll_r
0705e35c 0000003c T iswspace_l
0705e398 000001e0 t __jp2uc
0705e578 00000094 T _jp2uc_l
0705e60c 00000084 T category
0705e690 0000002c T _gettimeofday_r
0705e6bc 00000070 T _sbrk_r
0705e72c 00000018 T __libc_lock_acquire
0705e744 00000018 T __libc_lock_release
0705e75c 00000018 T __libc_lock_acquire_recursive
0705e774 00000018 T __libc_lock_release_recursive
0705e78c 00000028 T __getreent
0705e7b4 T _fini
0705e7cc 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0705e9b4 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0705e9c0 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0705e9d4 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0705e9f0 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0705ea00 00000030 r ._190
0705ea30 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0705ea40 00000090 r ._188
0705ead0 00000010 r ._189
0705eb1c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705eb3c 00000a00 r font
0705f53c 0000001c R vtable for CTRPluginFramework::TextBox
0705f578 00000058 r CTRPluginFramework::g_OSDPattern
0705f600 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705f614 00000038 r CTRPluginFramework::stable
0705f64c 00000038 r CTRPluginFramework::ktable
0705f684 00000048 r CTRPluginFramework::g_ctrpf
0705f6cc 00000030 r CTRPluginFramework::g_byme
0705f728 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705f740 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705f758 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705f770 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705f788 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705f790 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705f7ac 00000038 R vtable for CTRPluginFramework::Search
0705f7e4 00000038 R vtable for CTRPluginFramework::Search32
0705f81c 00000005 r CSWTCH.74
0705f824 00000004 R Search15_array_length
0705f828 00000384 r Search15_array
0705fbac 00000004 R UnCheckedCheckbox_array_length
0705fbb0 00000384 r UnCheckedCheckbox_array
0705ff34 00000004 R Unsplash15_array_length
0705ff38 00000384 r Unsplash15_array
070602bc 00000004 R Plus25_array_length
070602c0 000009c4 r Plus25_array
07060c84 00000004 R GameControllerFilled25_array_length
07060c88 000009c4 r GameControllerFilled25_array
0706164c 00000004 R About15_array_length
07061650 00000384 r About15_array
070619d4 00000004 R Trash25_array_length
070619d8 000009c4 r Trash25_array
0706239c 00000004 R Cut25_array_length
070623a0 000009c4 r Cut25_array
07062d64 00000004 R CloseWindow20_array_length
07062d68 00000640 r CloseWindow20_array
070633a8 00000004 R AddFavoriteFilled25_array_length
070633ac 000009c4 r AddFavoriteFilled25_array
07063d70 00000004 R ClearSymbolFilled15_array_length
07063d74 00000384 r ClearSymbolFilled15_array
070640f8 00000004 R ClipboardFilled25_array_length
070640fc 000009c4 r ClipboardFilled25_array
07064ac0 00000004 R CheckedCheckbox_array_length
07064ac4 00000384 r CheckedCheckbox_array
07064e48 00000004 R CutFilled25_array_length
07064e4c 000009c4 r CutFilled25_array
07065810 00000004 R CapsLockOn15_array_length
07065814 00000384 r CapsLockOn15_array
07065b98 00000004 R TrashFilled25_array_length
07065b9c 000009c4 r TrashFilled25_array
07066560 00000004 R RAM15_array_length
07066564 00000384 r RAM15_array
070668e8 00000004 R More15_array_length
070668ec 00000384 r More15_array
07066c70 00000004 R InfoFilled25_array_length
07066c74 000009c4 r InfoFilled25_array
07067638 00000004 R CloseWindowFilled20_array_length
0706763c 00000640 r CloseWindowFilled20_array
07067c7c 00000004 R HandCursor15_array_length
07067c80 00000384 r HandCursor15_array
07068004 00000004 R EnterKey15_array_length
07068008 00000384 r EnterKey15_array
0706838c 00000004 R Duplicate25_array_length
07068390 000009c4 r Duplicate25_array
07068d54 00000004 R Settings15_array_length
07068d58 00000384 r Settings15_array
070690dc 00000004 R File15_array_length
070690e0 00000384 r File15_array
07069464 00000004 R AddFavorite25_array_length
07069468 000009c4 r AddFavorite25_array
07069e2c 00000004 R Edit25_array_length
07069e30 000009c4 r Edit25_array
0706a7f4 00000004 R DuplicateFilled25_array_length
0706a7f8 000009c4 r DuplicateFilled25_array
0706b1bc 00000004 R Save25_array_length
0706b1c0 000009c4 r Save25_array
0706bb84 00000004 R Clipboard25_array_length
0706bb88 000009c4 r Clipboard25_array
0706c54c 00000004 R Info25_array_length
0706c550 000009c4 r Info25_array
0706cf14 00000004 R EditFilled25_array_length
0706cf18 000009c4 r EditFilled25_array
0706d8dc 00000004 R KeyboardFilled25_array_length
0706d8e0 000009c4 r KeyboardFilled25_array
0706e2a4 00000004 R PlusFilled25_array_length
0706e2a8 000009c4 r PlusFilled25_array
0706ec6c 00000004 R Shutdown15_array_length
0706ec70 00000384 r Shutdown15_array
0706eff4 00000004 R ClearSymbol15_array_length
0706eff8 00000384 r ClearSymbol15_array
0706f37c 00000004 R Maintenance15_array_length
0706f380 00000384 r Maintenance15_array
0706f704 00000004 R Controller15_array_length
0706f708 00000384 r Controller15_array
0706fa8c 00000004 R Grid15_array_length
0706fa90 00000384 r Grid15_array
0706fe14 00000004 R Keyboard25_array_length
0706fe18 000009c4 r Keyboard25_array
070707dc 00000004 R CapsLockOnFilled15_array_length
070707e0 00000384 r CapsLockOnFilled15_array
07070b64 00000004 R UserManualFilled15_array_length
07070b68 00000384 r UserManualFilled15_array
07070eec 00000004 R Rocket40_array_length
07070ef0 00001900 r Rocket40_array
070727f0 00000004 R Star15_array_length
070727f4 00000384 r Star15_array
07072b78 00000004 R EnterKeyFilled15_array_length
07072b7c 00000384 r EnterKeyFilled15_array
07072f00 00000004 R GameController25_array_length
07072f04 000009c4 r GameController25_array
070738c8 00000004 R FolderFilled_array_length
070738cc 00000384 r FolderFilled_array
07073c50 00000004 R Restart15_array_length
07073c54 00000384 r Restart15_array
07074008 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07074024 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07074030 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
070740b0 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
070740c4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
070740cc 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
070740d4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
070740dc 00000040 r RegNames
0707411c 00000040 r cond_names
0707415c 00000010 r shift_names
0707416c 0000001c R vtable for CTRPluginFramework::Button
07074188 0000001c R vtable for CTRPluginFramework::ComboBox
070741a4 0000001c R vtable for CTRPluginFramework::FloatingButton
070741c0 0000001c R vtable for CTRPluginFramework::TouchKey
070741dc 0000001c R vtable for CTRPluginFramework::NumericTextBox
07076764 00000014 V vtable for CTRPluginFramework::MenuItem
07076e3c 0000001c V vtable for CTRPluginFramework::MenuEntryTools
070781fc 0000000c R typeinfo for std::bad_alloc
07078208 0000000d R typeinfo name for std::bad_alloc
07078218 00000014 R vtable for std::bad_alloc
07078250 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07078258 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07078260 0000000c R typeinfo for std::bad_exception
0707826c 00000008 R typeinfo for std::exception
07078274 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07078294 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
070782b8 00000012 R typeinfo name for std::bad_exception
070782cc 0000000d R typeinfo name for std::exception
070782dc 00000014 R vtable for std::bad_exception
070782f0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070782fc 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07078324 0000002c R vtable for __cxxabiv1::__si_class_type_info
07078480 00000008 R typeinfo for std::type_info
07078488 0000000d R typeinfo name for std::type_info
07078498 0000000c R typeinfo for __cxxabiv1::__class_type_info
070784a4 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070784c8 0000002c R vtable for __cxxabiv1::__class_type_info
070784f4 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07078500 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07078524 00000014 R vtable for __gnu_cxx::recursive_init_error
07078538 0000000c R typeinfo for std::logic_error
07078544 0000000c R typeinfo for std::length_error
07078550 0000000c R typeinfo for std::out_of_range
0707855c 0000000c R typeinfo for std::invalid_argument
07078568 00000010 R typeinfo name for std::logic_error
07078578 00000011 R typeinfo name for std::length_error
0707858c 00000011 R typeinfo name for std::out_of_range
070785a0 00000015 R typeinfo name for std::invalid_argument
070785b8 00000014 R vtable for std::logic_error
070785cc 00000014 R vtable for std::length_error
070785e0 00000014 R vtable for std::out_of_range
070785f4 00000014 R vtable for std::invalid_argument
070786d0 00000890 R __log2_data
07078f60 00000004 R _global_impure_ptr
07078f64 00000060 R __month_lengths
07079050 00000014 r fpi.7554
07079064 00000014 r fpinan.7590
07079078 00000028 r tinytens
070790dc 00000010 r blanks.8740
070790ec 00000010 r zeroes.8741
070790fc 000000fc R _C_time_locale
070793c4 00000015 r day_name.6253
070793dc 00000024 r mon_name.6254
07079400 00000101 R _ctype_
07079518 00000100 R __hexdig
07079618 0000000c R _C_numeric_locale
07079670 00000028 R __mprec_bigtens
07079698 000000c8 R __mprec_tens
07079760 0000000c r p05.7474
0707976c 0000006c R __action_table
070797d8 00000100 R __chclass
070798d8 0000006c R __state_table
07079944 00000010 r blanks.8719
07079954 00000010 r zeroes.8720
07079964 00000022 r basefix.8286
0707999c 000000bc r a1
07079a58 000000bc r a2
07079b14 0000005b r a3
07079b70 00000070 r a6
07079be0 000000a2 r a7
07079c84 00000040 r a8
07079cc4 0000172a r b02cf
0707b3f0 00001a7c r d02f4
0707ce6c 0000309c r categories
0708001c R __exidx_start
070802d4 R __exidx_end
070802d4 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
070802d8 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
070802dc 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
070802e0 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
070802e4 00000001 D CTRPluginFramework::g_keepRunning
070802e8 00000004 D CTRPluginFramework::FwkSettings::Header
070802ec 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070802f0 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070802f4 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
070802f8 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070802fc 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07080300 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07080304 00000004 D CTRPluginFramework::Screenshot::Screens
07080308 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708030c 00000001 D CTRPluginFramework::SystemImpl::Language
0708030d 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
07080310 00000004 D Search15
07080314 00000004 D UnCheckedCheckbox
07080318 00000004 D Unsplash15
0708031c 00000004 D Plus25
07080320 00000004 D GameControllerFilled25
07080324 00000004 D About15
07080328 00000004 D Trash25
0708032c 00000004 D Cut25
07080330 00000004 D CloseWindow20
07080334 00000004 D AddFavoriteFilled25
07080338 00000004 D ClearSymbolFilled15
0708033c 00000004 D ClipboardFilled25
07080340 00000004 D CheckedCheckbox
07080344 00000004 D CutFilled25
07080348 00000004 D CapsLockOn15
0708034c 00000004 D TrashFilled25
07080350 00000004 D RAM15
07080354 00000004 D More15
07080358 00000004 D InfoFilled25
0708035c 00000004 D CloseWindowFilled20
07080360 00000004 D HandCursor15
07080364 00000004 D EnterKey15
07080368 00000004 D Duplicate25
0708036c 00000004 D Settings15
07080370 00000004 D File15
07080374 00000004 D AddFavorite25
07080378 00000004 D Edit25
0708037c 00000004 D DuplicateFilled25
07080380 00000004 D Save25
07080384 00000004 D Clipboard25
07080388 00000004 D Info25
0708038c 00000004 D EditFilled25
07080390 00000004 D KeyboardFilled25
07080394 00000004 D PlusFilled25
07080398 00000004 D Shutdown15
0708039c 00000004 D ClearSymbol15
070803a0 00000004 D Maintenance15
070803a4 00000004 D Controller15
070803a8 00000004 D Grid15
070803ac 00000004 D Keyboard25
070803b0 00000004 D CapsLockOnFilled15
070803b4 00000004 D UserManualFilled15
070803b8 00000004 D Rocket40
070803bc 00000004 D Star15
070803c0 00000004 D EnterKeyFilled15
070803c4 00000004 D GameController25
070803c8 00000004 D FolderFilled
070803cc 00000004 D Restart15
070803d0 000001f4 D opcode_names
070805c4 D __dso_handle
070805c8 00000004 D __cxxabiv1::__terminate_handler
070805cc 00000004 D __cxxabiv1::__unexpected_handler
070805d0 00000001 D __fdlib_version
070805d4 00000004 D _impure_ptr
070805d8 00000460 d impure_data
07080a38 00000408 D __malloc_av_
07080e40 00000004 D __malloc_sbrk_base
07080e44 00000004 D __malloc_trim_threshold
07080e48 0000000c d __malloc_recursive_mutex
07080e54 00000004 d __tz_mutex
07080e58 00000008 D _tzname
07080e60 0000000c D __atexit_recursive_mutex
07080e70 00000058 d tzinfo
07080ec8 00000002 d numempty
07080ecc 0000016c D __global_locale
07081038 00000004 D environ
0708103c 0000000c d __env_recursive_mutex
07081048 D __TMC_END__
07081058 d _GLOBAL_OFFSET_TABLE_
07081064 D __tdata_lma
07081070 t __frame_dummy_init_array_entry
07081070 T __init_array_start
07081070 B __preinit_array_end
07081070 B __preinit_array_start
07081070 D __tdata_lma_end
070810cc t __do_global_dtors_aux_fini_array_entry
070810cc T __init_array_end
070810d0 B __c_bss_start
070810d0 00000004 B CTRPluginFramework::offset
070810d4 000000b4 b CTRPluginFramework::original_speed
07081188 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
0708118c 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
07081190 00000004 B CTRPluginFramework::data
07081194 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
07081195 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
07081198 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0708119c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
070811a0 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
070811a4 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
070811a8 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
070811ac 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
070811b0 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
070811b1 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
070811b4 00000004 B CTRPluginFramework::g_FNsPointer
070811b8 00000004 B CTRPluginFramework::g_oldRacePointer5D0
070811bc 00000004 B CTRPluginFramework::g_itemPointer
070811c0 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
070811c4 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
070811c5 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
070811c6 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
070811c7 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
070811c8 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
070811c9 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
070811cc 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070811d0 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070811d4 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
070811d8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
070811da 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
070811dc 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
070811e0 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070811e4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070811e8 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070811ec 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070811f8 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070811fc 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
07081208 0000000c b CTRPluginFramework::g_items
07081214 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07081218 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07081224 0000000c b CTRPluginFramework::speed
07081230 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
07081234 00000004 B CTRPluginFramework::g_oldRacePointer5CC
07081238 00000004 b g_onLoadCroLock
0708123c 00000004 B g_mainThread
07081240 00000004 B CTRPluginFramework::g_keepEvent
07081244 00000004 B CTRPluginFramework::g_continueGameEvent
07081248 0000005c b CTRPluginFramework::exception_data
070812a4 00000004 B CTRPluginFramework::g_keepThreadHandle
070812a8 00000018 b g_onLoadCroHook
070812c0 00000008 B CTRPluginFramework::_sdmcArchive
070812c8 00000004 B g_gspEventThreadPriority
070812cc 00000004 B CTRPluginFramework::g_resumeEvent
070812d0 00001000 b CTRPluginFramework::keepThreadStack
070822d0 00000004 B __ctru_heap_size
070822d4 00000004 B CTRPluginFramework::Color::Black
070822d8 00000004 B CTRPluginFramework::Color::White
070822dc 00000004 B CTRPluginFramework::Color::Red
070822e0 00000004 B CTRPluginFramework::Color::Lime
070822e4 00000004 B CTRPluginFramework::Color::Blue
070822e8 00000004 B CTRPluginFramework::Color::Yellow
070822ec 00000004 B CTRPluginFramework::Color::Cyan
070822f0 00000004 B CTRPluginFramework::Color::Magenta
070822f4 00000004 B CTRPluginFramework::Color::Silver
070822f8 00000004 B CTRPluginFramework::Color::Gray
070822fc 00000004 B CTRPluginFramework::Color::Maroon
07082300 00000004 B CTRPluginFramework::Color::Olive
07082304 00000004 B CTRPluginFramework::Color::Green
07082308 00000004 B CTRPluginFramework::Color::Purple
0708230c 00000004 B CTRPluginFramework::Color::Teal
07082310 00000004 B CTRPluginFramework::Color::Navy
07082314 00000004 B CTRPluginFramework::Color::BlackGrey
07082318 00000004 B CTRPluginFramework::Color::Brown
0708231c 00000004 B CTRPluginFramework::Color::DarkGrey
07082320 00000004 B CTRPluginFramework::Color::DeepSkyBlue
07082324 00000004 B CTRPluginFramework::Color::DimGrey
07082328 00000004 B CTRPluginFramework::Color::DodgerBlue
0708232c 00000004 B CTRPluginFramework::Color::Gainsboro
07082330 00000004 B CTRPluginFramework::Color::ForestGreen
07082334 00000004 B CTRPluginFramework::Color::LimeGreen
07082338 00000004 B CTRPluginFramework::Color::Orange
0708233c 00000004 B CTRPluginFramework::Color::SkyBlue
07082340 00000004 B CTRPluginFramework::Color::Turquoise
07082344 00000004 b CTRPluginFramework::g_runningInstance
07082348 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082350 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082358 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082360 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082364 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082366 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082368 00000180 b CTRPluginFramework::g_keyName
070824e8 00000004 B CTRPluginFramework::__fileHandle
070824f0 00000008 B CTRPluginFramework::Time::Zero
070824f8 00000004 B CTRPluginFramework::System::OnAbort
070824fc 00000004 B CTRPluginFramework::Controller::_keysDown
07082500 00000004 B CTRPluginFramework::Controller::_keysHeld
07082504 00000004 B CTRPluginFramework::Controller::_keysReleased
07082508 000009c4 b CTRPluginFramework::g_rng
07082ed0 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
07082ed4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07082ed8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07082edc 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
07082edd 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
07082ede 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
07082edf 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
07082ee0 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
07082ee1 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
07082ee2 00000001 B CTRPluginFramework::Preferences::ShowTopFps
07082ee3 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
07082ee4 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07082ee5 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07082ee8 00000070 B CTRPluginFramework::Preferences::Settings
07082f58 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07082f70 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07082f88 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07082fa0 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
07082fa1 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
07082fa2 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
07082fa4 00000004 b CTRPluginFramework::defaultSysFont
07082fa8 00000004 B CTRPluginFramework::g_fontAllocated
07082fac 00000004 b CTRPluginFramework::tileData
07082fb0 00000004 b CTRPluginFramework::glyph
07082fb4 0000000c B CTRPluginFramework::Font::_mutex
07082fc0 00000004 B CTRPluginFramework::g_glyphAllocated
07082fc4 00000028 B CTRPluginFramework::Window::BottomWindow
07082fec 00000028 B CTRPluginFramework::Window::TopWindow
07083014 00000004 B CTRPluginFramework::RendererPriv::g_customColor
07083018 00000008 B CTRPluginFramework::Renderer::hookContext
07083020 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07083024 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07083028 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708302c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07083038 0000000c B CTRPluginFramework::OSDImpl::RecLock
07083044 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
07083050 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07083068 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07083080 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
07083084 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708308c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07083090 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
07083098 00000018 B CTRPluginFramework::OSDImpl::OSDHook
070830b0 00000010 b CTRPluginFramework::InstallOSD()::returnCode
070830c0 00000004 B CTRPluginFramework::OSDImpl::HookReturn
070830c4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070830cc 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070830f0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070830fc 00000004 b CTRPluginFramework::g_second
07083100 00000010 b CTRPluginFramework::g_fpsClock
07083110 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
07083114 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
07083115 00000001 B CTRPluginFramework::OSDImpl::MessColors
07083118 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708311c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07083120 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083128 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083148 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07083150 00000004 b CTRPluginFramework::g_ctrpfString
07083154 00000004 b CTRPluginFramework::g_bymeString
07083158 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083160 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083168 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083170 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083178 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708317c 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07083180 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083188 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083190 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07083194 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07083198 00000004 b CTRPluginFramework::g_mode
0708319c 00000004 b CTRPluginFramework::g_OpenFileLock
070831a0 00000004 b CTRPluginFramework::g_HookMode
070831a8 00000040 b CTRPluginFramework::g_hookExportFile
070831e8 00000010 b CTRPluginFramework::g_returncode
070831f8 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
07083210 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
07083214 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
07083218 00000004 b CTRPluginFramework::g_screenshotEntry
0708321c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083220 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083224 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07083228 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708322c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07083230 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07083240 00000004 B CTRPluginFramework::__g_hexEditor
07083244 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083248 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083258 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708325c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07083260 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07083270 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083280 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07083290 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07083294 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083298 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708329c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070832ac 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070832b0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070832c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070832c4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070832d4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070832d8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070832e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070832e8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070832f0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070832f8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07083300 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
07083304 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
07083310 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708331c 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07083328 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083330 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083338 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708333c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708334c 00000004 b CTRPluginFramework::__pmARinstance
07083350 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083354 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083358 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083368 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083378 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708337c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083380 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083388 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083398 00000004 b CTRPluginFramework::g_radioId
0708339c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070833a0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
070833a4 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
070833a8 00000004 B CTRPluginFramework::_pool
070833b0 00000008 B CTRPluginFramework::Screenshot::_timer
070833b8 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070833c0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070833c8 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070833e0 00000004 B CTRPluginFramework::Screenshot::_filecount
070833e4 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070833fc 00000004 B CTRPluginFramework::Screenshot::_display
07083400 00000004 B CTRPluginFramework::Screenshot::_mode
07083408 00000008 B CTRPluginFramework::Screenshot::Timer
07083410 00000001 B CTRPluginFramework::Screenshot::IsEnabled
07083414 00000004 B CTRPluginFramework::Screenshot::_task
07083418 00000004 B CTRPluginFramework::Screenshot::_count
0708341c 00000008 b CTRPluginFramework::g_sleepEvent
07083424 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07083428 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708342c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07083430 00000004 B CTRPluginFramework::SystemImpl::AptStatus
07083434 00000004 B CTRPluginFramework::HookManager::instance
07083438 00000078 B CTRPluginFramework::Scheduler::_singleton
070834b0 00000040 b CTRPluginFramework::_topBuf
070834f0 00000004 B CTRPluginFramework::ScreenImpl::Top
070834f4 00000040 b CTRPluginFramework::_botBuf
07083534 00000004 B CTRPluginFramework::ScreenImpl::Bottom
07083538 0000000c b CTRPluginFramework::Heap::_mutex
07083544 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07083548 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708354c 00000008 b CTRPluginFramework::Heap::g_heapPool
07083554 0000000c b sAddrMap
07083560 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07083578 0000000c B CTRPluginFramework::FSPath::FSMutex
07083588 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708358c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070835f0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070835f4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070835f8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
07083600 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
07083604 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
07083608 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
07083614 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07083620 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07083630 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
07083632 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
07083638 0000000c b _mutex
07083644 00000008 b sVramPool
0708364c 0000000c b sAddrMap
07083658 00000004 b srvRefCount
0708365c 00000004 b srv2Handle
07083660 00000004 b errfRefCount
07083664 00000004 b errfHandle
07083668 00000004 b sharedFontAddr
0708366c 00000004 b arbiter
07083670 00000004 b cfguRefCount
07083674 00000004 b cfguHandle
07083678 00000004 b fsuHandle
07083680 00000080 b fsExemptArchives
07083700 00000004 b fsuRefCount
07083704 00000001 B fs
07083708 0000000c b aptFirstHook
07083714 00000004 b serviceName.7785
07083718 00000004 b aptRefCount
0708371c 0000000c b aptEvents
07083728 00000008 b aptSleepEvent
07083730 00000004 b aptEventHandlerThread
07083734 00000004 b aptMessageFunc
07083738 00000004 b aptMessageFuncData
0708373c 00000001 b aptHomeButtonState
0708373d 00000001 b flagInit.8135
0708373e 00000001 b flagValue.8136
07083740 00001000 b aptParameters
07084740 00001000 b __stack
07085740 00000004 b amRefCount
07085744 00000004 b amHandle
07085748 00000004 b acRefCount
0708574c 00000004 b acHandle
07085750 00000004 b hidRefCount
07085754 00000004 b kOld
07085758 00000004 b kHeld
0708575c 00000004 b cPos
07085760 00000004 b tPos
07085764 00000006 b aVec
0708576a 00000006 b gRate
07085770 00000004 b kDown
07085774 00000004 b kUp
07085778 00000004 b gspEventData
0708577c 00000038 b gspEvents
070857b4 0000001c b gspEventCounts
070857d0 00000001 b gspRunEvents
070857d4 00000004 b gspRefCount
070857d8 00000004 b gfxSharedMemory
070857dc 00000001 b gfxThreadID
070857e0 00000004 b irrstRefCount
070857e4 00000004 b kHeld
070857e8 00000004 b csPos
070857ec 00000004 b g_mainThreadVars
070857f0 b saved_stack
070857f8 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070857fc 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07085814 0000000c B CTRPluginFramework::g_codeTypes
07085820 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085824 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085830 00000001 b CTRPluginFramework::g_condAgainstData
07085831 00000001 b CTRPluginFramework::g_newCondDataToggle
07085834 00000004 b CTRPluginFramework::__arCodeEditor
07085838 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708583c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07085848 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07085850 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085858 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085860 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085868 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085878 00000001 b CTRPluginFramework::g_progressLoop
07085880 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085888 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085890 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085898 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070858a0 00000004 b CTRPluginFramework::__converter
070858a4 00000008 b sMappablePool
070858ac 0000000c b sAddrMap
070858b8 00000004 B CTRPluginFramework::ARHandler::ActiveData
070858bc 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070858c0 00000008 B CTRPluginFramework::ARHandler::Offset
070858c8 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070858cc 00000010 B CTRPluginFramework::ARHandler::Data
070858dc 00000008 B CTRPluginFramework::ARHandler::Storage
070858e4 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070858e8 00000001 b CTRPluginFramework::ToggleFloat
070858ec 00000004 b CTRPluginFramework::g_context
070858f0 00000fa0 b CTRPluginFramework::arStack
07086890 b completed.10351
07086894 b object.10356
070868ac 00000004 b (anonymous namespace)::__new_handler
070868b0 00000010 b (anonymous namespace)::emergency_pool
070868c0 0000000c b eh_globals
070868cc 00000010 V std::string::_Rep::_S_empty_rep_storage
070868dc 00000028 B __malloc_current_mallinfo
07086904 00000004 B __malloc_max_sbrked_mem
07086908 00000004 B __malloc_max_total_mem
0708690c 00000004 B __malloc_top_pad
07086910 0000000b b __tzname_dst
0708691c 0000000b b __tzname_std
07086928 00000004 b prev_tzenv
0708692c 00000004 B _daylight
07086930 00000004 B _timezone
07086934 00000004 b initial_env
07086938 00000004 b heap_start.7414
0708693c 00000004 B fake_heap_end
07086940 00000004 B fake_heap_start
07086944 00000048 B __syscalls
0708698c 00000004 B g_sharedFont
07086990 00000004 B charPerSheet
07086994 00000004 B hidMemHandle
07086998 00000004 B hidHandle
0708699c 00000014 B hidEvents
070869b0 00000004 B hidSharedMem
070869b4 00000004 B gspEventThread
070869b8 00000004 B gspEvent
070869bc 00000004 B gspGpuHandle
070869c0 00000004 B gspSharedMemHandle
070869c4 00000004 B gspThreadEventHandle
070869c8 00000004 B irrstMemHandle
070869cc 00000004 B irrstEvent
070869d0 00000004 B irrstHandle
070869d4 00000004 B irrstSharedMem
070869d8 00000004 B __ctru_linear_heap
070869dc 00000004 B __tmp
070869e0 00000004 B __ctru_linear_heap_size
070869e4 00000004 B __system_retAddr
070869e8 00000004 B __ctru_heap
070869ec B __c_bss_end
070869ec B __tls_start
07086a0c A __end__
07086a0c B __tls_end
