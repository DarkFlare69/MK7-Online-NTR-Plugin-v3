00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 00000140 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
07001468 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
070014c4 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001504 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001544 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001584 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
070015c0 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
070015fc 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07001664 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001664 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001684 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
07001684 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
070016c0 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016c0 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016e0 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07001744 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
07001804 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
07001860 0000001c t CTRPluginFramework::GetItemPointer() [clone .part.0]
07001860 0000001c t CTRPluginFramework::GetOldPointer5CC() [clone .part.0]
07001860 0000001c t CTRPluginFramework::GetOldPointer5D0() [clone .part.0]
0700187c 0000006c t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.0]
0700187c 0000006c t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.0]
070018e8 00000024 t __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned int, void const*) [clone .isra.0]
0700190c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700190c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700192c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070019b4 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07001a60 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
07001ac4 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001ac4 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001b00 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001b3c 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07001b78 00000024 W CTRPluginFramework::File::~File()
07001b78 00000024 W CTRPluginFramework::File::~File()
07001b9c 00000084 T CTRPluginFramework::IsInRace()
07001c20 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001c88 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001cdc 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001d50 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001e14 00000110 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001f24 000000bc T CTRPluginFramework::GetRacePointer()
07001fe0 0000002c T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
0700200c 0000002c T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07002038 00000028 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07002060 0000002c T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
0700208c 0000001c t CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*) [clone .part.0]
0700208c 0000001c t CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*) [clone .part.0]
070020a8 00000018 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
070020c0 00000018 T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
070020d8 00000038 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07002110 000000b0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
070021c0 000000dc T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
0700229c 00000254 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
070024f0 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
07002670 00000070 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
070026e0 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07002810 00000098 T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
070028a8 000000a0 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002948 00000048 T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002990 00000050 T CTRPluginFramework::GetFNsPointer()
070029e0 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002a48 00000064 T CTRPluginFramework::GetOldPointer5CC()
07002aac 00000030 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002adc 00000060 T CTRPluginFramework::GetOldPointer5D0()
07002b3c 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002b84 0000008c T CTRPluginFramework::GetItemPointer()
07002c10 000001a4 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002db4 000000b8 T CTRPluginFramework::GetTotalPlayers()
07002e6c 000001f0 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
0700305c 000001ec T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07003248 00000060 T CTRPluginFramework::GetTime()
070032a8 0000002c T CTRPluginFramework::GetMinutes()
070032d4 0000001c T CTRPluginFramework::GetSeconds()
070032f0 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
070033a8 00000074 T CTRPluginFramework::SubToTime(unsigned short)
0700341c 0000042c T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
07003848 00000058 T CTRPluginFramework::writeItem(unsigned long)
070038a0 000000c8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003968 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07003998 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003a7c 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003abc 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003afc 00000254 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003d50 00000254 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003fa4 00000048 T CTRPluginFramework::writeVR(unsigned long)
07003fec 000000ac T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07004098 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
070040b4 00000060 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07004114 0000004c T CTRPluginFramework::writeLocation(unsigned long)
07004160 00000060 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
070041c0 00000070 T CTRPluginFramework::writeFlag(unsigned short)
07004230 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
07004324 000016c0 T CTRPluginFramework::main()
070059e4 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005ac4 000001f4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07005cb8 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07005cbc 00000004 T CTRPluginFramework::OnProcessExit()
07005cc0 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
07005d24 000000b4 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005dd8 000001a8 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005f80 00000228 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
070061a8 00000518 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
070066c0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
07006738 00000038 T OnLoadCro
07006770 00000170 T CTRPluginFramework::Initialize()
070068e0 000000b0 T CTRPluginFramework::ThreadExit()
07006990 00000060 T abort
070069f0 0000003c T CTRPluginFramework::ThreadInit(void*)
07006a2c 0000008c T LaunchMainThread
07006ab8 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07006ec0 0000000c t _GLOBAL__sub_I_g_mainThread
07006ecc 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006f18 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07006f94 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07007058 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
070070d0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070070d0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070070e8 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070070e8 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070070f4 00000008 T CTRPluginFramework::Color::ToU32() const
07007100 00000120 T CTRPluginFramework::Color::Fade(double)
07007220 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07007260 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
070072dc 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
070074f0 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07007610 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007610 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007680 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07007680 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070076ac 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
070076c0 00000044 T CTRPluginFramework::PluginMenu::Run() const
07007704 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700770c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700771c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07007728 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007728 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007768 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007768 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007790 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
070077a0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070077a0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070077ec 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070077ec 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700783c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700783c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700786c 00000010 T CTRPluginFramework::MenuEntry::Disable() const
0700787c 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07007884 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
0700788c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07007894 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007894 00000030 W CTRPluginFramework::TextBox::~TextBox()
070078c4 0000001c W CTRPluginFramework::TextBox::~TextBox()
070078e0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070078e0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007928 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007928 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007964 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007964 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
070079a0 00000008 T CTRPluginFramework::MessageBox::operator()() const
070079a8 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007a6c 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07007b14 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b14 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b5c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007b5c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007bc4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007bc4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007bf0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07007bf8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007c14 00000028 T CTRPluginFramework::Keyboard::Open() const
07007c3c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007cb4 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007d64 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07007db8 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007e20 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07007e28 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007e30 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07007ecc 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007f58 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07008000 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070080e8 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008174 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0700821c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07008304 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008390 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07008438 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07008520 00000028 t __tcf_0
07008548 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
070085c0 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
070085c8 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07008648 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070086c4 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
0700879c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0700879c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070087b8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070087b8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070087f8 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07008808 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070088c8 00000020 T CTRPluginFramework::HotkeyManager::Count()
070088e8 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008a58 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008b84 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008cac 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07008d1c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008da4 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07008de8 0000004c T CTRPluginFramework::Directory::Close() const
07008e34 000000e8 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
07008f1c 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07008f30 00000008 T CTRPluginFramework::Directory::IsOpen() const
07008f38 00000040 T CTRPluginFramework::Directory::Directory()
07008f38 00000040 T CTRPluginFramework::Directory::Directory()
07008f78 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07008fac 00000060 T CTRPluginFramework::Directory::~Directory()
07008fac 00000060 T CTRPluginFramework::Directory::~Directory()
0700900c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700900c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700902c 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070090c4 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700915c 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070091fc 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070092d0 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009364 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070094b0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070094b0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009508 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009544 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009544 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009560 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
070096d0 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
070096ec 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07009814 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
0700988c 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
070098f4 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
070099a0 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
070099e4 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07009bc0 000001b4 T CTRPluginFramework::Directory::_List() const
07009d74 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009e54 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009f38 0000000c T CTRPluginFramework::FwkSettings::Get()
07009f44 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0700a024 00000010 T CTRPluginFramework::Process::GetHandle()
0700a034 00000010 T CTRPluginFramework::Process::GetTitleID()
0700a044 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a0a0 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a0d8 00000024 T CTRPluginFramework::Process::GetTextSize()
0700a0fc 00000008 T CTRPluginFramework::Process::Pause()
0700a104 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700a114 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700a1bc 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700a1c0 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700a20c 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700a244 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700a268 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700a284 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0700a2a8 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a2e4 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a30c 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a32c 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0700a34c 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
0700a4b8 0000002c T CTRPluginFramework::Hook::Hook()
0700a4b8 0000002c T CTRPluginFramework::Hook::Hook()
0700a4e4 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700a4fc 00000230 T CTRPluginFramework::Hook::Enable()
0700a72c 0000005c T CTRPluginFramework::Hook::Disable()
0700a788 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a788 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a79c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a79c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a7c4 00000004 T CTRPluginFramework::Mutex::Lock()
0700a7c8 00000014 T CTRPluginFramework::Mutex::TryLock()
0700a7dc 00000004 T CTRPluginFramework::Mutex::Unlock()
0700a7e0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a7e0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a804 0000004c T CTRPluginFramework::Lock::~Lock()
0700a804 0000004c T CTRPluginFramework::Lock::~Lock()
0700a850 00000074 T CTRPluginFramework::File::Close() const
0700a8c4 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
0700a97c 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700aa6c 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700aa98 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700ab7c 00000008 T CTRPluginFramework::File::Tell() const
0700ab84 00000030 T CTRPluginFramework::File::Rewind() const
0700abb4 00000034 T CTRPluginFramework::File::Flush() const
0700abe8 0000006c T CTRPluginFramework::File::GetSize() const
0700ac54 000000dc T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
0700ad30 00000008 T CTRPluginFramework::File::IsOpen() const
0700ad38 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700ad4c 00000044 T CTRPluginFramework::File::File()
0700ad4c 00000044 T CTRPluginFramework::File::File()
0700ad90 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ae24 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700aef8 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af7c 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b01c 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700b124 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b124 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b190 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700b1d8 00000014 T CTRPluginFramework::Time::Time()
0700b1d8 00000014 T CTRPluginFramework::Time::Time()
0700b1ec 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700b20c 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700b224 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700b22c 00000028 T CTRPluginFramework::Seconds(float)
0700b254 00000010 T CTRPluginFramework::Milliseconds(int)
0700b264 00000008 T CTRPluginFramework::Microseconds(long long)
0700b26c 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b280 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b294 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b2a8 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b2c0 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700b30c 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700b324 00000010 T CTRPluginFramework::System::IsNew3DS()
0700b334 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700b348 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700b364 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700b380 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700b39c 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700b3b8 00000034 T CTRPluginFramework::Controller::IsKeysPressed(unsigned long)
0700b3ec 0000002c T CTRPluginFramework::Controller::Update()
0700b418 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700b490 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b4ec 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700b548 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700b5a4 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700b5e8 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700b668 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b71c 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b858 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700b890 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700b8ac 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700bb00 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bb00 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bb44 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700c284 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c28c 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c2d0 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700c3dc 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700c444 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700c460 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700c49c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700c4c0 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c4e4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700c55c 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700c58c 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700c698 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700c864 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700cb44 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700cc10 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700cccc 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700cd88 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700cde4 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700ce34 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700ceb4 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700d084 00000004 T CTRPluginFramework::Preferences::Initialize()
0700d088 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700d174 00000010 T CTRPluginFramework::Glyph::Width() const
0700d184 00000060 T CTRPluginFramework::Font::Initialize()
0700d1e4 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700d538 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700d83c 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700d948 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700d9b0 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700d9d0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700da00 00000020 W CTRPluginFramework::Renderer::GetContext()
0700da20 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700da80 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700dbe8 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700dd54 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700ddf4 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700dfdc 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700e00c 00000028 T CTRPluginFramework::Window::~Window()
0700e00c 00000028 T CTRPluginFramework::Window::~Window()
0700e034 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e034 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e0d4 00000064 T CTRPluginFramework::Window::Draw() const
0700e138 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700e210 00000018 T CTRPluginFramework::Window::DrawButton() const
0700e228 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700e240 00000018 T CTRPluginFramework::Window::MustClose() const
0700e258 0000002c T CTRPluginFramework::Window::Close() const
0700e284 00000004 T CTRPluginFramework::Window::GetRect() const
0700e288 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700e2b4 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700e35c 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700e48c 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700e558 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700e6a4 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e7e8 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e820 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700e9c0 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700eb84 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700edb8 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700ee28 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700ee94 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700eea8 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700eecc 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700eee8 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700ef18 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700ef48 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700ef70 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700ef98 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700efb8 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700eff4 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700f03c 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700f080 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700f19c 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700f1bc 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700f22c 00000038 t __tls_init
0700f22c 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700f264 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700f2a0 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f314 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f380 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f408 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f49c 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f52c 00000008 W CTRPluginFramework::Drawable::operator()()
0700f534 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0700f538 000002f0 T CTRPluginFramework::TextBox::Draw()
0700f828 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f828 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f8bc 0000000c T CTRPluginFramework::TextBox::Open() const
0700f8c8 0000000c T CTRPluginFramework::TextBox::Close() const
0700f8d4 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0700f8dc 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0700fb24 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0700fb30 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0700fbc8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0700fc7c 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0700fcd4 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0700fd04 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0700fdc0 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
0700fe7c 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
07010044 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010044 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010188 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07010270 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
070102e8 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
07010358 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0701037c 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
070103a0 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
070103a0 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
070103e0 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070103e8 00000008 T CTRPluginFramework::BMPImage::Width() const
070103f0 00000008 T CTRPluginFramework::BMPImage::Height() const
070103f8 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07010400 00000010 T CTRPluginFramework::BMPImage::data() const
07010410 0000001c T CTRPluginFramework::BMPImage::end() const
0701042c 00000010 W CTRPluginFramework::BMPImage::DataClear()
0701043c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0701043c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
070104e4 0000003c T CTRPluginFramework::BMPImage::Unload()
07010520 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
0701065c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07010664 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
070108b4 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07010a88 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07010ad0 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07010b00 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07010bd4 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
07010c54 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07010c78 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07010d94 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010d94 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010de8 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
07011108 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011108 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011154 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070111a0 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070114b0 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07011570 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
070116a0 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0701180c 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0701184c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0701184c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0701186c 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070119dc 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07011ad0 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07011b64 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07011c0c 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07011e98 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011e98 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011edc 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07011f30 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
070120b8 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07012164 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
070121a8 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07012828 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070129d0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
070129d0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
070129fc 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
070129fc 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012a1c 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07012acc 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07012b28 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012b28 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012bac 0000000c T CTRPluginFramework::OSDImpl::Lock()
07012bb8 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07012bd4 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07012be0 000000cc T CTRPluginFramework::OSDImpl::Draw()
07012cac 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07012d84 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07012db0 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07012df8 0000020c T CTRPluginFramework::InstallOSD()
07013004 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
0701304c 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07013124 00000108 T CTRPluginFramework::OSDImpl::Update()
0701322c 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
070138b4 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0701391c 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07013988 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013988 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013b00 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013b00 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013c58 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07013cd0 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07013f84 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07014120 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07014340 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701436c 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070143a8 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
070143e4 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07014420 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701445c 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07014498 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070144c4 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07014500 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701453c 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07014578 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070145b4 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
070145e0 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701461c 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07014648 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07014674 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
070146b0 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
070146dc 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07014718 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07014744 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07014778 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070147b4 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
070147e0 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0701481c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07014848 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07014874 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070148a0 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070148cc 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
070148f8 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07014924 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07014950 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0701497c 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070149b8 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070149e4 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
07014a74 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014a74 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014a94 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014a94 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014b74 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07014b7c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014b7c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014c10 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07014c30 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07014db8 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014dd8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07014df4 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07014e10 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07014e18 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014e20 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014e20 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014e40 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07014f24 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07015620 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07015678 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701575c 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07015798 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
070158c8 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07015a04 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015abc 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015bc4 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015bc4 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015c48 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07015d3c 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07015e74 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0701600c 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701600c 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07016108 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016108 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070162a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07016320 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016320 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070163fc 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070163fc 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07016514 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07016550 00000058 T CTRPluginFramework::Menu::CloseAll()
070165a8 00000030 T CTRPluginFramework::Menu::~Menu()
070165a8 00000030 T CTRPluginFramework::Menu::~Menu()
070165d8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070165e4 00000008 T CTRPluginFramework::Menu::GetFolder() const
070165ec 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
070165f4 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
07016634 00000384 T CTRPluginFramework::Menu::Draw() const
070169b8 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
07016a44 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07016ad0 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07016cf8 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07016e6c 00000068 T CTRPluginFramework::Menu::ShowNote()
07016ed4 00000008 T CTRPluginFramework::Menu::CloseNote()
07016edc 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07016ee4 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07016f24 00000044 T CTRPluginFramework::Menu::Pop()
07016f68 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701702c 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
070170e4 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070170ec 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
070170ec 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07017114 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07017130 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017130 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017204 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017220 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017220 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070172d8 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070172d8 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017394 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
070173a8 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
070173f8 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07017410 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07017434 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
070174dc 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
070174ec 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07017510 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07017570 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07017580 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07017590 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070175a0 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07017630 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701774c 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
070177bc 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07017860 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701788c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701788c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070178bc 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070178bc 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07017928 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07017a7c 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07017ab8 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017ab8 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017c24 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07017c7c 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017d30 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017e10 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07017e88 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07017e88 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701834c 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07018358 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07018678 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07018780 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07018bd4 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07018cf0 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07018d7c 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07018db8 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07018de4 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07018eb4 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07018f34 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07018fb0 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07019034 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07019090 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070190d0 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07019200 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0701953c 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07019750 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07019768 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0701977c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07019790 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070197a4 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070198e0 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070198e4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070198e8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07019900 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07019918 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07019930 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07019948 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07019960 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07019978 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07019990 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
070199a8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
070199c0 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07019a04 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019a7c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07019ae0 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07019b78 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07019d1c 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019ea0 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019f4c 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a070 0000005c t CTRPluginFramework::Reboot()
0701a0cc 00000064 t CTRPluginFramework::Shutdown()
0701a130 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0701a324 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
0701ad24 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701ad24 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701aeb4 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0701afd0 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0701b05c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0701b09c 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701b20c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701b2b8 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
0701b8d0 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701b90c 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701b948 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701b958 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701b958 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701ba30 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701ba30 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701ba6c 0000001c T CTRPluginFramework::SubMenu::operator()()
0701ba88 00000200 T CTRPluginFramework::SubMenu::Draw()
0701bc88 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0701bd4c 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701bd54 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701bd70 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bf14 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bf60 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
0701bf60 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
0701bf64 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
0701bf68 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
0701bf6c 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701c108 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701c204 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701c340 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701c3b8 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c608 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701c85c 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701ca58 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701cc38 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701cc54 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701cd10 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701cd2c 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701cd9c 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701cdcc 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701ce08 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701ceb0 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701cee4 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701cf14 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701cfa0 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701d038 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701d104 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701d1c0 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701d270 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701d404 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701d414 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701d424 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701d434 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d434 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d6a8 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701d6ec 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701d8b4 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701d978 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701d9d0 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701dab4 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701dc24 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701dda8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701ddd4 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701ddd4 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701de3c 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701de64 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701dfb8 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701e02c 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701e1cc 00000160 T CTRPluginFramework::HexEditor::_Update()
0701e32c 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701e5cc 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701e5e0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e5e0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e608 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e624 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701e73c 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e73c 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e80c 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e80c 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e8e0 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701e8e8 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701e8fc 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701e908 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701e910 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701e934 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701e964 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701e980 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701e9e8 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701e9e8 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701ea08 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701ea24 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701ea24 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701eab8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eab8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb18 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb18 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb78 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701eb7c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701ebf4 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701ecb4 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701ece8 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701f0e0 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701f0f8 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701f3bc 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f3bc 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f57c 00000158 T CTRPluginFramework::GuideReader::Draw()
0701f6d4 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701f748 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701f7b0 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701f7b0 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701f7f8 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701f844 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701f850 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701f87c 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701f8d8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701f960 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701f9c4 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701f9c4 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701fa24 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fa24 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fbd0 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fbd0 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fd8c 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fd8c 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fdf0 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701fdf8 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701fe00 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701fe08 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701fe10 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701fe18 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701ff7c 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070203d4 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07020464 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
070204e4 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07020568 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
070206c8 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
07020948 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07020eb4 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07020f1c 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07020f6c 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07020fdc 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07020fe4 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
070210a8 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07021284 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
070212e8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07021314 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021314 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021334 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07021400 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
070214bc 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
07021580 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07021aec 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0702205c 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
07022114 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07022b68 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07022c20 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07023864 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
070238a8 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
07023964 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07023b28 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
07023b78 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07023bd0 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07023c18 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07023f3c 00000254 T CTRPluginFramework::KeyboardImpl::Run()
07024190 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07024208 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0702421c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07024240 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
070242c8 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
070243d8 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07024434 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
070244cc 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070244cc 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702471c 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07024750 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070247a4 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
070247c8 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
070247f0 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070248cc 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
070249f0 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07024bbc 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024bbc 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024be4 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07024d5c 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07024ed8 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07025040 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
0702507c 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
070251c4 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
070251f4 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070252c8 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
070254c8 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07025540 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07025608 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070257c0 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07025968 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
070259e0 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
07025a3c 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07025b54 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07025bb8 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07025d24 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07025d24 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0702617c 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
07026538 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
070265a8 000000f4 t CTRPluginFramework::ClearSearchFolder()
0702669c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
070266d0 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
070268f8 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07026920 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07026990 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07026a58 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07026a94 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07026cfc 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07026de0 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07026e20 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07026e50 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07026f24 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070271b0 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07027568 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
070275c0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070275c0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070275ec 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
070275f8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
07027604 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07027760 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0702779c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
070277a8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
070277b4 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
070277d4 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07027970 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
070279cc 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07027b28 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07027b40 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07027c64 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07027d28 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07027ed8 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07027f9c 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0702801c 00000044 T CTRPluginFramework::Search::UpdateProgress()
07028060 00000194 T CTRPluginFramework::Search::CheckNextRegion()
070281f4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
0702826c 00000008 T CTRPluginFramework::Search::GetHeader() const
07028274 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
070282bc 0000000c T CTRPluginFramework::Search::GetType() const
070282c8 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
070282e0 00000070 T CTRPluginFramework::Search::WriteHeader()
07028350 00000058 T CTRPluginFramework::Search::WriteResults()
070283a8 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
070283f4 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07028634 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07028634 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07028874 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0702893c 00000088 T CTRPluginFramework::Search::CreateIndexTable()
070289c4 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070289c4 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028b6c 00000080 T CTRPluginFramework::Search::Cancel()
07028bec 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07028d04 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07028dc8 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07028e88 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07028f00 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07029168 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
070293f8 00000048 W CTRPluginFramework::Search::~Search()
070293f8 00000048 W CTRPluginFramework::Search::~Search()
07029440 00000044 T CTRPluginFramework::Search32::~Search32()
07029440 00000044 T CTRPluginFramework::Search32::~Search32()
07029484 0000001c T CTRPluginFramework::Search32::~Search32()
070294a0 0000001c W CTRPluginFramework::Search::~Search()
070294bc 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070294bc 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070296e4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070296e4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029704 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07029704 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0702977c 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070298d4 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029920 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07029a64 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07029ba8 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07029bd8 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07029c9c 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07029cd8 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07029d10 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07029df0 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029e3c 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0702a154 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0702a2cc 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702a5b8 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
0702a75c 0000002c T CTRPluginFramework::Screenshot::Initialize()
0702a788 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0702a834 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702a8c8 0000003c T CTRPluginFramework::SystemImpl::Status()
0702a904 000000c8 T CTRPluginFramework::HookManager::Init()
0702a9cc 00000018 T CTRPluginFramework::HookManager::Lock()
0702a9e4 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
0702aa8c 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
0702aaec 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702aaec 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702ab24 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ab24 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ab5c 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702aba4 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0702acb0 000000d4 T CTRPluginFramework::Scheduler::Initialize()
0702ad84 00000050 T CTRPluginFramework::Scheduler::Exit()
0702add4 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702add4 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702ae1c 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
0702ae88 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0702af58 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0702af88 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
0702afa4 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702b0ac 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0702b0c4 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b0c4 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b108 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
0702b15c 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0702b23c 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
0702b374 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0702b410 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0702b440 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0702b448 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b4ac 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b510 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b580 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b5f4 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b664 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
0702b734 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702b7f8 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0702b854 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
0702b8f8 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0702b950 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702ba0c 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0702bae4 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
0702bb4c 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0702bb54 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0702bb5c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0702bb64 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0702bb80 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702bb9c 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0702bbf4 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0702bc24 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0702bc80 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0702bcf8 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702bd1c 00000004 t addrMapNodeDestructor(rbtree_node*)
0702bd20 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0702be50 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0702be58 00000070 T CTRPluginFramework::Heap::Free(void*)
0702bec8 0000000c T CTRPluginFramework::Heap::SpaceFree()
0702bed4 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702bf04 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702c008 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702c1e4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c1e4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c2a8 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702c308 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702c314 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c354 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702c364 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c37c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702c390 00000004 T Kernel::Initialize()
0702c394 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702c3ac 0000000c T KProcess::GetCurrent()
0702c3b8 00000024 T KProcess::PatchCore2Access()
0702c3dc 0000002c T KProcess::PatchCategory(unsigned long)
0702c408 00000014 T KProcess__PatchCategory
0702c41c 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702c448 00000014 T KProcess__PatchMaxPriority
0702c45c 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702c4e0 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702c514 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c514 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c534 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702c618 00000018 T IsPaused
0702c630 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702c66c 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702c688 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702c6a4 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702c70c 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702c788 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702c824 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702c8d4 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702c99c 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702ca70 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702cb08 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702cb64 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cb64 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cbf4 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702cd54 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702cd90 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702d02c 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702d124 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702d12c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702d158 00000034 W MemPool::DelBlock(MemBlock*)
0702d18c 0000005c T MemPool::CoalesceRight(MemBlock*)
0702d1e8 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702d300 000000fc T MemPool::Deallocate(MemChunk const&)
0702d3fc 00000020 T MemPool::GetFreeSpace()
0702d41c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702d440 00000004 t addrMapNodeDestructor(rbtree_node*)
0702d444 00000154 T vramMemAlign
0702d598 00000008 T vramAlloc
0702d5a0 00000070 T vramFree
0702d610 00000030 t _GLOBAL__sub_I_vramMemAlign
0702d640 000001d8 T threadCreate
0702d818 0000002c T threadFree
0702d844 00000024 T threadJoin
0702d868 00000020 T threadGetCurrent
0702d888 0000003c T threadExit
0702d8c4 0000003c t _thread_begin
0702d900 00000050 T srvExit
0702d950 00000034 T srvRegisterClient
0702d984 00000064 T srvInit
0702d9e8 00000068 T srvGetServiceHandleDirect
0702da50 00000004 T srvGetServiceHandle
0702da54 00000034 T srvPublishToSubscriber
0702da88 00000034 T errfExit
0702dabc 00000058 T errfInit
0702db14 0000003c T ERRF_Throw
0702db50 00000090 T ERRF_ExceptionHandler
0702dbe0 000000a8 T fontEnsureMapped
0702dc88 00000110 T fontGlyphIndexFromCodePoint
0702dd98 00000074 T fontGetCharWidthInfo
0702de0c 0000000c T __sync_init
0702de18 00000018 T __sync_fini
0702de30 00000018 T LightLock_Init
0702de48 0000008c T LightLock_Lock
0702ded4 00000034 T LightLock_TryLock
0702df08 00000050 T LightLock_Unlock
0702df58 00000018 T RecursiveLock_Init
0702df70 00000030 T RecursiveLock_Lock
0702dfa0 00000044 T RecursiveLock_TryLock
0702dfe4 00000034 T RecursiveLock_Unlock
0702e018 00000030 T LightEvent_Init
0702e048 00000060 T LightEvent_Clear
0702e0a8 00000064 T LightEvent_Pulse
0702e10c 000000b4 T LightEvent_Signal
0702e1c0 000000a8 T LightEvent_Wait
0702e268 000000a0 T cfguInit
0702e308 00000034 T cfguExit
0702e33c 00000044 T CFGU_GetConfigInfoBlk2
0702e380 00000014 T CFGU_GetSystemLanguage
0702e394 00000028 t fsSession
0702e3bc 00000044 t fsSessionForArchive
0702e400 00000038 T fsExit
0702e438 00000028 T FSUSER_Initialize
0702e460 000000b0 T fsInit
0702e510 00000080 T FSUSER_OpenFile
0702e590 00000068 T FSUSER_DeleteFile
0702e5f8 000000a4 T FSUSER_RenameFile
0702e69c 00000068 T FSUSER_DeleteDirectoryRecursively
0702e704 00000080 T FSUSER_CreateFile
0702e784 00000070 T FSUSER_CreateDirectory
0702e7f4 000000a4 T FSUSER_RenameDirectory
0702e898 0000006c T FSUSER_OpenDirectory
0702e904 00000074 T FSUSER_OpenArchive
0702e978 00000058 T FSFILE_Read
0702e9d0 00000060 T FSFILE_Write
0702ea30 00000038 T FSFILE_GetSize
0702ea68 00000028 T FSFILE_SetSize
0702ea90 0000003c T FSFILE_Close
0702eacc 00000024 T FSFILE_Flush
0702eaf0 00000054 T FSDIR_Read
0702eb44 0000003c T FSDIR_Close
0702eb80 00000104 T aptSendCommand
0702ec84 0000006c T APT_CheckNew3DS
0702ecf0 00000048 T APT_GetSharedFont
0702ed38 000000a0 T amInit
0702edd8 00000034 T amExit
0702ee0c 00000088 T acInit
0702ee94 00000034 T acExit
0702eec8 000000bc T hidExit
0702ef84 00000034 T hidCheckSectionUpdateTime
0702efb8 00000174 T hidScanInput
0702f12c 00000010 T hidKeysHeld
0702f13c 00000010 T hidKeysDown
0702f14c 00000010 T hidKeysUp
0702f15c 00000018 T hidTouchRead
0702f174 00000090 T HIDUSER_GetHandles
0702f204 00000174 T hidInit
0702f378 000000e8 t gspEventThreadMain
0702f460 000000a0 T gspInitEventHandler
0702f500 00000040 T gspExitEventHandler
0702f540 0000008c T gspExit
0702f5cc 0000005c T gspWaitForEvent
0702f628 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702f68c 000000dc T gspInit
0702f768 00000034 T irrstCheckSectionUpdateTime
0702f79c 00000070 T irrstScanInput
0702f80c 0000001c T irrstKeysHeld
0702f828 00000050 T IRRST_GetHandles
0702f878 00000034 T IRRST_Initialize
0702f8ac 00000128 T irrstInit
0702f9d4 0000002c T IRRST_Shutdown
0702fa00 000000a8 T irrstExit
0702faa8 00000028 t __ctru_get_reent
0702fad0 000000ec T __system_initSyscalls
0702fbbc 000000ac T utf8_to_utf16
0702fc68 00000138 T decode_utf8
0702fda0 0000005c T decode_utf16
0702fdfc 000000d4 T utf16_to_utf8
0702fed0 000000e0 T encode_utf8
0702ffb0 00000054 T encode_utf16
07030004 00000054 T rbtree_find
07030058 00000014 t is_black
0703006c 000002bc T rbtree_remove
07030328 00000050 T rbtree_node_next
07030378 00000090 T rbtree_rotate
07030408 00000174 t do_insert
0703057c 00000008 T rbtree_insert
07030584 00000010 T rbtree_init
07030594 T LoadCROHooked
070305a8 T AR__ExecuteRoutine
070305d0 t stackBak
070305d8 T svcCustomBackdoor
070305e0 T svcConvertVAToPA
070305e8 T svcFlushDataCacheRange
070305f0 T svcMapProcessMemoryEx
07030604 T svcUnmapProcessMemoryEx
0703060c T svcControlProcess
07030614 T svcQueryMemory
07030644 T svcCreateThread
07030664 T svcExitThread
0703066c T svcSleepThread
07030674 T svcSetThreadPriority
0703067c T svcCreateEvent
07030690 T svcSignalEvent
07030698 T svcClearEvent
070306a0 T svcMapMemoryBlock
070306a8 T svcUnmapMemoryBlock
070306b0 T svcCreateAddressArbiter
070306c4 T svcArbitrateAddress
070306dc T svcCloseHandle
070306e4 T svcWaitSynchronization
070306ec T svcWaitSynchronizationN
07030714 T svcGetSystemTick
0703071c T svcGetSystemInfo
07030734 T svcGetProcessInfo
0703074c T svcConnectToPort
07030760 T svcSendSyncRequest
07030768 T svcOpenProcess
0703077c T svcGetProcessId
07030790 T svcBreak
07030798 T svcInvalidateProcessDataCache
070307a0 T svcFlushProcessDataCache
070307a8 T svcKernelSetState
070307b0 T svcQueryProcessMemory
070307d4 00000030 t CTRPluginFramework::GetCurrentTime()
07030804 00000014 T CTRPluginFramework::Clock::Clock()
07030804 00000014 T CTRPluginFramework::Clock::Clock()
07030818 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030818 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030820 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
07030858 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07030888 00000044 T CTRPluginFramework::Clock::Restart()
070308cc 00000014 T CTRPluginFramework::Touch::IsDown()
070308e0 00000028 T CTRPluginFramework::Touch::GetPosition()
07030908 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07030908 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0703098c 00000048 T CTRPluginFramework::Task::~Task()
0703098c 00000048 T CTRPluginFramework::Task::~Task()
070309d4 00000030 T CTRPluginFramework::Task::Start() const
07030a04 00000044 T CTRPluginFramework::Task::Wait() const
07030a48 00000014 T CTRPluginFramework::Task::Status() const
07030a5c 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030a5c 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030a84 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030b04 00000048 T CTRPluginFramework::LineWriter::Flush()
07030b4c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030b4c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030b68 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030bd4 00000018 T CTRPluginFramework::LineWriter::Close()
07030bec 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030cb0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
07030d28 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07031064 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07031064 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07031084 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703110c 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703110c 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031238 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07031274 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031374 00000084 T CTRPluginFramework::ARCode::Update()
070313f8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070313f8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703141c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07031444 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07031444 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070314fc 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070314fc 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031530 00000040 T CTRPluginFramework::ARCodeContext::Update()
07031570 00000090 T CTRPluginFramework::ARCodeContext::Clear()
07031600 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
070316d8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
070316d8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
070316f8 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
07031710 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031804 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
07031820 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031934 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031944 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
070319bc 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070319d4 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07031a28 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031a6c 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031ab4 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031f88 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031f88 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031fcc 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07031fcc 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07031fe0 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07032000 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07032178 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0703229c 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070329d0 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07032a20 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032a20 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032a88 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032aa4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032aa4 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032af0 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07032c0c 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07032c9c 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07032db4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07032e3c 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032e98 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032e98 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032f10 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032f10 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032f10 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032f10 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032f60 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070342b4 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070342b4 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07034448 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
070346fc 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
07034784 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070347c8 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
070347dc 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07034818 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034980 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070349bc 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07034a20 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07034a44 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07034a6c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034a6c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034a94 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07034e14 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07035498 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
070354e4 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0703559c 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07035a10 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07035edc 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07035fd4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
0703605c 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07036098 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070363bc 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07036438 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
070364a4 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
070364dc 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07036558 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
07036924 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07036b28 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07036bc8 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07036c84 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07036d40 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07036dec 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07036e78 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07036ff0 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07037104 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070371ac 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07037214 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
070372a4 00000160 T ARM_Disasm::Decode01(unsigned long)
07037404 00000028 T ARM_Disasm::Decode10(unsigned long)
0703742c 0000007c T ARM_Disasm::Decode11(unsigned long)
070374a8 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07037510 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07037560 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07037678 000000c4 T ARM_Disasm::Decode00(unsigned long)
0703773c 00000030 T ARM_Disasm::Decode(unsigned long)
0703776c 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
07037844 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07037b28 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07037e18 00000020 T CTRPluginFramework::Button::~Button()
07037e18 00000020 T CTRPluginFramework::Button::~Button()
07037e38 0000001c T CTRPluginFramework::Button::~Button()
07037e54 00000040 T CTRPluginFramework::Button::operator()()
07037e94 00000148 T CTRPluginFramework::Button::Draw()
07037fdc 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07038130 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038130 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038254 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038254 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038274 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038274 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038308 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038308 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703831c 00000018 T CTRPluginFramework::Button::Enable(bool)
07038334 00000010 T CTRPluginFramework::Button::Enable()
07038344 00000010 T CTRPluginFramework::Button::Disable()
07038354 00000010 T CTRPluginFramework::Button::Lock()
07038364 00000010 T CTRPluginFramework::Button::Execute()
07038374 00000018 T CTRPluginFramework::Button::SetState(bool)
0703838c 00000010 T CTRPluginFramework::Button::GetState() const
0703839c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0703839c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070383b0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070383b0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070383d0 00000024 T CTRPluginFramework::UIContainer::Draw()
070383f4 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07038428 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
070384ec 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0703852c 00000094 T CTRPluginFramework::ComboBox::Draw()
070385c0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070385c0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
0703860c 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07038628 000000a8 T CTRPluginFramework::ComboBox::operator()()
070386d0 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070386d0 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703871c 0000003c T CTRPluginFramework::ComboBox::Clear()
07038758 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070387a8 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703882c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703882c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038830 00000014 T CTRPluginFramework::FloatingButton::Draw()
07038844 00000014 T CTRPluginFramework::FloatingButton::operator()()
07038858 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703886c 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07038a2c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038a2c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038a6c 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038a6c 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038b2c 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07038bc8 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07038c68 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07038c80 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07038cb0 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038d50 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038d50 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038e00 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038e00 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038eac 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038eac 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038f2c 00000040 T CTRPluginFramework::TouchKey::Clear()
07038f6c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038f6c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038f8c 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07038fa8 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07038fb0 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07039010 00000060 T CTRPluginFramework::TouchKey::Draw()
07039070 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703910c 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070391d0 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070391d0 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07039320 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039320 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039340 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703935c 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070393d8 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07039410 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07039478 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07039570 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07039580 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07039590 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07039598 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070395a4 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070395a4 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0703960c 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07039680 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
070396f8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070396f8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07039744 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07039804 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703993c 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07039964 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070399c8 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07039cd8 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07039dcc 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703a014 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703a340 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703a3c8 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
0703a460 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703a4dc 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703a590 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703a71c 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703a764 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703a8ac 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703aa04 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
0703aae8 00000030 W std::__cxx11::to_string(unsigned long)
0703ab18 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ab18 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703abcc 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0703ac50 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703b198 00000230 T CTRPluginFramework::SearchMenu::Update()
0703b3c8 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b8d8 000000e4 T CTRPluginFramework::Converter::Converter()
0703b8d8 000000e4 T CTRPluginFramework::Converter::Converter()
0703b9bc 00000010 T CTRPluginFramework::Converter::Instance()
0703b9cc 00000108 T CTRPluginFramework::Converter::_Draw()
0703bad4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bad4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bae8 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703bd04 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c188 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c610 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ca8c 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d0b4 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d9c0 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e2d0 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703eba4 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f7e4 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040088 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070409c4 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070412e8 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042084 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042ce8 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704342c 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043834 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043f14 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070441a4 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704444c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070446dc 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07044710 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044a34 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07044a58 00000004 t addrMapNodeDestructor(rbtree_node*)
07044a5c 000000d8 T mappableAlloc
07044b34 00000050 T mappableFree
07044b84 00000090 T __system_allocateHeaps
07044c14 0000005c t getSysTime
07044c70 000000fc T __libctru_gtod
07044d6c 00000008 T envGetHandle
07044d74 00000004 T envDestroyHandles
07044d78 00000020 T __libctru_exit
07044d98 00000020 T __appExit
07044db8 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044db8 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044de4 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044de4 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044dfc 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07044f04 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
07044f64 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07044f6c 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07044f90 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07044fb4 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07044fd8 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07045000 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07045028 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07045050 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07045120 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07046f94 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07047004 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07047024 00000010 T __aeabi_atexit
07047034 00000004 T operator delete(void*)
07047038 00000004 T operator delete[](void*)
0704703c 0000005c T __cxa_guard_acquire
07047098 0000000c T __cxa_guard_release
070470a4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070470a4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070470c4 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070470f0 0000005c T operator new(unsigned int)
0704714c 00000004 T operator new[](unsigned int)
07047150 00000008 T __cxa_pure_virtual
07047158 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07047158 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07047178 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070471a4 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07047210 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070472ec 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07047330 00000004 T std::type_info::~type_info()
07047330 00000004 T std::type_info::~type_info()
07047334 00000008 T std::type_info::__is_pointer_p() const
07047334 00000008 T std::type_info::__is_function_p() const
0704733c 0000004c T std::type_info::operator==(std::type_info const&) const
07047388 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
070473a0 00000014 T std::__detail::_List_node_base::_M_unhook()
070473b4 0000002c T std::__throw_bad_alloc()
070473e0 00000048 T std::__throw_logic_error(char const*)
07047428 00000048 T std::__throw_invalid_argument(char const*)
07047470 00000048 T std::__throw_length_error(char const*)
070474b8 00000048 T std::__throw_out_of_range(char const*)
07047500 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704757c 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
070475e8 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07047668 0000012c T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07047794 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
070477ec 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07047800 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07047824 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07047848 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07047904 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07047a10 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07047a8c 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047a8c 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047af4 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047af4 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047b18 000000c4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047bdc 00000108 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07047ce4 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07047d54 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07047dc8 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07047e0c 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07047e24 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07047f48 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07047f80 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07048208 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
07048240 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704828c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
070482f0 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07048380 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07048390 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070483a0 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
070483cc 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0704841c 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
0704846c 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07048510 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
07048520 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07048584 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070485b8 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704860c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
070486bc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070486bc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070486ec 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0704874c 0000000c T std::bad_alloc::what() const
07048758 00000020 T std::bad_alloc::~bad_alloc()
07048758 00000020 T std::bad_alloc::~bad_alloc()
07048778 0000002c T std::bad_alloc::~bad_alloc()
070487a4 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07048800 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07048814 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07048814 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07048834 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07048860 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070488c8 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070488f4 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07048938 00000004 T operator delete(void*, unsigned int)
0704893c 000000d4 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
07048a10 00000090 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07048aa0 00000044 T __cxa_allocate_exception
07048ae4 00000030 T __cxa_free_exception
07048b14 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07048b54 T __cxa_end_cleanup
07048b64 00000138 T __cxa_type_match
07048c9c 000000b4 T __cxa_begin_cleanup
07048d50 000000b4 T __gnu_end_cleanup
07048e04 000000cc T __cxa_begin_catch
07048ed0 000000e0 T __cxa_end_catch
07048fb0 00000004 T std::exception::~exception()
07048fb0 00000004 T std::exception::~exception()
07048fb4 00000004 T std::bad_exception::~bad_exception()
07048fb4 00000004 T std::bad_exception::~bad_exception()
07048fb8 0000000c T transaction clone for std::exception::what() const
07048fb8 0000000c T std::exception::what() const
07048fc4 0000000c T transaction clone for std::bad_exception::what() const
07048fc4 0000000c T std::bad_exception::what() const
07048fd0 00000018 T std::bad_exception::~bad_exception()
07048fe8 0000000c T __cxa_get_globals_fast
07048ff4 0000000c T __cxa_get_globals
07049000 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07049168 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
070491cc 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
070492a4 00000700 T __gxx_personality_v0
070499a4 00000038 T __cxxabiv1::__terminate(void (*)())
070499dc 00000018 T std::terminate()
070499f4 0000000c T __cxxabiv1::__unexpected(void (*)())
07049a00 00000018 T std::unexpected()
07049a18 00000014 T std::get_terminate()
07049a2c 00000014 T std::get_unexpected()
07049a40 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07049ab0 00000070 T __cxa_init_primary_exception
07049b20 00000058 T __cxa_throw
07049b78 000000b0 T __cxa_rethrow
07049c28 00000014 T std::get_new_handler()
07049c3c 00000008 T std::logic_error::what() const
07049c44 00000064 T std::logic_error::~logic_error()
07049c44 00000064 T std::logic_error::~logic_error()
07049ca8 0000001c T std::logic_error::~logic_error()
07049cc4 00000020 T std::invalid_argument::~invalid_argument()
07049cc4 00000020 T std::invalid_argument::~invalid_argument()
07049ce4 00000028 T std::invalid_argument::~invalid_argument()
07049d0c 00000020 T std::length_error::~length_error()
07049d0c 00000020 T std::length_error::~length_error()
07049d2c 00000028 T std::length_error::~length_error()
07049d54 00000020 T std::out_of_range::~out_of_range()
07049d54 00000020 T std::out_of_range::~out_of_range()
07049d74 00000028 T std::out_of_range::~out_of_range()
07049d9c 00000038 T std::logic_error::logic_error(char const*)
07049d9c 00000038 T std::logic_error::logic_error(char const*)
07049dd4 00000020 T std::invalid_argument::invalid_argument(char const*)
07049dd4 00000020 T std::invalid_argument::invalid_argument(char const*)
07049df4 00000020 T std::length_error::length_error(char const*)
07049df4 00000020 T std::length_error::length_error(char const*)
07049e14 00000020 T std::out_of_range::out_of_range(char const*)
07049e14 00000020 T std::out_of_range::out_of_range(char const*)
07049e34 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07049ebc 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
07049ebc 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
07049f2c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07049f30 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
07049f60 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07049f60 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07049fac 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0704a01c 0000002c T __cxa_call_terminate
0704a048 00000158 T __cxa_call_unexpected
0704a1a0 000002a4 T log2
0704a444 00000024 t with_errno
0704a468 00000048 T __math_divzero
0704a4b0 0000001c T __math_invalid
0704a4d0 0000015c T ceil
0704a62c 000000b4 T ceilf
0704a6e0 0000016c T floor
0704a84c 0000006c T roundf
0704a8b8 00000108 T sqrtf
0704a9c0 00000008 T __ieee754_sqrtf
0704a9c8 00000008 T matherr
0704a9d0 00000030 T __aeabi_f2lz
0704a9d0 00000030 T __fixsfdi
0704aa00 00000038 T __aeabi_d2lz
0704aa00 00000038 T __fixdfdi
0704aa38 00000040 T __aeabi_f2ulz
0704aa38 00000040 T __fixunssfdi
0704aa78 00000040 T __aeabi_d2ulz
0704aa78 00000040 T __fixunsdfdi
0704aab8 00000130 T __udivmoddi4
0704abe8 00000018 t selfrel_offset31
0704ac00 0000008c t search_EIT_table
0704ac8c 00000040 t __gnu_unwind_get_pr_addr
0704accc 00000114 t get_eit_entry
0704ade0 00000088 t restore_non_core_regs
0704ae68 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704ae7c 00000004 t _Unwind_DebugHook
0704ae80 00000064 t unwind_phase2
0704aee4 00000134 t unwind_phase2_forced
0704b018 000000a4 T __gnu_Unwind_RaiseException
0704b0bc 00000024 T __gnu_Unwind_ForcedUnwind
0704b0e0 00000074 T __gnu_Unwind_Resume
0704b154 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704b174 00000004 T _Unwind_Complete
0704b178 00000018 T _Unwind_DeleteException
0704b190 00000064 T _Unwind_VRS_Get
0704b1f4 0000002c t _Unwind_GetGR
0704b220 00000064 T _Unwind_VRS_Set
0704b284 00000030 t _Unwind_SetGR
0704b2b4 000000c0 T __gnu_Unwind_Backtrace
0704b374 0000044c t __gnu_unwind_pr_common
0704b7c0 00000008 T __aeabi_unwind_cpp_pr0
0704b7c8 00000008 W __aeabi_unwind_cpp_pr1
0704b7d0 00000008 W __aeabi_unwind_cpp_pr2
0704b7d8 000003d0 T _Unwind_VRS_Pop
0704bba8 00000060 t next_unwind_byte
0704bc08 0000002c t _Unwind_GetGR.constprop.0
0704bc34 00000004 t unwind_UCB_from_context
0704bc38 000003c8 T __gnu_unwind_execute
0704c000 00000044 T __gnu_unwind_frame
0704c044 00000010 T _Unwind_GetRegionStart
0704c054 0000001c T _Unwind_GetLanguageSpecificData
0704c070 00000008 T _Unwind_GetDataRelBase
0704c078 00000008 T _Unwind_GetTextRelBase
0704c080 00000010 T ctime
0704c090 00000018 T __cxa_atexit
0704c0a8 0000000c T __errno
0704c0b4 0000007c T __libc_init_array
0704c130 00000018 T isspace
0704c148 00000018 T isxdigit
0704c160 00000020 T localtime
0704c180 0000037c T localtime_r
0704c4fc 00000028 T memalign
0704c524 0000014c T _memalign_r
0704c670 00000020 T malloc
0704c690 00000020 T free
0704c6b0 000007d0 T _malloc_r
0704ce80 000000e0 T memchr
0704cf60 000000a0 T memcmp
0704d000 00000120 T memcpy
0704d120 00000154 T memmove
0704d274 00000118 T memset
0704d38c 0000000c T __malloc_lock
0704d398 0000000c T __malloc_unlock
0704d3a4 000000cc T snprintf
0704d470 00000064 T sprintf
0704d4d4 00000008 T __seofread
0704d4dc 00000230 t iso_year_adjust
0704d70c 000010fc t __strftime
0704e808 00000020 T strftime
0704e828 0000005c T strlen
0704e884 000000ec T strncmp
0704e970 000000c0 T strncpy
0704ea30 00000054 t sulp
0704ea88 00001414 T _strtod_l
0704fea0 000000cc T strtof
0704ff70 0000024c t _strtoull_l.isra.0
070501bc 00000004 T _strtoull_r
070501c0 000001c8 t _strtoul_l.isra.0
07050388 00000004 T _strtoul_r
0705038c 00000030 T strtoul
070503bc 00000650 t get_arg
07050a10 00003814 T _svfprintf_r
07054224 0000003c T time
07054260 00000224 T __tzcalc_limits
07054484 0000000c T __tz_lock
07054490 0000000c T __tz_unlock
0705449c 00000010 T _tzset_unlocked
070544ac 00000474 T _tzset_unlocked_r
07054920 000000a4 T _vsnprintf_r
070549c4 00000038 T vsnprintf
070549fc 00000054 T _wcrtomb_r
07054a50 00000020 T _wcsrtombs_r
07054a70 0000000c T abs
07054a7c 00000020 T asctime
07054a9c 00000078 T asctime_r
07054b14 000000b0 T __register_exitproc
07054bc4 000001a8 t quorem
07054d70 000012ac T _dtoa_r
0705601c 000000f8 T _malloc_trim_r
07056114 000002e8 T _free_r
070563fc 000000ec t rshift
070564e8 00000828 T __gethex
07056d10 00000060 T __match
07056d70 0000028c T __hexnan
07056ffc 000000c8 T _findenv_r
070570c4 00000018 T _getenv_r
070570dc 0000000c T __gettzinfo
070570e8 00000278 T gmtime_r
07057360 0000000c T labs
0705736c 0000000c T _localeconv_r
07057378 00000010 T __locale_mb_cur_max
07057388 000002fc T __utf8_mbtowc
07057684 00000088 T _Balloc
0705770c 0000001c T _Bfree
07057728 000000d0 T __multadd
070577f8 000000ec T __s2b
070578e4 00000058 T __hi0bits
0705793c 0000009c T __lo0bits
070579d8 00000020 T __i2b
070579f8 000001e0 T __multiply
07057bd8 00000100 T __pow5mult
07057cd8 00000114 T __lshift
07057dec 00000058 T __mcmp
07057e44 00000190 T __mdiff
07057fd4 00000088 T __ulp
0705805c 000000d4 T __b2d
07058130 00000104 T __d2b
07058234 00000084 T __ratio
070582b8 0000006c T __copybits
07058324 0000005c T __any_on
07058380 0000000c T nanf
07058390 000000a8 T frexp
07058438 00000064 T siprintf
0705849c 00000074 T siscanf
07058510 00000010 T nan
07058520 000000cc T sniprintf
070585ec 000000f0 T strcpy
070586dc 000001b4 t _strtol_l.isra.0
07058890 00000004 T _strtol_r
07058894 00000650 t get_arg
07058ee4 00000188 T __ssprint_r
0705906c 000024d8 T _svfiprintf_r
0705b544 00000048 t get_arg
0705b58c 000000e0 T _sungetc_r
0705b66c 0000006c T __ssrefill_r
0705b6d8 000000c8 T _sfread_r
0705b7a0 000022dc T __ssvfiscanf_r
0705da7c 000000a8 T __submore
0705db24 00000190 T _wcsnrtombs_l
0705dcb4 00000048 T _wcsnrtombs_r
0705dcfc 000000f0 T __utf8_wctomb
0705ddec 00000094 T _calloc_r
0705de80 0000000c T __env_lock
0705de8c 0000000c T __env_unlock
0705de98 00000008 T iswspace
0705dea0 00000060 T _mbrtowc_r
0705df00 00000028 T realloc
0705df28 000004bc T _realloc_r
0705e3e4 000000e8 T __sccl
0705e4cc 0000023c t _strtoll_l.isra.0
0705e708 00000004 T _strtoll_r
0705e70c 0000003c T iswspace_l
0705e748 000001e0 t __jp2uc
0705e928 00000094 T _jp2uc_l
0705e9bc 00000088 T category
0705ea44 00000038 T _gettimeofday_r
0705ea7c 00000078 T _sbrk_r
0705eaf4 00000018 T __libc_lock_acquire
0705eb0c 00000018 T __libc_lock_release
0705eb24 00000018 T __libc_lock_acquire_recursive
0705eb3c 00000018 T __libc_lock_release_recursive
0705eb54 00000028 T __getreent
0705eb7c T _fini
0705edac 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0705ee8c 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0705eed8 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705eef8 00000a00 r font
0705f8f8 0000001c R vtable for CTRPluginFramework::TextBox
0705f934 00000058 r CTRPluginFramework::g_OSDPattern
0705f9bc 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705f9d0 00000038 r CTRPluginFramework::stable
0705fa08 00000038 r CTRPluginFramework::ktable
0705fa40 00000048 r CTRPluginFramework::g_ctrpf
0705fa88 00000030 r CTRPluginFramework::g_byme
0705fae4 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705fafc 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705fb14 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705fb2c 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705fb44 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705fb4c 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705fb68 00000038 R vtable for CTRPluginFramework::Search
0705fba0 00000038 R vtable for CTRPluginFramework::Search32
0705fbd8 00000005 r CSWTCH.74
0705fbe0 00000004 R Search15_array_length
0705fbe4 00000384 r Search15_array
0705ff68 00000004 R UnCheckedCheckbox_array_length
0705ff6c 00000384 r UnCheckedCheckbox_array
070602f0 00000004 R Unsplash15_array_length
070602f4 00000384 r Unsplash15_array
07060678 00000004 R Plus25_array_length
0706067c 000009c4 r Plus25_array
07061040 00000004 R GameControllerFilled25_array_length
07061044 000009c4 r GameControllerFilled25_array
07061a08 00000004 R About15_array_length
07061a0c 00000384 r About15_array
07061d90 00000004 R Trash25_array_length
07061d94 000009c4 r Trash25_array
07062758 00000004 R Cut25_array_length
0706275c 000009c4 r Cut25_array
07063120 00000004 R CloseWindow20_array_length
07063124 00000640 r CloseWindow20_array
07063764 00000004 R AddFavoriteFilled25_array_length
07063768 000009c4 r AddFavoriteFilled25_array
0706412c 00000004 R ClearSymbolFilled15_array_length
07064130 00000384 r ClearSymbolFilled15_array
070644b4 00000004 R ClipboardFilled25_array_length
070644b8 000009c4 r ClipboardFilled25_array
07064e7c 00000004 R CheckedCheckbox_array_length
07064e80 00000384 r CheckedCheckbox_array
07065204 00000004 R CutFilled25_array_length
07065208 000009c4 r CutFilled25_array
07065bcc 00000004 R CapsLockOn15_array_length
07065bd0 00000384 r CapsLockOn15_array
07065f54 00000004 R TrashFilled25_array_length
07065f58 000009c4 r TrashFilled25_array
0706691c 00000004 R RAM15_array_length
07066920 00000384 r RAM15_array
07066ca4 00000004 R More15_array_length
07066ca8 00000384 r More15_array
0706702c 00000004 R InfoFilled25_array_length
07067030 000009c4 r InfoFilled25_array
070679f4 00000004 R CloseWindowFilled20_array_length
070679f8 00000640 r CloseWindowFilled20_array
07068038 00000004 R HandCursor15_array_length
0706803c 00000384 r HandCursor15_array
070683c0 00000004 R EnterKey15_array_length
070683c4 00000384 r EnterKey15_array
07068748 00000004 R Duplicate25_array_length
0706874c 000009c4 r Duplicate25_array
07069110 00000004 R Settings15_array_length
07069114 00000384 r Settings15_array
07069498 00000004 R File15_array_length
0706949c 00000384 r File15_array
07069820 00000004 R AddFavorite25_array_length
07069824 000009c4 r AddFavorite25_array
0706a1e8 00000004 R Edit25_array_length
0706a1ec 000009c4 r Edit25_array
0706abb0 00000004 R DuplicateFilled25_array_length
0706abb4 000009c4 r DuplicateFilled25_array
0706b578 00000004 R Save25_array_length
0706b57c 000009c4 r Save25_array
0706bf40 00000004 R Clipboard25_array_length
0706bf44 000009c4 r Clipboard25_array
0706c908 00000004 R Info25_array_length
0706c90c 000009c4 r Info25_array
0706d2d0 00000004 R EditFilled25_array_length
0706d2d4 000009c4 r EditFilled25_array
0706dc98 00000004 R KeyboardFilled25_array_length
0706dc9c 000009c4 r KeyboardFilled25_array
0706e660 00000004 R PlusFilled25_array_length
0706e664 000009c4 r PlusFilled25_array
0706f028 00000004 R Shutdown15_array_length
0706f02c 00000384 r Shutdown15_array
0706f3b0 00000004 R ClearSymbol15_array_length
0706f3b4 00000384 r ClearSymbol15_array
0706f738 00000004 R Maintenance15_array_length
0706f73c 00000384 r Maintenance15_array
0706fac0 00000004 R Controller15_array_length
0706fac4 00000384 r Controller15_array
0706fe48 00000004 R Grid15_array_length
0706fe4c 00000384 r Grid15_array
070701d0 00000004 R Keyboard25_array_length
070701d4 000009c4 r Keyboard25_array
07070b98 00000004 R CapsLockOnFilled15_array_length
07070b9c 00000384 r CapsLockOnFilled15_array
07070f20 00000004 R UserManualFilled15_array_length
07070f24 00000384 r UserManualFilled15_array
070712a8 00000004 R Rocket40_array_length
070712ac 00001900 r Rocket40_array
07072bac 00000004 R Star15_array_length
07072bb0 00000384 r Star15_array
07072f34 00000004 R EnterKeyFilled15_array_length
07072f38 00000384 r EnterKeyFilled15_array
070732bc 00000004 R GameController25_array_length
070732c0 000009c4 r GameController25_array
07073c84 00000004 R FolderFilled_array_length
07073c88 00000384 r FolderFilled_array
0707400c 00000004 R Restart15_array_length
07074010 00000384 r Restart15_array
070743c4 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070743e0 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
070743ec 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0707446c 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07074480 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07074488 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07074490 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07074498 00000040 r RegNames
070744d8 00000040 r cond_names
07074518 00000010 r shift_names
07074528 0000001c R vtable for CTRPluginFramework::Button
07074544 0000001c R vtable for CTRPluginFramework::ComboBox
07074560 0000001c R vtable for CTRPluginFramework::FloatingButton
0707457c 0000001c R vtable for CTRPluginFramework::TouchKey
07074598 0000001c R vtable for CTRPluginFramework::NumericTextBox
07076aa4 00000014 V vtable for CTRPluginFramework::MenuItem
0707717c 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0707852c 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07078538 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0707855c 00000014 R vtable for __gnu_cxx::recursive_init_error
07078570 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0707857c 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070785a4 0000002c R vtable for __cxxabiv1::__si_class_type_info
070785d0 00000008 R typeinfo for std::type_info
070785d8 0000000d R typeinfo name for std::type_info
07078784 0000000c R typeinfo for std::bad_alloc
07078790 0000000d R typeinfo name for std::bad_alloc
070787a0 00000014 R vtable for std::bad_alloc
070787b4 0000000c R typeinfo for __cxxabiv1::__class_type_info
070787c0 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070787e4 0000002c R vtable for __cxxabiv1::__class_type_info
07078834 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0707883c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07078844 0000000c R typeinfo for std::bad_exception
07078850 00000008 R typeinfo for std::exception
07078858 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07078878 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0707889c 00000012 R typeinfo name for std::bad_exception
070788b0 0000000d R typeinfo name for std::exception
070788c0 00000014 R vtable for std::bad_exception
070788d4 0000000c R typeinfo for std::logic_error
070788e0 0000000c R typeinfo for std::length_error
070788ec 0000000c R typeinfo for std::out_of_range
070788f8 0000000c R typeinfo for std::invalid_argument
07078904 00000010 R typeinfo name for std::logic_error
07078914 00000011 R typeinfo name for std::length_error
07078928 00000011 R typeinfo name for std::out_of_range
0707893c 00000015 R typeinfo name for std::invalid_argument
07078954 00000014 R vtable for std::logic_error
07078968 00000014 R vtable for std::length_error
0707897c 00000014 R vtable for std::out_of_range
07078990 00000014 R vtable for std::invalid_argument
070789f0 00000890 R __log2_data
07079280 00000004 R _global_impure_ptr
07079284 00000060 R __month_lengths
07079370 00000014 r fpi.7590
07079384 00000014 r fpinan.7626
07079398 00000028 r tinytens
070793fc 00000010 r blanks.8776
0707940c 00000010 r zeroes.8777
07079574 000000fc R _C_time_locale
070796e4 00000015 r day_name.6289
070796fc 00000024 r mon_name.6290
07079720 00000101 R _ctype_
07079838 00000100 R __hexdig
0707993c 0000000c R _C_numeric_locale
07079990 00000028 R __mprec_bigtens
070799b8 000000c8 R __mprec_tens
07079a80 0000000c r p05.7510
07079a8c 0000006c R __action_table
07079af8 00000100 R __chclass
07079bf8 0000006c R __state_table
07079c64 00000010 r blanks.8755
07079c74 00000010 r zeroes.8756
07079c84 00000022 r basefix.8322
07079cbc 000000bc r a1
07079d78 000000bc r a2
07079e34 0000005b r a3
07079e90 00000070 r a6
07079f00 000000a2 r a7
07079fa4 00000040 r a8
07079fe4 0000172a r b02cf
0707b710 00001a7c r d02f4
0707d18c 0000309c r categories
0708033c R __exidx_start
070805f4 R __exidx_end
070805f4 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
070805f8 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
070805fc 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
07080600 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
07080604 00000001 D CTRPluginFramework::g_keepRunning
07080608 00000004 D CTRPluginFramework::FwkSettings::Header
0708060c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07080610 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07080614 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
07080618 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0708061c 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07080620 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07080624 00000004 D CTRPluginFramework::Screenshot::Screens
07080628 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708062c 00000001 D CTRPluginFramework::SystemImpl::Language
0708062d 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
07080630 00000004 D Search15
07080634 00000004 D UnCheckedCheckbox
07080638 00000004 D Unsplash15
0708063c 00000004 D Plus25
07080640 00000004 D GameControllerFilled25
07080644 00000004 D About15
07080648 00000004 D Trash25
0708064c 00000004 D Cut25
07080650 00000004 D CloseWindow20
07080654 00000004 D AddFavoriteFilled25
07080658 00000004 D ClearSymbolFilled15
0708065c 00000004 D ClipboardFilled25
07080660 00000004 D CheckedCheckbox
07080664 00000004 D CutFilled25
07080668 00000004 D CapsLockOn15
0708066c 00000004 D TrashFilled25
07080670 00000004 D RAM15
07080674 00000004 D More15
07080678 00000004 D InfoFilled25
0708067c 00000004 D CloseWindowFilled20
07080680 00000004 D HandCursor15
07080684 00000004 D EnterKey15
07080688 00000004 D Duplicate25
0708068c 00000004 D Settings15
07080690 00000004 D File15
07080694 00000004 D AddFavorite25
07080698 00000004 D Edit25
0708069c 00000004 D DuplicateFilled25
070806a0 00000004 D Save25
070806a4 00000004 D Clipboard25
070806a8 00000004 D Info25
070806ac 00000004 D EditFilled25
070806b0 00000004 D KeyboardFilled25
070806b4 00000004 D PlusFilled25
070806b8 00000004 D Shutdown15
070806bc 00000004 D ClearSymbol15
070806c0 00000004 D Maintenance15
070806c4 00000004 D Controller15
070806c8 00000004 D Grid15
070806cc 00000004 D Keyboard25
070806d0 00000004 D CapsLockOnFilled15
070806d4 00000004 D UserManualFilled15
070806d8 00000004 D Rocket40
070806dc 00000004 D Star15
070806e0 00000004 D EnterKeyFilled15
070806e4 00000004 D GameController25
070806e8 00000004 D FolderFilled
070806ec 00000004 D Restart15
070806f0 000001f4 D opcode_names
070808e4 D __dso_handle
070808e8 00000004 D __cxxabiv1::__unexpected_handler
070808ec 00000004 D __cxxabiv1::__terminate_handler
070808f0 00000001 D __fdlib_version
070808f4 00000004 D _impure_ptr
070808f8 00000460 d impure_data
07080d58 00000408 D __malloc_av_
07081160 00000004 D __malloc_sbrk_base
07081164 00000004 D __malloc_trim_threshold
07081168 0000000c d __malloc_recursive_mutex
07081174 00000004 d __tz_mutex
07081178 00000008 D _tzname
07081180 0000000c D __atexit_recursive_mutex
07081190 00000058 d tzinfo
070811e8 00000002 d numempty
070811ec 0000016c D __global_locale
07081358 00000004 D environ
0708135c 0000000c d __env_recursive_mutex
07081368 D __TMC_END__
07081378 d _GLOBAL_OFFSET_TABLE_
07081384 D __tdata_lma
07081390 t __frame_dummy_init_array_entry
07081390 T __init_array_start
07081390 B __preinit_array_end
07081390 B __preinit_array_start
07081390 D __tdata_lma_end
070813e8 t __do_global_dtors_aux_fini_array_entry
070813e8 T __init_array_end
070813ec B __c_bss_start
070813ec 00000004 B CTRPluginFramework::offset
070813f0 000000b4 b CTRPluginFramework::original_speed
070814a4 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
070814a8 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
070814ac 00000004 B CTRPluginFramework::data
070814b0 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
070814b4 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
070814b8 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
070814bc 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
070814bd 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
070814be 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
070814c0 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::cpuPointer
070814c4 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
070814c8 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
070814c9 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
070814ca 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
070814cb 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
070814cc 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
070814cd 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
070814d0 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070814d4 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070814d8 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
070814dc 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
070814de 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
070814e0 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
070814e4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070814e8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070814ec 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070814f0 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070814fc 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
07081500 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
0708150c 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
07081510 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
0708151c 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
07081520 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
0708152c 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07081530 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0708153c 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
07081540 00000004 b g_onLoadCroLock
07081544 00000004 B g_mainThread
07081548 00000004 B CTRPluginFramework::g_keepEvent
0708154c 00000004 B CTRPluginFramework::g_continueGameEvent
07081550 0000005c b CTRPluginFramework::exception_data
070815ac 00000004 B CTRPluginFramework::g_keepThreadHandle
070815b0 00000018 b g_onLoadCroHook
070815c8 00000008 B CTRPluginFramework::_sdmcArchive
070815d0 00000004 B g_gspEventThreadPriority
070815d4 00000004 B CTRPluginFramework::g_resumeEvent
070815d8 00001000 b CTRPluginFramework::keepThreadStack
070825d8 00000004 B __ctru_heap_size
070825dc 00000004 B CTRPluginFramework::Color::Black
070825e0 00000004 B CTRPluginFramework::Color::White
070825e4 00000004 B CTRPluginFramework::Color::Red
070825e8 00000004 B CTRPluginFramework::Color::Lime
070825ec 00000004 B CTRPluginFramework::Color::Blue
070825f0 00000004 B CTRPluginFramework::Color::Yellow
070825f4 00000004 B CTRPluginFramework::Color::Cyan
070825f8 00000004 B CTRPluginFramework::Color::Magenta
070825fc 00000004 B CTRPluginFramework::Color::Silver
07082600 00000004 B CTRPluginFramework::Color::Gray
07082604 00000004 B CTRPluginFramework::Color::Maroon
07082608 00000004 B CTRPluginFramework::Color::Olive
0708260c 00000004 B CTRPluginFramework::Color::Green
07082610 00000004 B CTRPluginFramework::Color::Purple
07082614 00000004 B CTRPluginFramework::Color::Teal
07082618 00000004 B CTRPluginFramework::Color::Navy
0708261c 00000004 B CTRPluginFramework::Color::BlackGrey
07082620 00000004 B CTRPluginFramework::Color::Brown
07082624 00000004 B CTRPluginFramework::Color::DarkGrey
07082628 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0708262c 00000004 B CTRPluginFramework::Color::DimGrey
07082630 00000004 B CTRPluginFramework::Color::DodgerBlue
07082634 00000004 B CTRPluginFramework::Color::Gainsboro
07082638 00000004 B CTRPluginFramework::Color::ForestGreen
0708263c 00000004 B CTRPluginFramework::Color::LimeGreen
07082640 00000004 B CTRPluginFramework::Color::Orange
07082644 00000004 B CTRPluginFramework::Color::SkyBlue
07082648 00000004 B CTRPluginFramework::Color::Turquoise
0708264c 00000004 b CTRPluginFramework::g_runningInstance
07082650 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082658 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082660 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082668 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708266c 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708266e 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082670 00000180 b CTRPluginFramework::g_keyName
070827f0 00000004 B CTRPluginFramework::__fileHandle
070827f8 00000008 B CTRPluginFramework::Time::Zero
07082800 00000004 B CTRPluginFramework::System::OnAbort
07082804 00000004 B CTRPluginFramework::Controller::_keysDown
07082808 00000004 B CTRPluginFramework::Controller::_keysHeld
0708280c 00000004 B CTRPluginFramework::Controller::_keysReleased
07082810 000009c4 b CTRPluginFramework::g_rng
070831d8 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
070831dc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
070831e0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
070831e4 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
070831e5 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
070831e6 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
070831e7 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
070831e8 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
070831e9 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
070831ea 00000001 B CTRPluginFramework::Preferences::ShowTopFps
070831eb 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
070831ec 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
070831ed 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
070831f0 00000070 B CTRPluginFramework::Preferences::Settings
07083260 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07083278 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07083290 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
070832a8 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
070832a9 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
070832aa 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
070832ac 00000004 b CTRPluginFramework::defaultSysFont
070832b0 00000004 B CTRPluginFramework::g_fontAllocated
070832b4 00000004 b CTRPluginFramework::tileData
070832b8 00000004 b CTRPluginFramework::glyph
070832bc 0000000c B CTRPluginFramework::Font::_mutex
070832c8 00000004 B CTRPluginFramework::g_glyphAllocated
070832cc 00000028 B CTRPluginFramework::Window::BottomWindow
070832f4 00000028 B CTRPluginFramework::Window::TopWindow
0708331c 00000004 B CTRPluginFramework::RendererPriv::g_customColor
07083320 00000008 B CTRPluginFramework::Renderer::hookContext
07083328 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708332c 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07083330 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07083334 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07083340 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708334c 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
07083358 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07083370 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07083388 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708338c 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
07083394 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07083398 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070833a0 00000018 B CTRPluginFramework::OSDImpl::OSDHook
070833b8 00000010 b CTRPluginFramework::InstallOSD()::returnCode
070833c8 00000004 B CTRPluginFramework::OSDImpl::HookReturn
070833cc 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070833d4 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070833f8 0000000c B CTRPluginFramework::OSDImpl::Callbacks
07083404 00000004 b CTRPluginFramework::g_second
07083408 00000010 b CTRPluginFramework::g_fpsClock
07083418 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708341c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708341d 00000001 B CTRPluginFramework::OSDImpl::MessColors
07083420 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
07083424 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07083428 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083430 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083450 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07083458 00000004 b CTRPluginFramework::g_ctrpfString
0708345c 00000004 b CTRPluginFramework::g_bymeString
07083460 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083468 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083470 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083478 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083480 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
07083484 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07083488 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083490 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083498 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708349c 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070834a0 00000004 b CTRPluginFramework::g_mode
070834a4 00000004 b CTRPluginFramework::g_OpenFileLock
070834a8 00000004 b CTRPluginFramework::g_HookMode
070834b0 00000040 b CTRPluginFramework::g_hookExportFile
070834f0 00000010 b CTRPluginFramework::g_returncode
07083500 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
07083518 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708351c 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
07083520 00000004 b CTRPluginFramework::g_screenshotEntry
07083524 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083528 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708352c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07083530 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07083534 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07083538 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07083548 00000004 B CTRPluginFramework::__g_hexEditor
0708354c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083550 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083560 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
07083564 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07083568 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07083578 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083588 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07083598 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708359c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070835a0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070835a4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070835b4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070835b8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070835c8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070835cc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070835dc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070835e0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070835e8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070835f0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070835f8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07083600 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07083608 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708360c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
07083618 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
07083624 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07083630 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083638 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083640 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07083644 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07083654 00000004 b CTRPluginFramework::__pmARinstance
07083658 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708365c 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083660 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083670 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083680 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083684 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083688 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083690 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
070836a0 00000004 b CTRPluginFramework::g_radioId
070836a4 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070836a8 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
070836ac 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
070836b0 00000004 B CTRPluginFramework::_pool
070836b8 00000008 B CTRPluginFramework::Screenshot::_timer
070836c0 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070836c8 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070836d0 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070836e8 00000004 B CTRPluginFramework::Screenshot::_filecount
070836ec 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
07083704 00000004 B CTRPluginFramework::Screenshot::_display
07083708 00000004 B CTRPluginFramework::Screenshot::_mode
07083710 00000008 B CTRPluginFramework::Screenshot::Timer
07083718 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708371c 00000004 B CTRPluginFramework::Screenshot::_task
07083720 00000004 B CTRPluginFramework::Screenshot::_count
07083724 00000008 b CTRPluginFramework::g_sleepEvent
0708372c 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07083730 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
07083734 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07083738 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708373c 00000004 B CTRPluginFramework::HookManager::instance
07083740 00000078 B CTRPluginFramework::Scheduler::_singleton
070837b8 00000040 b CTRPluginFramework::_topBuf
070837f8 00000004 B CTRPluginFramework::ScreenImpl::Top
070837fc 00000040 b CTRPluginFramework::_botBuf
0708383c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
07083840 0000000c b CTRPluginFramework::Heap::_mutex
0708384c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07083850 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
07083854 00000008 b CTRPluginFramework::Heap::g_heapPool
0708385c 0000000c b sAddrMap
07083868 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07083880 0000000c B CTRPluginFramework::FSPath::FSMutex
07083890 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
07083894 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070838f8 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070838fc 00000004 B CTRPluginFramework::ProcessImpl::MainThread
07083900 00000008 B CTRPluginFramework::ProcessImpl::TitleId
07083908 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708390c 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
07083910 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708391c 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07083928 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07083938 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0708393a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
07083940 0000000c b _mutex
0708394c 00000008 b sVramPool
07083954 0000000c b sAddrMap
07083960 00000004 b srvRefCount
07083964 00000004 b srv2Handle
07083968 00000004 b errfRefCount
0708396c 00000004 b errfHandle
07083970 00000004 b sharedFontAddr
07083974 00000004 b arbiter
07083978 00000004 b cfguRefCount
0708397c 00000004 b cfguHandle
07083980 00000004 b fsuHandle
07083988 00000080 b fsExemptArchives
07083a08 00000004 b fsuRefCount
07083a0c 00000001 B fs
07083a10 0000000c b aptFirstHook
07083a1c 00000004 b serviceName.7785
07083a20 00000004 b aptRefCount
07083a24 0000000c b aptEvents
07083a30 00000008 b aptSleepEvent
07083a38 00000004 b aptEventHandlerThread
07083a3c 00000004 b aptMessageFunc
07083a40 00000004 b aptMessageFuncData
07083a44 00000001 b aptHomeButtonState
07083a45 00000001 b flagInit.8135
07083a46 00000001 b flagValue.8136
07083a48 00001000 b aptParameters
07084a48 00001000 b __stack
07085a48 00000004 b amRefCount
07085a4c 00000004 b amHandle
07085a50 00000004 b acRefCount
07085a54 00000004 b acHandle
07085a58 00000004 b hidRefCount
07085a5c 00000004 b kOld
07085a60 00000004 b kHeld
07085a64 00000004 b cPos
07085a68 00000004 b tPos
07085a6c 00000006 b aVec
07085a72 00000006 b gRate
07085a78 00000004 b kDown
07085a7c 00000004 b kUp
07085a80 00000004 b gspEventData
07085a84 00000038 b gspEvents
07085abc 0000001c b gspEventCounts
07085ad8 00000001 b gspRunEvents
07085adc 00000004 b gspRefCount
07085ae0 00000004 b gfxSharedMemory
07085ae4 00000001 b gfxThreadID
07085ae8 00000004 b irrstRefCount
07085aec 00000004 b kHeld
07085af0 00000004 b csPos
07085af4 00000004 b g_mainThreadVars
07085af8 b saved_stack
07085b00 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07085b04 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07085b1c 0000000c B CTRPluginFramework::g_codeTypes
07085b28 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085b2c 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085b38 00000001 b CTRPluginFramework::g_condAgainstData
07085b39 00000001 b CTRPluginFramework::g_newCondDataToggle
07085b3c 00000004 b CTRPluginFramework::__arCodeEditor
07085b40 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07085b44 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07085b50 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07085b58 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085b60 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085b68 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085b70 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085b80 00000001 b CTRPluginFramework::g_progressLoop
07085b88 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085b90 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085b98 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085ba0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085ba8 00000004 b CTRPluginFramework::__converter
07085bac 00000008 b sMappablePool
07085bb4 0000000c b sAddrMap
07085bc0 00000004 B CTRPluginFramework::ARHandler::ActiveData
07085bc4 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
07085bc8 00000008 B CTRPluginFramework::ARHandler::Offset
07085bd0 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
07085bd4 00000010 B CTRPluginFramework::ARHandler::Data
07085be4 00000008 B CTRPluginFramework::ARHandler::Storage
07085bec 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
07085bf0 00000001 b CTRPluginFramework::ToggleFloat
07085bf4 00000004 b CTRPluginFramework::g_context
07085bf8 00000fa0 b CTRPluginFramework::arStack
07086b98 b completed.10434
07086b9c b object.10439
07086bb4 00000010 b (anonymous namespace)::emergency_pool
07086bc4 0000000c b eh_globals
07086bd0 00000004 b (anonymous namespace)::__new_handler
07086bd4 00000010 V std::string::_Rep::_S_empty_rep_storage
07086be4 00000028 B __malloc_current_mallinfo
07086c0c 00000004 B __malloc_max_sbrked_mem
07086c10 00000004 B __malloc_max_total_mem
07086c14 00000004 B __malloc_top_pad
07086c18 0000000b b __tzname_dst
07086c24 0000000b b __tzname_std
07086c30 00000004 b prev_tzenv
07086c34 00000004 B _daylight
07086c38 00000004 B _timezone
07086c3c 00000004 b initial_env
07086c40 00000004 b heap_start.7420
07086c44 00000004 B fake_heap_end
07086c48 00000004 B fake_heap_start
07086c4c 00000048 B __syscalls
07086c94 00000004 B g_sharedFont
07086c98 00000004 B charPerSheet
07086c9c 00000004 B hidMemHandle
07086ca0 00000004 B hidHandle
07086ca4 00000014 B hidEvents
07086cb8 00000004 B hidSharedMem
07086cbc 00000004 B gspEventThread
07086cc0 00000004 B gspEvent
07086cc4 00000004 B gspGpuHandle
07086cc8 00000004 B gspSharedMemHandle
07086ccc 00000004 B gspThreadEventHandle
07086cd0 00000004 B irrstMemHandle
07086cd4 00000004 B irrstEvent
07086cd8 00000004 B irrstHandle
07086cdc 00000004 B irrstSharedMem
07086ce0 00000004 B __ctru_linear_heap
07086ce4 00000004 B __tmp
07086ce8 00000004 B __ctru_linear_heap_size
07086cec 00000004 B __system_retAddr
07086cf0 00000004 B __ctru_heap
07086cf4 B __c_bss_end
07086cf4 B __tls_start
07086d14 A __end__
07086d14 B __tls_end
