00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_uldivmod
07000e8c t deregister_tm_clones
07000eb8 t register_tm_clones
07000ef0 t __do_global_dtors_aux
07000f34 t frame_dummy
07000f68 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
07000f90 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07000fa4 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07000fb8 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07000fc8 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
07000fd8 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07000fe8 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07000ff8 00000154 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
0700114c 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
070011b4 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07001218 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
070012d8 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
07001334 000000c4 t unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .part.63]
070013f8 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
070013f8 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001418 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
07001418 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
07001438 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
07001438 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
07001458 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.87]
070014e0 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
0700158c 000001dc t CTRPluginFramework::ToggleTouchscreenForceOn()
07001768 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001768 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
070017a4 00000084 T CTRPluginFramework::IsInRace()
07001828 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001890 0000008c T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
0700191c 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001970 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
070019e4 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001aa8 00000124 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001bcc 000000a0 T CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)
07001c6c 000000bc T CTRPluginFramework::GetRacePointer()
07001d28 00000030 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
07001d58 00000030 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07001d88 0000002c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07001db4 00000030 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07001de4 0000002c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
07001e10 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07001e14 0000003c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07001e50 000000a0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
07001ef0 000000bc T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07001fac 00000280 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
0700222c 0000022c T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
07002458 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
070025d8 00000038 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
07002610 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07002740 0000009c T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
070027dc 000000a4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002880 0000004c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
070028cc 00000050 T CTRPluginFramework::GetFNsPointer()
0700291c 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002984 00000070 T CTRPluginFramework::GetOldPointer5CC()
070029f4 00000034 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002a28 00000070 T CTRPluginFramework::GetOldPointer5D0()
07002a98 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002ae0 0000009c T CTRPluginFramework::GetItemPointer()
07002b7c 00000168 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002ce4 000000ac T CTRPluginFramework::GetTotalPlayers()
07002d90 000001ec T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07002f7c 00000058 T CTRPluginFramework::GetTime()
07002fd4 0000002c T CTRPluginFramework::GetMinutes()
07003000 0000001c T CTRPluginFramework::GetSeconds()
0700301c 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
070030d4 00000070 T CTRPluginFramework::SubToTime(unsigned short)
07003144 00000428 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
0700356c 0000005c T CTRPluginFramework::writeItem(unsigned long)
070035c8 000000e8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
070036b0 0000001c T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
070036cc 000000bc T CTRPluginFramework::writeSpeed(unsigned long)
07003788 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003794 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
070037a0 0000026c T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003a0c 0000026c T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003c78 00000048 T CTRPluginFramework::writeVR(unsigned long)
07003cc0 000000d8 T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07003d98 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07003db4 00000064 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07003e18 0000004c T CTRPluginFramework::writeLocation(unsigned long)
07003e64 00000064 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
07003ec8 00000064 T CTRPluginFramework::writeFlag(unsigned short)
07003f2c 000000f8 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
07004024 00001698 T CTRPluginFramework::main()
070056bc 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
070056c0 00000004 T CTRPluginFramework::OnProcessExit()
070056c4 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005848 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700588c 00000104 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005990 000001a8 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
07005b38 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework6offsetE
07005c28 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
07005ca0 00000038 T OnLoadCro
07005cd8 00000170 T CTRPluginFramework::Initialize()
07005e48 000000b0 T CTRPluginFramework::ThreadExit()
07005ef8 00000060 T abort
07005f58 0000003c T CTRPluginFramework::ThreadInit(void*)
07005f94 0000008c T LaunchMainThread
07006020 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07006104 00000408 T CTRPluginFramework::KeepThreadMain(void*)
0700650c 0000000c t _GLOBAL__sub_I_g_mainThread
07006518 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006564 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070065e0 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
070066a4 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
0700671c 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
0700671c 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07006734 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07006734 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07006740 00000008 T CTRPluginFramework::Color::ToU32() const
07006748 00000120 T CTRPluginFramework::Color::Fade(double)
07006868 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
070068a8 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07006924 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07006b38 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07006c58 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006c58 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006cc8 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07006cc8 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07006cf4 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07006d08 00000044 T CTRPluginFramework::PluginMenu::Run() const
07006d4c 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07006d54 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07006d64 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07006d70 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006d70 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006db0 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07006db0 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07006dd8 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07006de8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006de8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006e34 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07006e34 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07006e64 00000010 T CTRPluginFramework::MenuEntry::Disable() const
07006e74 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07006e7c 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
07006e84 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07006e8c 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006f50 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07006ff8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006ff8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007040 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007040 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070070a8 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
070070a8 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
070070d4 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070070dc 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070070f8 00000028 T CTRPluginFramework::Keyboard::Open() const
07007120 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007198 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007248 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0700729c 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007304 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0700730c 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007314 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
070073b0 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700743c 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070074e4 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070075cc 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007658 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07007700 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070077e8 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007874 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0700791c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07007a04 00000028 t __tcf_0
07007a2c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07007aa4 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07007aac 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07007b2c 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07007ba8 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07007c80 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007c80 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007c9c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07007c9c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07007cdc 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07007cec 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07007dac 00000020 T CTRPluginFramework::HotkeyManager::Count()
07007dcc 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007f3c 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008068 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008190 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07008200 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008288 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
070082cc 0000004c T CTRPluginFramework::Directory::Close() const
07008318 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
0700832c 00000008 T CTRPluginFramework::Directory::IsOpen() const
07008334 00000040 T CTRPluginFramework::Directory::Directory()
07008334 00000040 T CTRPluginFramework::Directory::Directory()
07008374 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
070083a8 00000060 T CTRPluginFramework::Directory::~Directory()
070083a8 00000060 T CTRPluginFramework::Directory::~Directory()
07008408 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008408 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008428 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070084c0 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008558 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070085f8 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070086cc 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008760 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070088ac 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070088ac 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008904 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008940 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07008940 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700895c 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07008acc 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
07008ae8 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07008c10 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
07008c88 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07008cf0 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07008d9c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07008de0 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07008fbc 000001b4 T CTRPluginFramework::Directory::_List() const
07009170 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009250 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009334 0000000c T CTRPluginFramework::FwkSettings::Get()
07009340 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
07009420 00000010 T CTRPluginFramework::Process::GetHandle()
07009430 00000010 T CTRPluginFramework::Process::GetTitleID()
07009440 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700949c 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070094d4 00000024 T CTRPluginFramework::Process::GetTextSize()
070094f8 00000008 T CTRPluginFramework::Process::Pause()
07009500 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07009510 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
070095b8 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
070095bc 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07009608 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07009640 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
07009664 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
07009680 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
070096a4 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070096e0 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07009708 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07009728 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
07009748 0000002c T CTRPluginFramework::Hook::Hook()
07009748 0000002c T CTRPluginFramework::Hook::Hook()
07009774 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700978c 00000230 T CTRPluginFramework::Hook::Enable()
070099bc 0000005c T CTRPluginFramework::Hook::Disable()
07009a18 00000014 T CTRPluginFramework::Mutex::Mutex()
07009a18 00000014 T CTRPluginFramework::Mutex::Mutex()
07009a2c 00000028 T CTRPluginFramework::Mutex::~Mutex()
07009a2c 00000028 T CTRPluginFramework::Mutex::~Mutex()
07009a54 00000004 T CTRPluginFramework::Mutex::Lock()
07009a58 00000014 T CTRPluginFramework::Mutex::TryLock()
07009a6c 00000004 T CTRPluginFramework::Mutex::Unlock()
07009a70 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07009a70 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07009a94 0000004c T CTRPluginFramework::Lock::~Lock()
07009a94 0000004c T CTRPluginFramework::Lock::~Lock()
07009ae0 00000074 T CTRPluginFramework::File::Close() const
07009b54 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
07009c0c 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
07009cfc 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07009d28 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07009e0c 00000008 T CTRPluginFramework::File::Tell() const
07009e14 00000030 T CTRPluginFramework::File::Rewind() const
07009e44 00000034 T CTRPluginFramework::File::Flush() const
07009e78 0000006c T CTRPluginFramework::File::GetSize() const
07009ee4 00000008 T CTRPluginFramework::File::IsOpen() const
07009eec 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07009f00 00000044 T CTRPluginFramework::File::File()
07009f00 00000044 T CTRPluginFramework::File::File()
07009f44 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009fd8 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a0ac 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a130 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a1d0 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700a2d8 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a2d8 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700a344 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700a38c 00000014 T CTRPluginFramework::Time::Time()
0700a38c 00000014 T CTRPluginFramework::Time::Time()
0700a3a0 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700a3c0 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700a3d8 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700a3e0 00000028 T CTRPluginFramework::Seconds(float)
0700a408 00000010 T CTRPluginFramework::Milliseconds(int)
0700a418 00000008 T CTRPluginFramework::Microseconds(long long)
0700a420 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a434 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a448 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a45c 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700a474 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700a4c0 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700a4d8 00000010 T CTRPluginFramework::System::IsNew3DS()
0700a4e8 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700a4fc 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700a518 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700a534 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700a550 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700a56c 0000002c T CTRPluginFramework::Controller::Update()
0700a598 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700a610 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a66c 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700a6c8 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700a724 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700a768 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700a7e8 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a89c 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a9d8 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700aa10 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700aa2c 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700ac80 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700ac80 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700acc4 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700b404 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b40c 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b450 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700b55c 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700b5c4 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700b5e0 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700b61c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700b640 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b664 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700b6dc 00000024 W CTRPluginFramework::File::~File()
0700b6dc 00000024 W CTRPluginFramework::File::~File()
0700b700 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700b730 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700b83c 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700ba08 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700bce8 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700bdb4 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700be70 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700bf2c 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700bf88 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700bfd8 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700c058 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700c228 00000004 T CTRPluginFramework::Preferences::Initialize()
0700c22c 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700c318 00000010 T CTRPluginFramework::Glyph::Width() const
0700c328 00000060 T CTRPluginFramework::Font::Initialize()
0700c388 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700c6dc 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700c9e0 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700caec 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700cb54 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700cb74 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700cba4 00000020 W CTRPluginFramework::Renderer::GetContext()
0700cbc4 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700cc24 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700cd8c 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700cef8 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700cf98 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700d180 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700d1b0 00000028 T CTRPluginFramework::Window::~Window()
0700d1b0 00000028 T CTRPluginFramework::Window::~Window()
0700d1d8 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700d1d8 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700d278 00000064 T CTRPluginFramework::Window::Draw() const
0700d2dc 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700d3b4 00000018 T CTRPluginFramework::Window::DrawButton() const
0700d3cc 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700d3e4 00000018 T CTRPluginFramework::Window::MustClose() const
0700d3fc 0000002c T CTRPluginFramework::Window::Close() const
0700d428 00000004 T CTRPluginFramework::Window::GetRect() const
0700d42c 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700d458 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700d500 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700d630 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700d6fc 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700d848 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700d98c 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700d9c4 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700db64 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700dd28 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700df5c 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700dfcc 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700e038 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700e04c 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700e070 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700e08c 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700e0bc 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700e0ec 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700e114 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700e13c 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700e15c 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700e198 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700e1e0 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700e224 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700e340 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700e360 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700e3d0 00000038 t __tls_init
0700e3d0 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700e408 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700e444 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e4b8 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e524 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e5ac 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e640 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e6d0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
0700e748 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
0700e7b8 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0700e7dc 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0700e800 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700e800 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700e840 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0700e848 00000008 T CTRPluginFramework::BMPImage::Width() const
0700e850 00000008 T CTRPluginFramework::BMPImage::Height() const
0700e858 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0700e860 00000010 T CTRPluginFramework::BMPImage::data() const
0700e870 0000001c T CTRPluginFramework::BMPImage::end() const
0700e88c 00000010 W CTRPluginFramework::BMPImage::DataClear()
0700e89c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700e89c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700e944 0000003c T CTRPluginFramework::BMPImage::Unload()
0700e980 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
0700eabc 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700eac4 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700ed14 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700eee8 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700ef30 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0700ef60 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700f034 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
0700f0b4 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0700f0d8 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700f1f4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700f1f4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700f248 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700f568 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f568 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f5b4 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700f600 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700f910 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700f9d0 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
0700fb00 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0700fc6c 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0700fcac 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700fcac 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700fccc 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0700fe3c 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0700ff30 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0700ffc4 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0701006c 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070102f8 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
070102f8 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0701033c 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07010390 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
07010518 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
070105c4 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07010608 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07010c88 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010e30 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07010e30 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07010e5c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07010e5c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07010e7c 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07010f2c 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07010f88 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010f88 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701100c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07011018 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07011034 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07011040 000000cc T CTRPluginFramework::OSDImpl::Draw()
0701110c 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
070111e4 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07011210 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07011258 0000020c T CTRPluginFramework::InstallOSD()
07011464 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
070114ac 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07011584 00000108 T CTRPluginFramework::OSDImpl::Update()
0701168c 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
07011d14 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07011d7c 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07011de8 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07012008 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07012034 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07012070 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
070120ac 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
070120e8 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07012124 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07012160 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701218c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
070121c8 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07012204 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07012240 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701227c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
070122a8 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
070122e4 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07012310 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701233c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
07012378 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
070123a4 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
070123e0 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0701240c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07012440 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701247c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
070124a8 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
070124e4 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07012510 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701253c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07012568 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07012594 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
070125c0 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
070125ec 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07012618 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07012644 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07012680 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070126ac 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
0701273c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0701273c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0701275c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0701275c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0701278c 0000001c W CTRPluginFramework::TextBox::~TextBox()
070127a8 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070127a8 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012888 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07012890 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07012890 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07012924 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07012944 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07012acc 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07012aec 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07012b08 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07012b24 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07012b2c 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07012b34 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07012b34 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07012b54 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07012c38 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07013334 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0701338c 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07013470 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
070134ac 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
070135dc 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07013718 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
070137d0 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
070138d8 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070138d8 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701395c 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07013a50 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07013b88 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07013d20 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07013d20 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07013e1c 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07013e1c 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07013fbc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07014034 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07014034 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07014110 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07014110 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07014228 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07014264 00000058 T CTRPluginFramework::Menu::CloseAll()
070142bc 00000030 T CTRPluginFramework::Menu::~Menu()
070142bc 00000030 T CTRPluginFramework::Menu::~Menu()
070142ec 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070142f8 00000008 T CTRPluginFramework::Menu::GetFolder() const
07014300 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07014308 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
07014348 00000384 T CTRPluginFramework::Menu::Draw() const
070146cc 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
07014758 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
070147e4 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07014a0c 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07014b80 00000068 T CTRPluginFramework::Menu::ShowNote()
07014be8 00000008 T CTRPluginFramework::Menu::CloseNote()
07014bf0 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07014bf8 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07014c38 00000044 T CTRPluginFramework::Menu::Pop()
07014c7c 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07014d40 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07014df8 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07014e00 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014e00 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014e28 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07014e44 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014e44 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014f18 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014f34 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014f34 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014fec 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014fec 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070150a8 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
070150bc 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701510c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07015124 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07015148 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
070151f0 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07015200 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07015224 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07015284 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07015294 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070152a4 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070152b4 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07015344 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07015460 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
070154d0 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07015574 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
070155a0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070155a0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070155d0 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070155d0 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701563c 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07015790 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
070157cc 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070157cc 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015938 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07015990 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015a44 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015b24 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07015b9c 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07015b9c 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07016060 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0701606c 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0701638c 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07016494 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
070168e8 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07016a04 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07016a90 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07016acc 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07016af8 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07016bc8 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07016c48 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07016cc4 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07016d48 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07016da4 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07016de4 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07016f14 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07017250 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07017464 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0701747c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07017490 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
070174a4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070174b8 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070175f4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070175f8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070175fc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07017614 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0701762c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07017644 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0701765c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07017674 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0701768c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
070176a4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
070176bc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
070176d4 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07017718 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07017790 00000064 t CTRPluginFramework::MenuHotkeyModifier()
070177f4 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
0701788c 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07017a30 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07017bb4 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07017c60 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017d84 0000005c t CTRPluginFramework::Reboot()
07017de0 00000064 t CTRPluginFramework::Shutdown()
07017e44 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07018038 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
07018a38 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07018a38 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07018bc8 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07018ce4 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07018d70 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07018db0 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07018f20 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07018fcc 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
070195e4 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07019620 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701965c 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701966c 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701966c 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019744 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07019744 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07019780 0000001c T CTRPluginFramework::SubMenu::operator()()
0701979c 00000200 T CTRPluginFramework::SubMenu::Draw()
0701999c 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07019a60 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07019a68 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
07019a84 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019c28 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019c74 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
07019c74 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
07019c78 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
07019c7c 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
07019c80 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
07019e1c 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
07019f18 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701a054 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701a0cc 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701a31c 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701a570 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701a76c 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701a94c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701a968 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701aa24 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701aa40 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701aab0 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701aae0 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701ab1c 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701abc4 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701abf8 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701ac28 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701acb4 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701ad4c 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701ae18 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701aed4 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701af84 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701b118 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701b128 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701b138 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701b148 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701b148 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701b3bc 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701b400 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701b5c8 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701b68c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701b6e4 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701b7c8 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701b94c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701b978 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701b978 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701b9e0 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701ba08 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701bb5c 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701bbd0 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701bd70 00000160 T CTRPluginFramework::HexEditor::_Update()
0701bed0 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701c170 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701c184 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c184 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c1ac 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701c1c8 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701c2e0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c2e0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c3b0 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c3b0 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c484 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701c48c 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701c4a0 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701c4ac 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701c4b4 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701c4d8 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701c508 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701c524 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701c58c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c58c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c5ac 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c5c8 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c5c8 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c65c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c65c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c6bc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c6bc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c71c 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701c720 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701c798 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701c858 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701c88c 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701cc84 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701cc9c 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701cf60 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701cf60 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701d120 00000158 T CTRPluginFramework::GuideReader::Draw()
0701d278 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701d2ec 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701d354 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701d354 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701d39c 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701d3e8 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701d3f4 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701d420 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701d47c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701d504 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701d568 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701d568 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701d5c8 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d5c8 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d774 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d774 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d930 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701d930 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701d994 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701d99c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701d9a4 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701d9ac 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701d9b4 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701d9bc 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701db20 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701df78 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701e008 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701e088 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701e10c 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701e26c 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0701e4ec 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701ea58 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701eac0 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701eb10 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701eb80 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701eb88 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0701ec4c 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701ee28 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701ee8c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701eeb8 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701eeb8 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701eed8 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701efa4 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701f060 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701f124 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701f690 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701fc00 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0701fcb8 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0702070c 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
070207c4 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07021408 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702144c 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
07021508 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
070216cc 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
0702171c 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07021774 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
070217bc 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07021ae0 00000254 T CTRPluginFramework::KeyboardImpl::Run()
07021d34 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07021dac 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07021dc0 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07021de4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
07021e6c 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
07021f7c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07021fd8 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
07022070 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07022070 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070222c0 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
070222f4 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07022348 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0702236c 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07022394 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07022470 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07022594 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07022760 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022760 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022788 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07022900 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07022a7c 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07022be4 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
07022c20 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07022d68 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07022d98 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07022e6c 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0702306c 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
070230e4 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
070231ac 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07023364 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0702350c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07023584 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
070235e0 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070236f8 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0702375c 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
070238c8 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070238c8 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07023d20 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
070240dc 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0702414c 000000f4 t CTRPluginFramework::ClearSearchFolder()
07024240 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07024274 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0702449c 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
070244c4 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07024534 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070245fc 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07024638 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
070248a0 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07024984 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070249c4 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
070249f4 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07024ac8 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07024d54 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0702510c 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
07025164 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07025164 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07025190 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
0702519c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
070251a8 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07025304 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07025340 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
0702534c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
07025358 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
07025378 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07025514 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07025570 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
070256cc 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
070256e4 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07025808 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
070258cc 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07025a7c 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07025b40 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07025bc0 00000044 T CTRPluginFramework::Search::UpdateProgress()
07025c04 00000194 T CTRPluginFramework::Search::CheckNextRegion()
07025d98 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
07025e10 00000008 T CTRPluginFramework::Search::GetHeader() const
07025e18 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07025e60 0000000c T CTRPluginFramework::Search::GetType() const
07025e6c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07025e84 00000070 T CTRPluginFramework::Search::WriteHeader()
07025ef4 00000058 T CTRPluginFramework::Search::WriteResults()
07025f4c 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07025f98 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
070261d8 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070261d8 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07026418 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070264e0 00000088 T CTRPluginFramework::Search::CreateIndexTable()
07026568 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026568 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026710 00000080 T CTRPluginFramework::Search::Cancel()
07026790 00000118 T CTRPluginFramework::Search::ExecuteSearch()
070268a8 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
0702696c 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07026a2c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07026aa4 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07026d0c 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07026f9c 00000048 W CTRPluginFramework::Search::~Search()
07026f9c 00000048 W CTRPluginFramework::Search::~Search()
07026fe4 00000044 T CTRPluginFramework::Search32::~Search32()
07026fe4 00000044 T CTRPluginFramework::Search32::~Search32()
07027028 0000001c T CTRPluginFramework::Search32::~Search32()
07027044 0000001c W CTRPluginFramework::Search::~Search()
07027060 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07027060 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07027288 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027288 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070272a8 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070272a8 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07027320 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027478 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070274c4 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07027608 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0702774c 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0702777c 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07027840 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0702787c 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
070278b4 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027994 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070279e0 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07027cf8 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07027e70 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702815c 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
07028300 0000002c T CTRPluginFramework::Screenshot::Initialize()
0702832c 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070283d8 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702846c 0000003c T CTRPluginFramework::SystemImpl::Status()
070284a8 000000c8 T CTRPluginFramework::HookManager::Init()
07028570 00000018 T CTRPluginFramework::HookManager::Lock()
07028588 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
07028630 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
07028690 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
07028690 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
070286c8 00000038 T CTRPluginFramework::Scheduler::Core::Core()
070286c8 00000038 T CTRPluginFramework::Scheduler::Core::Core()
07028700 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07028748 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07028854 000000d4 T CTRPluginFramework::Scheduler::Initialize()
07028928 00000050 T CTRPluginFramework::Scheduler::Exit()
07028978 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07028978 00000048 T CTRPluginFramework::Scheduler::Scheduler()
070289c0 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
07028a2c 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07028afc 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07028b2c 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
07028b48 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
07028c50 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
07028c68 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07028c68 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07028cac 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
07028d00 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
07028de0 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
07028f18 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07028fb4 00000030 T CTRPluginFramework::ScreenImpl::Copy()
07028fe4 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07028fec 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07029050 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
070290b4 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07029124 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07029198 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07029208 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
070292d8 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702939c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070293f8 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
07029498 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
070294f0 000000bc T CTRPluginFramework::ScreenImpl::Clean()
070295ac 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
07029684 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
070296ec 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
070296f4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
070296fc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
07029704 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
07029720 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702973c 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
07029794 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
070297c4 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
07029820 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07029898 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070298bc 00000004 t addrMapNodeDestructor(rbtree_node*)
070298c0 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070299f0 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070299f8 00000070 T CTRPluginFramework::Heap::Free(void*)
07029a68 0000000c T CTRPluginFramework::Heap::SpaceFree()
07029a74 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07029aa4 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029ba8 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07029d84 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07029d84 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07029e48 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07029ea8 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07029eb4 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07029ef4 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07029f04 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07029f1c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07029f30 00000004 T Kernel::Initialize()
07029f34 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07029f4c 0000000c T KProcess::GetCurrent()
07029f58 00000024 T KProcess::PatchCore2Access()
07029f7c 0000002c T KProcess::PatchCategory(unsigned long)
07029fa8 00000014 T KProcess__PatchCategory
07029fbc 0000002c T KProcess::PatchMaxPriority(unsigned long)
07029fe8 00000014 T KProcess__PatchMaxPriority
07029ffc 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702a080 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702a0b4 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702a0b4 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702a0d4 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702a1b8 00000018 T IsPaused
0702a1d0 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702a20c 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702a228 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702a244 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702a2ac 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702a328 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702a3c4 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702a474 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702a53c 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702a610 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702a6a8 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702a704 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a704 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a794 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702a8f4 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702a930 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702abcc 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702acc4 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702accc 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702acf8 00000034 W MemPool::DelBlock(MemBlock*)
0702ad2c 0000005c T MemPool::CoalesceRight(MemBlock*)
0702ad88 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702aea0 000000fc T MemPool::Deallocate(MemChunk const&)
0702af9c 00000020 T MemPool::GetFreeSpace()
0702afbc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702afe0 00000004 t addrMapNodeDestructor(rbtree_node*)
0702afe4 00000154 T vramMemAlign
0702b138 00000008 T vramAlloc
0702b140 00000070 T vramFree
0702b1b0 00000030 t _GLOBAL__sub_I_vramMemAlign
0702b1e0 000001d8 T threadCreate
0702b3b8 0000002c T threadFree
0702b3e4 00000024 T threadJoin
0702b408 00000020 T threadGetCurrent
0702b428 0000003c T threadExit
0702b464 0000003c t _thread_begin
0702b4a0 00000050 T srvExit
0702b4f0 00000034 T srvRegisterClient
0702b524 00000064 T srvInit
0702b588 00000068 T srvGetServiceHandleDirect
0702b5f0 00000004 T srvGetServiceHandle
0702b5f4 00000034 T srvPublishToSubscriber
0702b628 00000034 T errfExit
0702b65c 00000058 T errfInit
0702b6b4 0000003c T ERRF_Throw
0702b6f0 00000090 T ERRF_ExceptionHandler
0702b780 000000a8 T fontEnsureMapped
0702b828 00000110 T fontGlyphIndexFromCodePoint
0702b938 00000074 T fontGetCharWidthInfo
0702b9ac 0000000c T __sync_init
0702b9b8 00000018 T __sync_fini
0702b9d0 00000018 T LightLock_Init
0702b9e8 0000008c T LightLock_Lock
0702ba74 00000034 T LightLock_TryLock
0702baa8 00000050 T LightLock_Unlock
0702baf8 00000018 T RecursiveLock_Init
0702bb10 00000030 T RecursiveLock_Lock
0702bb40 00000044 T RecursiveLock_TryLock
0702bb84 00000034 T RecursiveLock_Unlock
0702bbb8 00000030 T LightEvent_Init
0702bbe8 00000060 T LightEvent_Clear
0702bc48 00000064 T LightEvent_Pulse
0702bcac 000000b4 T LightEvent_Signal
0702bd60 000000a8 T LightEvent_Wait
0702be08 000000a0 T cfguInit
0702bea8 00000034 T cfguExit
0702bedc 00000044 T CFGU_GetConfigInfoBlk2
0702bf20 00000014 T CFGU_GetSystemLanguage
0702bf34 00000028 t fsSession
0702bf5c 00000044 t fsSessionForArchive
0702bfa0 00000038 T fsExit
0702bfd8 00000028 T FSUSER_Initialize
0702c000 000000b0 T fsInit
0702c0b0 00000080 T FSUSER_OpenFile
0702c130 00000068 T FSUSER_DeleteFile
0702c198 000000a4 T FSUSER_RenameFile
0702c23c 00000068 T FSUSER_DeleteDirectoryRecursively
0702c2a4 00000080 T FSUSER_CreateFile
0702c324 00000070 T FSUSER_CreateDirectory
0702c394 000000a4 T FSUSER_RenameDirectory
0702c438 0000006c T FSUSER_OpenDirectory
0702c4a4 00000074 T FSUSER_OpenArchive
0702c518 00000058 T FSFILE_Read
0702c570 00000060 T FSFILE_Write
0702c5d0 00000038 T FSFILE_GetSize
0702c608 00000028 T FSFILE_SetSize
0702c630 0000003c T FSFILE_Close
0702c66c 00000024 T FSFILE_Flush
0702c690 00000054 T FSDIR_Read
0702c6e4 0000003c T FSDIR_Close
0702c720 00000104 T aptSendCommand
0702c824 0000006c T APT_CheckNew3DS
0702c890 00000048 T APT_GetSharedFont
0702c8d8 000000a0 T amInit
0702c978 00000034 T amExit
0702c9ac 00000088 T acInit
0702ca34 00000034 T acExit
0702ca68 000000bc T hidExit
0702cb24 00000034 T hidCheckSectionUpdateTime
0702cb58 00000174 T hidScanInput
0702cccc 00000010 T hidKeysHeld
0702ccdc 00000010 T hidKeysDown
0702ccec 00000010 T hidKeysUp
0702ccfc 00000018 T hidTouchRead
0702cd14 00000090 T HIDUSER_GetHandles
0702cda4 00000174 T hidInit
0702cf18 000000e8 t gspEventThreadMain
0702d000 000000a0 T gspInitEventHandler
0702d0a0 00000040 T gspExitEventHandler
0702d0e0 0000008c T gspExit
0702d16c 0000005c T gspWaitForEvent
0702d1c8 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702d22c 000000dc T gspInit
0702d308 00000034 T irrstCheckSectionUpdateTime
0702d33c 00000070 T irrstScanInput
0702d3ac 0000001c T irrstKeysHeld
0702d3c8 00000050 T IRRST_GetHandles
0702d418 00000034 T IRRST_Initialize
0702d44c 00000128 T irrstInit
0702d574 0000002c T IRRST_Shutdown
0702d5a0 000000a8 T irrstExit
0702d648 00000028 t __ctru_get_reent
0702d670 000000ec T __system_initSyscalls
0702d75c 000000ac T utf8_to_utf16
0702d808 00000138 T decode_utf8
0702d940 0000005c T decode_utf16
0702d99c 000000d4 T utf16_to_utf8
0702da70 000000e0 T encode_utf8
0702db50 00000054 T encode_utf16
0702dba4 00000054 T rbtree_find
0702dbf8 00000014 t is_black
0702dc0c 000002bc T rbtree_remove
0702dec8 00000050 T rbtree_node_next
0702df18 00000090 T rbtree_rotate
0702dfa8 00000174 t do_insert
0702e11c 00000008 T rbtree_insert
0702e124 00000010 T rbtree_init
0702e134 T LoadCROHooked
0702e148 T AR__ExecuteRoutine
0702e170 t stackBak
0702e178 T svcCustomBackdoor
0702e180 T svcConvertVAToPA
0702e188 T svcFlushDataCacheRange
0702e190 T svcMapProcessMemoryEx
0702e1a4 T svcUnmapProcessMemoryEx
0702e1ac T svcControlProcess
0702e1b4 T svcQueryMemory
0702e1e4 T svcCreateThread
0702e204 T svcExitThread
0702e20c T svcSleepThread
0702e214 T svcSetThreadPriority
0702e21c T svcCreateEvent
0702e230 T svcSignalEvent
0702e238 T svcClearEvent
0702e240 T svcMapMemoryBlock
0702e248 T svcUnmapMemoryBlock
0702e250 T svcCreateAddressArbiter
0702e264 T svcArbitrateAddress
0702e27c T svcCloseHandle
0702e284 T svcWaitSynchronization
0702e28c T svcWaitSynchronizationN
0702e2b4 T svcGetSystemTick
0702e2bc T svcGetSystemInfo
0702e2d4 T svcGetProcessInfo
0702e2ec T svcConnectToPort
0702e300 T svcSendSyncRequest
0702e308 T svcOpenProcess
0702e31c T svcGetProcessId
0702e330 T svcBreak
0702e338 T svcInvalidateProcessDataCache
0702e340 T svcFlushProcessDataCache
0702e348 T svcKernelSetState
0702e350 T svcQueryProcessMemory
0702e374 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e374 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e3bc 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e3bc 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e3f8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e3f8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e434 00000008 T CTRPluginFramework::MessageBox::operator()() const
0702e43c 00000030 t CTRPluginFramework::GetCurrentTime()
0702e46c 00000014 T CTRPluginFramework::Clock::Clock()
0702e46c 00000014 T CTRPluginFramework::Clock::Clock()
0702e480 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702e480 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702e488 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
0702e4c0 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0702e4f0 00000044 T CTRPluginFramework::Clock::Restart()
0702e534 00000014 T CTRPluginFramework::Touch::IsDown()
0702e548 00000028 T CTRPluginFramework::Touch::GetPosition()
0702e570 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e570 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e5f4 00000048 T CTRPluginFramework::Task::~Task()
0702e5f4 00000048 T CTRPluginFramework::Task::~Task()
0702e63c 00000030 T CTRPluginFramework::Task::Start() const
0702e66c 00000044 T CTRPluginFramework::Task::Wait() const
0702e6b0 00000014 T CTRPluginFramework::Task::Status() const
0702e6c4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e6c4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e6ec 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0702e76c 00000048 T CTRPluginFramework::LineWriter::Flush()
0702e7b4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e7b4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e7d0 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e83c 00000018 T CTRPluginFramework::LineWriter::Close()
0702e854 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e918 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
0702e990 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702eccc 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702eccc 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702ecec 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ed74 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ed74 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702eea0 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0702eedc 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702efdc 00000084 T CTRPluginFramework::ARCode::Update()
0702f060 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702f060 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702f084 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0702f0ac 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702f0ac 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702f164 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702f164 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702f198 00000040 T CTRPluginFramework::ARCodeContext::Update()
0702f1d8 00000090 T CTRPluginFramework::ARCodeContext::Clear()
0702f268 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702f340 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702f340 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702f360 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
0702f378 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f46c 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
0702f488 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f59c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f5ac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
0702f624 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702f63c 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702f690 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f6d4 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f71c 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702fbf0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702fbf0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702fc34 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702fc34 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702fc48 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702fc68 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702fde0 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702ff04 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07030638 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07030688 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07030688 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070306f0 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703070c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703070c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030758 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07030874 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07030904 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07030a1c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07030aa4 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07030b00 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030b00 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030b78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030b78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07030b78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030b78 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07030bc8 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07031f1c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07031f1c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070320b0 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07032364 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
070323ec 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032430 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07032444 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07032480 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070325e8 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032624 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07032688 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
070326ac 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
070326d4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070326d4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070326fc 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07032a7c 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07033100 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0703314c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07033204 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07033678 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07033b44 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07033c3c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07033cc4 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07033d00 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07034024 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
070340a0 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0703410c 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07034144 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
070341c0 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703458c 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07034790 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07034830 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
070348ec 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
070349a8 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07034a54 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07034ae0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07034c58 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07034d6c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07034e14 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07034e7c 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07034f0c 00000160 T ARM_Disasm::Decode01(unsigned long)
0703506c 00000028 T ARM_Disasm::Decode10(unsigned long)
07035094 0000007c T ARM_Disasm::Decode11(unsigned long)
07035110 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07035178 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
070351c8 00000118 T ARM_Disasm::DecodeALU(unsigned long)
070352e0 000000c4 T ARM_Disasm::Decode00(unsigned long)
070353a4 00000030 T ARM_Disasm::Decode(unsigned long)
070353d4 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
070354ac 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07035790 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07035a80 00000020 T CTRPluginFramework::Button::~Button()
07035a80 00000020 T CTRPluginFramework::Button::~Button()
07035aa0 0000001c T CTRPluginFramework::Button::~Button()
07035abc 00000040 T CTRPluginFramework::Button::operator()()
07035afc 00000148 T CTRPluginFramework::Button::Draw()
07035c44 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07035d98 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035d98 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035ebc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035ebc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035edc 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035edc 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035f70 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035f70 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035f84 00000018 T CTRPluginFramework::Button::Enable(bool)
07035f9c 00000010 T CTRPluginFramework::Button::Enable()
07035fac 00000010 T CTRPluginFramework::Button::Disable()
07035fbc 00000010 T CTRPluginFramework::Button::Lock()
07035fcc 00000010 T CTRPluginFramework::Button::Execute()
07035fdc 00000018 T CTRPluginFramework::Button::SetState(bool)
07035ff4 00000010 T CTRPluginFramework::Button::GetState() const
07036004 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07036004 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07036018 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07036018 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07036038 00000024 T CTRPluginFramework::UIContainer::Draw()
0703605c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07036090 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07036154 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07036194 00000094 T CTRPluginFramework::ComboBox::Draw()
07036228 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07036228 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07036274 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07036290 000000a8 T CTRPluginFramework::ComboBox::operator()()
07036338 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036338 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036384 0000003c T CTRPluginFramework::ComboBox::Clear()
070363c0 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036410 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07036494 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036494 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036498 00000014 T CTRPluginFramework::FloatingButton::Draw()
070364ac 00000014 T CTRPluginFramework::FloatingButton::operator()()
070364c0 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
070364d4 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07036694 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07036694 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070366d4 00000008 W CTRPluginFramework::Drawable::operator()()
070366dc 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070366e0 000002f0 T CTRPluginFramework::TextBox::Draw()
070369d0 00000094 T CTRPluginFramework::TextBox::TextBox()
070369d0 00000094 T CTRPluginFramework::TextBox::TextBox()
07036a64 0000000c T CTRPluginFramework::TextBox::Open() const
07036a70 0000000c T CTRPluginFramework::TextBox::Close() const
07036a7c 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07036a84 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07036ccc 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07036cd8 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07036d70 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07036e24 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07036e7c 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
07036eac 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07036f68 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
07037024 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
070371ec 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070371ec 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07037330 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07037418 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037418 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037590 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037590 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070376e8 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07037760 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07037a14 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07037bb0 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037bb0 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037c70 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07037d0c 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07037dac 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07037dc4 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07037df4 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07037e94 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07037e94 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07037f44 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07037f44 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07037ff0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07037ff0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038070 00000040 T CTRPluginFramework::TouchKey::Clear()
070380b0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070380b0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070380d0 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
070380ec 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070380f4 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07038154 00000060 T CTRPluginFramework::TouchKey::Draw()
070381b4 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07038250 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07038314 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07038314 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07038464 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038464 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038484 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070384a0 0000007c T CTRPluginFramework::NumericTextBox::Draw()
0703851c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07038554 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070385bc 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
070386b4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070386c4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070386d4 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070386dc 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070386e8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070386e8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07038750 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070387c4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
0703883c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703883c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07038888 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07038948 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07038a80 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07038aa8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038b0c 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07038e1c 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07038f10 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07039158 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
07039484 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703950c 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
070395a4 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07039620 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
070396d4 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07039860 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
070398a8 00000148 T CTRPluginFramework::SearchMenu::_Export()
070399f0 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
07039b48 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
07039c2c 00000030 W std::__cxx11::to_string(unsigned long)
07039c5c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07039c5c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07039d10 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07039d94 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703a2dc 00000230 T CTRPluginFramework::SearchMenu::Update()
0703a50c 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703aa1c 000000e4 T CTRPluginFramework::Converter::Converter()
0703aa1c 000000e4 T CTRPluginFramework::Converter::Converter()
0703ab00 00000010 T CTRPluginFramework::Converter::Instance()
0703ab10 00000108 T CTRPluginFramework::Converter::_Draw()
0703ac18 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703ac18 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703ac2c 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703ae48 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b2cc 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b754 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703bbd0 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c1f8 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703cb04 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d414 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703dce8 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e928 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f1cc 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703fb08 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704042c 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070411c8 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041e2c 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042570 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042978 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043058 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070432e8 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043590 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043820 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07043854 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043b78 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07043b9c 00000004 t addrMapNodeDestructor(rbtree_node*)
07043ba0 000000d8 T mappableAlloc
07043c78 00000050 T mappableFree
07043cc8 00000090 T __system_allocateHeaps
07043d58 0000005c t getSysTime
07043db8 000000fc T __libctru_gtod
07043eb4 00000008 T envGetHandle
07043ebc 00000004 T envDestroyHandles
07043ec0 00000020 T __libctru_exit
07043ee0 00000020 T __appExit
07043f00 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07043f00 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07043f2c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07043f2c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07043f44 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0704404c 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
070440ac 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
070440b4 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
070440d8 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
070440fc 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07044120 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07044148 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07044170 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07044198 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07044268 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
070460dc 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0704614c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0704616c 00000004 T operator delete[](void*)
07046170 00000004 T operator new[](unsigned int)
07046174 0000005c T __cxa_guard_acquire
070461d0 0000000c T __cxa_guard_release
070461dc 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0704623c 00000070 T __cxa_init_primary_exception
070462ac 00000054 T __cxa_throw
07046300 000000b0 T __cxa_rethrow
070463b0 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070463b0 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070463d0 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070463fc 00000004 T std::exception::~exception()
070463fc 00000004 T std::exception::~exception()
07046400 00000004 T std::bad_exception::~bad_exception()
07046400 00000004 T std::bad_exception::~bad_exception()
07046404 0000000c T transaction clone for std::exception::what() const
07046404 0000000c T std::exception::what() const
07046410 0000000c T transaction clone for std::bad_exception::what() const
07046410 0000000c T std::bad_exception::what() const
0704641c 00000018 T std::bad_exception::~bad_exception()
07046434 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046434 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046454 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046480 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070464ec 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070465c0 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07046604 0000000c T __cxa_get_globals_fast
07046610 0000000c T __cxa_get_globals
0704661c 00000004 T operator delete(void*, unsigned int)
07046620 000000d0 T __cxa_begin_catch
070466f0 000000d8 T __cxa_end_catch
070467c8 00000004 T std::type_info::~type_info()
070467c8 00000004 T std::type_info::~type_info()
070467cc 00000008 T std::type_info::__is_pointer_p() const
070467cc 00000008 T std::type_info::__is_function_p() const
070467d4 0000004c T std::type_info::operator==(std::type_info const&) const
07046820 00000008 T __cxa_pure_virtual
07046828 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07046990 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
070469f0 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07046ad0 0000074c T __gxx_personality_v0
0704721c 00000004 T operator delete(void*)
07047220 0000005c T operator new(unsigned int)
0704727c 00000010 T __aeabi_atexit
0704728c 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
0704735c 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
07047410 00000044 T __cxa_allocate_exception
07047454 00000030 T __cxa_free_exception
07047484 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070474c4 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07047520 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07047534 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07047534 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07047554 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07047580 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070475e8 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07047614 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07047658 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07047670 00000014 T std::__detail::_List_node_base::_M_unhook()
07047684 0000002c T std::__throw_bad_alloc()
070476b0 00000040 T std::__throw_logic_error(char const*)
070476f0 00000040 T std::__throw_invalid_argument(char const*)
07047730 00000040 T std::__throw_length_error(char const*)
07047770 00000040 T std::__throw_out_of_range(char const*)
070477b0 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704782c 00000038 T std::logic_error::logic_error(char const*)
0704782c 00000038 T std::logic_error::logic_error(char const*)
07047864 00000020 T std::invalid_argument::invalid_argument(char const*)
07047864 00000020 T std::invalid_argument::invalid_argument(char const*)
07047884 00000020 T std::length_error::length_error(char const*)
07047884 00000020 T std::length_error::length_error(char const*)
070478a4 00000020 T std::out_of_range::out_of_range(char const*)
070478a4 00000020 T std::out_of_range::out_of_range(char const*)
070478c4 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07047948 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704794c 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
070479fc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
070479fc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07047a3c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07047a90 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07047aa4 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07047ac8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07047aec 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07047ba4 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07047cb4 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07047d28 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047d28 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047d94 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047d94 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047db8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047e48 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07047f5c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07047fc8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07048034 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048078 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048090 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07048194 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
070481cc 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07048454 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0704848c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070484d8 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07048538 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070485cc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070485dc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070485ec 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07048618 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07048660 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
070486a8 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07048750 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
07048760 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
070487d0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07048800 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704884c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
070488fc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070488fc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704892c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
070489a4 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07048a14 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07048a8c 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07048b8c 00000014 T std::get_new_handler()
07048ba0 00000034 T __cxxabiv1::__terminate(void (*)())
07048bd4 00000018 T std::terminate()
07048bec 0000000c T __cxxabiv1::__unexpected(void (*)())
07048bf8 00000018 T std::unexpected()
07048c10 00000014 T std::get_terminate()
07048c24 00000014 T std::get_unexpected()
07048c38 0000000c T std::bad_alloc::what() const
07048c44 00000020 T std::bad_alloc::~bad_alloc()
07048c44 00000020 T std::bad_alloc::~bad_alloc()
07048c64 0000002c T std::bad_alloc::~bad_alloc()
07048c90 T __cxa_end_cleanup
07048ca0 00000138 T __cxa_type_match
07048dd8 000000b4 T __cxa_begin_cleanup
07048e8c 000000b4 T __gnu_end_cleanup
07048f40 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07048fb0 0000002c T __cxa_call_terminate
07048fdc 0000013c T __cxa_call_unexpected
07049118 00000008 T std::logic_error::what() const
07049120 00000064 T std::logic_error::~logic_error()
07049120 00000064 T std::logic_error::~logic_error()
07049184 0000001c T std::logic_error::~logic_error()
070491a0 00000020 T std::invalid_argument::~invalid_argument()
070491a0 00000020 T std::invalid_argument::~invalid_argument()
070491c0 00000028 T std::invalid_argument::~invalid_argument()
070491e8 00000020 T std::length_error::~length_error()
070491e8 00000020 T std::length_error::~length_error()
07049208 00000028 T std::length_error::~length_error()
07049230 00000020 T std::out_of_range::~out_of_range()
07049230 00000020 T std::out_of_range::~out_of_range()
07049250 00000028 T std::out_of_range::~out_of_range()
07049278 00000174 T ceil
070493ec 000000b8 T ceilf
070494a8 00000174 T floor
0704961c 00000088 T roundf
070496a8 00000020 T log2
070496c8 00000100 T sqrtf
070497c8 0000015c T log
07049924 000000e8 T __ieee754_sqrtf
07049a10 000002c4 T __ieee754_log
07049cd4 00000008 T matherr
07049ce0 00000010 T nan
07049cf0 0000002c T __aeabi_f2lz
07049cf0 0000002c T __fixsfdi
07049d1c 0000002c T __aeabi_d2lz
07049d1c 0000002c T __fixdfdi
07049d48 00000050 T __aeabi_f2ulz
07049d48 00000050 T __fixunssfdi
07049d98 00000050 T __aeabi_d2ulz
07049d98 00000050 T __fixunsdfdi
07049de8 00000158 T __udivmoddi4
07049f40 00000018 t selfrel_offset31
07049f58 0000008c t search_EIT_table
07049fe4 00000040 t __gnu_unwind_get_pr_addr
0704a024 00000118 t get_eit_entry
0704a13c 00000088 t restore_non_core_regs
0704a1c4 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704a1d8 00000004 t _Unwind_DebugHook
0704a1dc 00000068 t unwind_phase2
0704a244 00000134 t unwind_phase2_forced
0704a378 000000a8 T __gnu_Unwind_RaiseException
0704a420 00000024 T __gnu_Unwind_ForcedUnwind
0704a444 00000074 T __gnu_Unwind_Resume
0704a4b8 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704a4d8 00000004 T _Unwind_Complete
0704a4dc 00000018 T _Unwind_DeleteException
0704a4f4 00000068 T _Unwind_VRS_Get
0704a55c 0000002c t _Unwind_GetGR
0704a588 00000068 T _Unwind_VRS_Set
0704a5f0 0000002c t _Unwind_SetGR
0704a61c 000000c0 T __gnu_Unwind_Backtrace
0704a6dc 0000044c t __gnu_unwind_pr_common
0704ab28 00000008 T __aeabi_unwind_cpp_pr0
0704ab30 00000008 W __aeabi_unwind_cpp_pr1
0704ab38 00000008 W __aeabi_unwind_cpp_pr2
0704ab40 00000418 T _Unwind_VRS_Pop
0704af58 00000060 t next_unwind_byte
0704afb8 0000002c t _Unwind_GetGR.constprop.0
0704afe4 00000004 t unwind_UCB_from_context
0704afe8 000003c8 T __gnu_unwind_execute
0704b3b0 00000048 T __gnu_unwind_frame
0704b3f8 00000010 T _Unwind_GetRegionStart
0704b408 0000001c T _Unwind_GetLanguageSpecificData
0704b424 00000008 T _Unwind_GetDataRelBase
0704b42c 00000008 T _Unwind_GetTextRelBase
0704b434 00000010 T ctime
0704b444 00000014 T __cxa_atexit
0704b458 0000000c T __errno
0704b464 0000007c T __libc_init_array
0704b4e0 0000001c T isspace
0704b4fc 0000001c T isxdigit
0704b518 0000001c T localtime
0704b534 00000364 T localtime_r
0704b898 00000024 T __locale_mb_cur_max
0704b8bc 00000008 T __locale_ctype_ptr_l
0704b8c4 00000024 T __locale_ctype_ptr
0704b8e8 00000020 T memalign
0704b908 00000158 T _memalign_r
0704ba60 00000018 T malloc
0704ba78 00000018 T free
0704ba90 000007a8 T _malloc_r
0704c238 000002fc T __utf8_mbtowc
0704c534 00000100 T memchr
0704c634 000000fc T memcmp
0704c730 0000010c T memcpy
0704c83c 0000013c T memmove
0704c978 00000110 T memset
0704ca88 0000000c T __malloc_lock
0704ca94 0000000c T __malloc_unlock
0704caa0 00000044 T rand
0704cae4 000000c8 T snprintf
0704cbac 00000064 T sprintf
0704cc10 00000008 T __seofread
0704cc18 000000f0 T strcpy
0704cd08 00000158 t iso_year_adjust
0704ce60 00001024 t __strftime
0704de84 00000050 T strftime
0704ded4 0000005c T strlen
0704df30 000000f8 T strncmp
0704e028 000000d8 T strncpy
0704e100 00000054 t sulp
0704e158 00001464 T _strtod_l
0704f5c0 000000b8 T strtof
0704f678 000001bc t _strtol_l.isra.0
0704f834 00000050 T _strtol_r
0704f888 00000260 t _strtoull_l.isra.0
0704fae8 00000050 T _strtoull_r
0704fb38 000001d0 t _strtoul_l.isra.0
0704fd08 00000050 T _strtoul_r
0704fd58 00000054 T strtoul
0704fdac 000074a0 t get_arg
07057250 00003e2c T _svfprintf_r
0705b07c 00000038 T time
0705b0b4 00000218 T __tzcalc_limits
0705b2cc 0000000c T __tz_lock
0705b2d8 0000000c T __tz_unlock
0705b2e4 00000010 T _tzset_unlocked
0705b2f4 0000049c T _tzset_unlocked_r
0705b790 000000a0 T _vsnprintf_r
0705b830 00000038 T vsnprintf
0705b868 000000a0 T _wcrtomb_r
0705b908 00000020 T _wcsrtombs_r
0705b928 000000e8 T __utf8_wctomb
0705ba10 0000000c T abs
0705ba1c 0000001c T asctime
0705ba38 00000078 T asctime_r
0705bab0 000000f4 T __register_exitproc
0705bba4 000001bc t quorem
0705bd60 00001224 T _dtoa_r
0705cf84 000000f8 T _malloc_trim_r
0705d07c 000002e4 T _free_r
0705d360 00000104 t rshift
0705d464 000007f8 T __gethex
0705dc5c 00000060 T __match
0705dcbc 00000254 T __hexnan
0705df10 000000c8 T _findenv_r
0705dfd8 00000018 T _getenv_r
0705dff0 0000000c T __gettzinfo
0705dffc 00000280 T gmtime_r
0705e27c 0000000c T labs
0705e288 00000008 T __localeconv_l
0705e290 00000024 T _localeconv_r
0705e2b4 00000088 T _Balloc
0705e33c 0000001c T _Bfree
0705e358 000000d0 T __multadd
0705e428 000000e0 T __s2b
0705e508 00000058 T __hi0bits
0705e560 0000009c T __lo0bits
0705e5fc 00000020 T __i2b
0705e61c 000001d4 T __multiply
0705e7f0 00000100 T __pow5mult
0705e8f0 000000e8 T __lshift
0705e9d8 0000005c T __mcmp
0705ea34 00000168 T __mdiff
0705eb9c 00000078 T __ulp
0705ec14 000000d0 T __b2d
0705ece4 00000104 T __d2b
0705ede8 00000084 T __ratio
0705ee6c 00000088 T __copybits
0705eef4 00000078 T __any_on
0705ef6c 0000000c T nanf
0705ef78 0000009c T frexp
0705f014 00000064 T siprintf
0705f078 00000074 T siscanf
0705f0ec 000000c8 T sniprintf
0705f1b4 000074a0 t get_arg
07066654 00000188 T __ssprint_r
070667dc 0000295c T _svfiprintf_r
07069138 000000dc T _sungetc_r
07069214 0000006c T __ssrefill_r
07069280 000000c8 T _sfread_r
07069348 00001d84 T __ssvfiscanf_r
0706b0cc 000000a4 T __submore
0706b170 00000170 T _wcsnrtombs_l
0706b2e0 00000064 T _wcsnrtombs_r
0706b344 00000090 T _calloc_r
0706b3d4 0000000c T __env_lock
0706b3e0 0000000c T __env_unlock
0706b3ec 00000074 T iswspace
0706b460 000001e0 t __jp2uc
0706b640 000000c4 T _jp2uc
0706b704 000000b4 T _mbrtowc_r
0706b7b8 000004d0 T _realloc_r
0706bc88 000000cc T __sccl
0706bd54 00000274 t _strtoll_l.isra.0
0706bfc8 00000050 T _strtoll_r
0706c018 0000002c T _gettimeofday_r
0706c044 00000070 T _sbrk_r
0706c0b4 00000018 T __libc_lock_acquire
0706c0cc 00000018 T __libc_lock_release
0706c0e4 00000018 T __libc_lock_acquire_recursive
0706c0fc 00000018 T __libc_lock_release_recursive
0706c114 00000028 T __getreent
0706c13c T _fini
0706c154 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0706c33c 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0706c348 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0706c35c 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0706c378 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0706c388 00000030 r ._186
0706c3b8 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0706c3c8 00000090 r ._184
0706c458 00000010 r ._185
0706c4a4 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706c4c4 00000a00 r font
0706cee4 00000058 r CTRPluginFramework::g_OSDPattern
0706cf6c 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706cf80 00000038 r CTRPluginFramework::stable
0706cfb8 00000038 r CTRPluginFramework::ktable
0706cff0 00000048 r CTRPluginFramework::g_ctrpf
0706d038 00000030 r CTRPluginFramework::g_byme
0706d094 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0706d0ac 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706d0c4 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0706d0dc 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0706d0f4 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706d0fc 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706d118 00000038 R vtable for CTRPluginFramework::Search
0706d150 00000038 R vtable for CTRPluginFramework::Search32
0706d188 00000005 r CSWTCH.74
0706d190 00000004 R Search15_array_length
0706d194 00000384 r Search15_array
0706d518 00000004 R UnCheckedCheckbox_array_length
0706d51c 00000384 r UnCheckedCheckbox_array
0706d8a0 00000004 R Unsplash15_array_length
0706d8a4 00000384 r Unsplash15_array
0706dc28 00000004 R Plus25_array_length
0706dc2c 000009c4 r Plus25_array
0706e5f0 00000004 R GameControllerFilled25_array_length
0706e5f4 000009c4 r GameControllerFilled25_array
0706efb8 00000004 R About15_array_length
0706efbc 00000384 r About15_array
0706f340 00000004 R Trash25_array_length
0706f344 000009c4 r Trash25_array
0706fd08 00000004 R Cut25_array_length
0706fd0c 000009c4 r Cut25_array
070706d0 00000004 R CloseWindow20_array_length
070706d4 00000640 r CloseWindow20_array
07070d14 00000004 R AddFavoriteFilled25_array_length
07070d18 000009c4 r AddFavoriteFilled25_array
070716dc 00000004 R ClearSymbolFilled15_array_length
070716e0 00000384 r ClearSymbolFilled15_array
07071a64 00000004 R ClipboardFilled25_array_length
07071a68 000009c4 r ClipboardFilled25_array
0707242c 00000004 R CheckedCheckbox_array_length
07072430 00000384 r CheckedCheckbox_array
070727b4 00000004 R CutFilled25_array_length
070727b8 000009c4 r CutFilled25_array
0707317c 00000004 R CapsLockOn15_array_length
07073180 00000384 r CapsLockOn15_array
07073504 00000004 R TrashFilled25_array_length
07073508 000009c4 r TrashFilled25_array
07073ecc 00000004 R RAM15_array_length
07073ed0 00000384 r RAM15_array
07074254 00000004 R More15_array_length
07074258 00000384 r More15_array
070745dc 00000004 R InfoFilled25_array_length
070745e0 000009c4 r InfoFilled25_array
07074fa4 00000004 R CloseWindowFilled20_array_length
07074fa8 00000640 r CloseWindowFilled20_array
070755e8 00000004 R HandCursor15_array_length
070755ec 00000384 r HandCursor15_array
07075970 00000004 R EnterKey15_array_length
07075974 00000384 r EnterKey15_array
07075cf8 00000004 R Duplicate25_array_length
07075cfc 000009c4 r Duplicate25_array
070766c0 00000004 R Settings15_array_length
070766c4 00000384 r Settings15_array
07076a48 00000004 R File15_array_length
07076a4c 00000384 r File15_array
07076dd0 00000004 R AddFavorite25_array_length
07076dd4 000009c4 r AddFavorite25_array
07077798 00000004 R Edit25_array_length
0707779c 000009c4 r Edit25_array
07078160 00000004 R DuplicateFilled25_array_length
07078164 000009c4 r DuplicateFilled25_array
07078b28 00000004 R Save25_array_length
07078b2c 000009c4 r Save25_array
070794f0 00000004 R Clipboard25_array_length
070794f4 000009c4 r Clipboard25_array
07079eb8 00000004 R Info25_array_length
07079ebc 000009c4 r Info25_array
0707a880 00000004 R EditFilled25_array_length
0707a884 000009c4 r EditFilled25_array
0707b248 00000004 R KeyboardFilled25_array_length
0707b24c 000009c4 r KeyboardFilled25_array
0707bc10 00000004 R PlusFilled25_array_length
0707bc14 000009c4 r PlusFilled25_array
0707c5d8 00000004 R Shutdown15_array_length
0707c5dc 00000384 r Shutdown15_array
0707c960 00000004 R ClearSymbol15_array_length
0707c964 00000384 r ClearSymbol15_array
0707cce8 00000004 R Maintenance15_array_length
0707ccec 00000384 r Maintenance15_array
0707d070 00000004 R Controller15_array_length
0707d074 00000384 r Controller15_array
0707d3f8 00000004 R Grid15_array_length
0707d3fc 00000384 r Grid15_array
0707d780 00000004 R Keyboard25_array_length
0707d784 000009c4 r Keyboard25_array
0707e148 00000004 R CapsLockOnFilled15_array_length
0707e14c 00000384 r CapsLockOnFilled15_array
0707e4d0 00000004 R UserManualFilled15_array_length
0707e4d4 00000384 r UserManualFilled15_array
0707e858 00000004 R Rocket40_array_length
0707e85c 00001900 r Rocket40_array
0708015c 00000004 R Star15_array_length
07080160 00000384 r Star15_array
070804e4 00000004 R EnterKeyFilled15_array_length
070804e8 00000384 r EnterKeyFilled15_array
0708086c 00000004 R GameController25_array_length
07080870 000009c4 r GameController25_array
07081234 00000004 R FolderFilled_array_length
07081238 00000384 r FolderFilled_array
070815bc 00000004 R Restart15_array_length
070815c0 00000384 r Restart15_array
07081974 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07081990 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0708199c 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07081a1c 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07081a30 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07081a38 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07081a40 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07081a48 00000040 r RegNames
07081a88 00000040 r cond_names
07081ac8 00000010 r shift_names
07081ad8 0000001c R vtable for CTRPluginFramework::Button
07081af4 0000001c R vtable for CTRPluginFramework::ComboBox
07081b10 0000001c R vtable for CTRPluginFramework::FloatingButton
07081b2c 0000001c R vtable for CTRPluginFramework::TextBox
07081b48 0000001c R vtable for CTRPluginFramework::TouchKey
07081b64 0000001c R vtable for CTRPluginFramework::NumericTextBox
07083e18 00000014 V vtable for CTRPluginFramework::MenuItem
070844f0 0000001c V vtable for CTRPluginFramework::MenuEntryTools
070858ac 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070858b8 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
070858dc 00000014 R vtable for __gnu_cxx::recursive_init_error
07085914 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0708591c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07085924 0000000c R typeinfo for std::bad_exception
07085930 00000008 R typeinfo for std::exception
07085938 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07085958 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0708597c 00000012 R typeinfo name for std::bad_exception
07085990 0000000d R typeinfo name for std::exception
070859a0 00000014 R vtable for std::bad_exception
070859b4 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070859c0 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070859e8 0000002c R vtable for __cxxabiv1::__si_class_type_info
07085a14 00000008 R typeinfo for std::type_info
07085a1c 0000000d R typeinfo name for std::type_info
07085a2c 0000000c R typeinfo for __cxxabiv1::__class_type_info
07085a38 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07085a5c 0000002c R vtable for __cxxabiv1::__class_type_info
07085c84 0000000c R typeinfo for std::bad_alloc
07085c90 0000000d R typeinfo name for std::bad_alloc
07085ca0 00000014 R vtable for std::bad_alloc
07085cb4 0000000c R typeinfo for std::logic_error
07085cc0 0000000c R typeinfo for std::length_error
07085ccc 0000000c R typeinfo for std::out_of_range
07085cd8 0000000c R typeinfo for std::invalid_argument
07085ce4 00000010 R typeinfo name for std::logic_error
07085cf4 00000011 R typeinfo name for std::length_error
07085d08 00000011 R typeinfo name for std::out_of_range
07085d1c 00000015 R typeinfo name for std::invalid_argument
07085d34 00000014 R vtable for std::logic_error
07085d48 00000014 R vtable for std::length_error
07085d5c 00000014 R vtable for std::out_of_range
07085d70 00000014 R vtable for std::invalid_argument
07085d90 00000004 R _global_impure_ptr
07085ddc 00000060 R __month_lengths
07085ec8 00000014 r fpi.7439
07085edc 00000014 r fpinan.7475
07085ef0 00000028 r tinytens
07085f5c 00000010 r blanks.8562
07085f6c 00000010 r zeroes.8563
07085f7c 000000fc R _C_time_locale
07086244 00000015 r day_name.6011
0708625c 00000024 r mon_name.6012
07086280 00000101 R _ctype_
07086394 00000100 R __hexdig
07086498 00000028 R __mprec_bigtens
070864c0 000000c8 R __mprec_tens
07086588 0000000c r p05.7353
07086594 0000006c R __action_table
07086600 00000100 R __chclass
07086700 0000006c R __state_table
0708676c 00000010 r blanks.8541
0708677c 00000010 r zeroes.8542
0708678c 00000022 r basefix.8096
070867c4 000000bc r a1
07086880 000000bc r a2
0708693c 0000005b r a3
07086998 00000070 r a6
07086a08 000000a2 r a7
07086aac 00000040 r a8
07086aec 0000172a r b02cf
07088218 00001a7c r d02f4
07089db8 R __exidx_start
07089fc8 R __exidx_end
07089fc8 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
07089fcc 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
07089fd0 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
07089fd4 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
07089fd8 00000001 D CTRPluginFramework::g_keepRunning
07089fdc 00000004 D CTRPluginFramework::FwkSettings::Header
07089fe0 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07089fe4 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07089fe8 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
07089fec 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
07089ff0 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07089ff4 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07089ff8 00000004 D CTRPluginFramework::Screenshot::Screens
07089ffc 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708a000 00000001 D CTRPluginFramework::SystemImpl::Language
0708a001 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
0708a004 00000004 D Search15
0708a008 00000004 D UnCheckedCheckbox
0708a00c 00000004 D Unsplash15
0708a010 00000004 D Plus25
0708a014 00000004 D GameControllerFilled25
0708a018 00000004 D About15
0708a01c 00000004 D Trash25
0708a020 00000004 D Cut25
0708a024 00000004 D CloseWindow20
0708a028 00000004 D AddFavoriteFilled25
0708a02c 00000004 D ClearSymbolFilled15
0708a030 00000004 D ClipboardFilled25
0708a034 00000004 D CheckedCheckbox
0708a038 00000004 D CutFilled25
0708a03c 00000004 D CapsLockOn15
0708a040 00000004 D TrashFilled25
0708a044 00000004 D RAM15
0708a048 00000004 D More15
0708a04c 00000004 D InfoFilled25
0708a050 00000004 D CloseWindowFilled20
0708a054 00000004 D HandCursor15
0708a058 00000004 D EnterKey15
0708a05c 00000004 D Duplicate25
0708a060 00000004 D Settings15
0708a064 00000004 D File15
0708a068 00000004 D AddFavorite25
0708a06c 00000004 D Edit25
0708a070 00000004 D DuplicateFilled25
0708a074 00000004 D Save25
0708a078 00000004 D Clipboard25
0708a07c 00000004 D Info25
0708a080 00000004 D EditFilled25
0708a084 00000004 D KeyboardFilled25
0708a088 00000004 D PlusFilled25
0708a08c 00000004 D Shutdown15
0708a090 00000004 D ClearSymbol15
0708a094 00000004 D Maintenance15
0708a098 00000004 D Controller15
0708a09c 00000004 D Grid15
0708a0a0 00000004 D Keyboard25
0708a0a4 00000004 D CapsLockOnFilled15
0708a0a8 00000004 D UserManualFilled15
0708a0ac 00000004 D Rocket40
0708a0b0 00000004 D Star15
0708a0b4 00000004 D EnterKeyFilled15
0708a0b8 00000004 D GameController25
0708a0bc 00000004 D FolderFilled
0708a0c0 00000004 D Restart15
0708a0c4 000001f4 D opcode_names
0708a2b8 D __dso_handle
0708a2bc 00000004 D __cxxabiv1::__unexpected_handler
0708a2c0 00000004 D __cxxabiv1::__terminate_handler
0708a2c4 00000001 D __fdlib_version
0708a2c8 00000004 D _impure_ptr
0708a2d0 00000460 d impure_data
0708a730 0000016c D __global_locale
0708a89c 00000408 D __malloc_av_
0708aca4 00000004 D __malloc_sbrk_base
0708aca8 00000004 D __malloc_trim_threshold
0708acac 0000000c d __malloc_lock_object
0708acb8 00000004 d __tz_lock_object
0708acbc 00000008 D _tzname
0708acc4 0000000c D __atexit_lock
0708acd0 00000040 d tzinfo
0708ad10 00000004 D environ
0708ad14 0000000c d __env_lock_object
0708ad20 D __TMC_END__
0708ad30 d _GLOBAL_OFFSET_TABLE_
0708ad3c D __tdata_lma
0708ad48 t __frame_dummy_init_array_entry
0708ad48 T __init_array_start
0708ad48 B __preinit_array_end
0708ad48 B __preinit_array_start
0708ad48 D __tdata_lma_end
0708ada4 t __do_global_dtors_aux_fini_array_entry
0708ada4 T __init_array_end
0708ada8 B __c_bss_start
0708ada8 00000004 B CTRPluginFramework::offset
0708adac 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
0708adb0 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
0708adb4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708adb8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708adbc 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708adc0 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708adcc 00000004 B CTRPluginFramework::data
0708add0 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708add1 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
0708add4 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0708add8 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0708addc 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0708ade0 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0708ade4 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0708ade8 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
0708adec 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
0708aded 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0708adf0 00000004 B CTRPluginFramework::g_FNsPointer
0708adf4 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0708adf8 00000004 B CTRPluginFramework::g_itemPointer
0708adfc 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
0708ae00 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
0708ae01 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
0708ae02 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0708ae03 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0708ae04 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0708ae05 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0708ae08 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0708ae0c 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0708ae10 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
0708ae14 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0708ae18 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0708ae1a 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0708ae1c 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708ae20 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
0708ae24 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
0708ae30 0000000c b CTRPluginFramework::g_items
0708ae3c 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0708ae40 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
0708ae4c 0000000c b CTRPluginFramework::speed
0708ae58 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
0708ae5c 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
0708ae60 00000004 B CTRPluginFramework::g_oldRacePointer5CC
0708ae64 00000004 B CTRPluginFramework::g_raceCondition
0708ae68 00000004 B CTRPluginFramework::g_racePointer
0708ae6c 00000004 B CTRPluginFramework::dataZ
0708ae70 00000004 B CTRPluginFramework::dataY
0708ae74 00000004 B CTRPluginFramework::dataX
0708ae78 00000004 B CTRPluginFramework::random
0708ae80 00000004 b g_onLoadCroLock
0708ae84 00000004 B g_mainThread
0708ae88 00000004 B CTRPluginFramework::g_keepEvent
0708ae8c 00000004 B CTRPluginFramework::g_continueGameEvent
0708ae90 0000005c b CTRPluginFramework::exception_data
0708aeec 00000004 B CTRPluginFramework::g_keepThreadHandle
0708aef0 00000018 b g_onLoadCroHook
0708af08 00000008 B CTRPluginFramework::_sdmcArchive
0708af10 00000004 B g_gspEventThreadPriority
0708af14 00000004 B CTRPluginFramework::g_resumeEvent
0708af18 00001000 b CTRPluginFramework::keepThreadStack
0708bf18 00000004 B __ctru_heap_size
0708bf1c 00000004 B CTRPluginFramework::Color::Black
0708bf20 00000004 B CTRPluginFramework::Color::White
0708bf24 00000004 B CTRPluginFramework::Color::Red
0708bf28 00000004 B CTRPluginFramework::Color::Lime
0708bf2c 00000004 B CTRPluginFramework::Color::Blue
0708bf30 00000004 B CTRPluginFramework::Color::Yellow
0708bf34 00000004 B CTRPluginFramework::Color::Cyan
0708bf38 00000004 B CTRPluginFramework::Color::Magenta
0708bf3c 00000004 B CTRPluginFramework::Color::Silver
0708bf40 00000004 B CTRPluginFramework::Color::Gray
0708bf44 00000004 B CTRPluginFramework::Color::Maroon
0708bf48 00000004 B CTRPluginFramework::Color::Olive
0708bf4c 00000004 B CTRPluginFramework::Color::Green
0708bf50 00000004 B CTRPluginFramework::Color::Purple
0708bf54 00000004 B CTRPluginFramework::Color::Teal
0708bf58 00000004 B CTRPluginFramework::Color::Navy
0708bf5c 00000004 B CTRPluginFramework::Color::BlackGrey
0708bf60 00000004 B CTRPluginFramework::Color::Brown
0708bf64 00000004 B CTRPluginFramework::Color::DarkGrey
0708bf68 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0708bf6c 00000004 B CTRPluginFramework::Color::DimGrey
0708bf70 00000004 B CTRPluginFramework::Color::DodgerBlue
0708bf74 00000004 B CTRPluginFramework::Color::Gainsboro
0708bf78 00000004 B CTRPluginFramework::Color::ForestGreen
0708bf7c 00000004 B CTRPluginFramework::Color::LimeGreen
0708bf80 00000004 B CTRPluginFramework::Color::Orange
0708bf84 00000004 B CTRPluginFramework::Color::SkyBlue
0708bf88 00000004 B CTRPluginFramework::Color::Turquoise
0708bf8c 00000004 b CTRPluginFramework::g_runningInstance
0708bf90 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708bf98 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708bfa0 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708bfa8 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708bfac 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708bfae 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708bfb0 00000180 b CTRPluginFramework::g_keyName
0708c130 00000004 B CTRPluginFramework::__fileHandle
0708c138 00000008 B CTRPluginFramework::Time::Zero
0708c140 00000004 B CTRPluginFramework::System::OnAbort
0708c144 00000004 B CTRPluginFramework::Controller::_keysDown
0708c148 00000004 B CTRPluginFramework::Controller::_keysHeld
0708c14c 00000004 B CTRPluginFramework::Controller::_keysReleased
0708c150 000009c4 b CTRPluginFramework::g_rng
0708cb18 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
0708cb1c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708cb20 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708cb24 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
0708cb25 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
0708cb26 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
0708cb27 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
0708cb28 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
0708cb29 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
0708cb2a 00000001 B CTRPluginFramework::Preferences::ShowTopFps
0708cb2b 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
0708cb2c 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708cb2d 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708cb30 00000070 B CTRPluginFramework::Preferences::Settings
0708cba0 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708cbb8 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708cbd0 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708cbe8 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
0708cbe9 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
0708cbea 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
0708cbec 00000004 b CTRPluginFramework::defaultSysFont
0708cbf0 00000004 B CTRPluginFramework::g_fontAllocated
0708cbf4 00000004 b CTRPluginFramework::tileData
0708cbf8 00000004 b CTRPluginFramework::glyph
0708cbfc 0000000c B CTRPluginFramework::Font::_mutex
0708cc08 00000004 B CTRPluginFramework::g_glyphAllocated
0708cc0c 00000028 B CTRPluginFramework::Window::BottomWindow
0708cc34 00000028 B CTRPluginFramework::Window::TopWindow
0708cc5c 00000004 B CTRPluginFramework::RendererPriv::g_customColor
0708cc60 00000008 B CTRPluginFramework::Renderer::hookContext
0708cc68 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708cc6c 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708cc70 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708cc74 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708cc80 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708cc8c 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
0708cc98 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708ccb0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708ccc8 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708cccc 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708ccd4 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708ccd8 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708cce0 00000018 B CTRPluginFramework::OSDImpl::OSDHook
0708ccf8 00000010 b CTRPluginFramework::InstallOSD()::returnCode
0708cd08 00000004 B CTRPluginFramework::OSDImpl::HookReturn
0708cd0c 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708cd14 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708cd38 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708cd44 00000004 b CTRPluginFramework::g_second
0708cd48 00000010 b CTRPluginFramework::g_fpsClock
0708cd58 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708cd5c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708cd5d 00000001 B CTRPluginFramework::OSDImpl::MessColors
0708cd60 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708cd64 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708cd68 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0708cd70 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0708cd90 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708cd98 00000004 b CTRPluginFramework::g_ctrpfString
0708cd9c 00000004 b CTRPluginFramework::g_bymeString
0708cda0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708cda8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708cdb0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cdb8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cdc0 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708cdc4 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708cdc8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708cdd0 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708cdd8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708cddc 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708cde0 00000004 b CTRPluginFramework::g_mode
0708cde4 00000004 b CTRPluginFramework::g_OpenFileLock
0708cde8 00000004 b CTRPluginFramework::g_HookMode
0708cdf0 00000040 b CTRPluginFramework::g_hookExportFile
0708ce30 00000010 b CTRPluginFramework::g_returncode
0708ce40 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
0708ce58 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708ce5c 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708ce60 00000004 b CTRPluginFramework::g_screenshotEntry
0708ce64 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708ce68 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708ce6c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708ce70 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708ce74 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708ce78 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708ce88 00000004 B CTRPluginFramework::__g_hexEditor
0708ce8c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708ce90 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708cea0 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708cea4 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708cea8 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708ceb8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708cec8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708ced8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708cedc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708cee0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708cee4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708cef4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708cef8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708cf08 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708cf0c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708cf1c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708cf20 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708cf28 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0708cf30 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0708cf38 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0708cf40 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0708cf48 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708cf4c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708cf58 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708cf64 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708cf70 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cf78 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cf80 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708cf84 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708cf94 00000004 b CTRPluginFramework::__pmARinstance
0708cf98 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708cf9c 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708cfa0 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708cfb0 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0708cfc0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708cfc4 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0708cfc8 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0708cfd0 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0708cfe0 00000004 b CTRPluginFramework::g_radioId
0708cfe4 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708cfe8 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0708cfec 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
0708cff0 00000004 B CTRPluginFramework::_pool
0708cff8 00000008 B CTRPluginFramework::Screenshot::_timer
0708d000 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708d008 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708d010 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708d028 00000004 B CTRPluginFramework::Screenshot::_filecount
0708d02c 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708d044 00000004 B CTRPluginFramework::Screenshot::_display
0708d048 00000004 B CTRPluginFramework::Screenshot::_mode
0708d050 00000008 B CTRPluginFramework::Screenshot::Timer
0708d058 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708d05c 00000004 B CTRPluginFramework::Screenshot::_task
0708d060 00000004 B CTRPluginFramework::Screenshot::_count
0708d064 00000008 b CTRPluginFramework::g_sleepEvent
0708d06c 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708d070 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708d074 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708d078 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708d07c 00000004 B CTRPluginFramework::HookManager::instance
0708d080 00000078 B CTRPluginFramework::Scheduler::_singleton
0708d0f8 00000040 b CTRPluginFramework::_topBuf
0708d138 00000004 B CTRPluginFramework::ScreenImpl::Top
0708d13c 00000040 b CTRPluginFramework::_botBuf
0708d17c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708d180 0000000c b CTRPluginFramework::Heap::_mutex
0708d18c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708d190 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708d194 00000008 b CTRPluginFramework::Heap::g_heapPool
0708d19c 0000000c b sAddrMap
0708d1a8 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708d1c0 0000000c B CTRPluginFramework::FSPath::FSMutex
0708d1d0 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708d1d4 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708d238 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708d23c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708d240 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708d248 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708d24c 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708d250 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708d25c 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708d268 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708d278 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0708d27a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
0708d280 0000000c b _mutex
0708d28c 00000008 b sVramPool
0708d294 0000000c b sAddrMap
0708d2a0 00000004 b srvRefCount
0708d2a4 00000004 b srv2Handle
0708d2a8 00000004 b errfRefCount
0708d2ac 00000004 b errfHandle
0708d2b0 00000004 b sharedFontAddr
0708d2b4 00000004 b arbiter
0708d2b8 00000004 b cfguRefCount
0708d2bc 00000004 b cfguHandle
0708d2c0 00000004 b fsuHandle
0708d2c8 00000080 b fsExemptArchives
0708d348 00000004 b fsuRefCount
0708d34c 00000001 B fs
0708d350 0000000c b aptFirstHook
0708d35c 00000004 b serviceName.7785
0708d360 00000004 b aptRefCount
0708d364 0000000c b aptEvents
0708d370 00000008 b aptSleepEvent
0708d378 00000004 b aptEventHandlerThread
0708d37c 00000004 b aptMessageFunc
0708d380 00000004 b aptMessageFuncData
0708d384 00000001 b aptHomeButtonState
0708d385 00000001 b flagInit.8135
0708d386 00000001 b flagValue.8136
0708d388 00001000 b aptParameters
0708e388 00001000 b __stack
0708f388 00000004 b amRefCount
0708f38c 00000004 b amHandle
0708f390 00000004 b acRefCount
0708f394 00000004 b acHandle
0708f398 00000004 b hidRefCount
0708f39c 00000004 b kOld
0708f3a0 00000004 b kHeld
0708f3a4 00000004 b cPos
0708f3a8 00000004 b tPos
0708f3ac 00000006 b aVec
0708f3b2 00000006 b gRate
0708f3b8 00000004 b kDown
0708f3bc 00000004 b kUp
0708f3c0 00000004 b gspEventData
0708f3c4 00000038 b gspEvents
0708f3fc 0000001c b gspEventCounts
0708f418 00000001 b gspRunEvents
0708f41c 00000004 b gspRefCount
0708f420 00000004 b gfxSharedMemory
0708f424 00000001 b gfxThreadID
0708f428 00000004 b irrstRefCount
0708f42c 00000004 b kHeld
0708f430 00000004 b csPos
0708f434 00000004 b g_mainThreadVars
0708f438 b saved_stack
0708f440 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708f444 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708f45c 0000000c B CTRPluginFramework::g_codeTypes
0708f468 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708f46c 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708f478 00000001 b CTRPluginFramework::g_condAgainstData
0708f479 00000001 b CTRPluginFramework::g_newCondDataToggle
0708f47c 00000004 b CTRPluginFramework::__arCodeEditor
0708f480 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708f484 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708f490 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708f498 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708f4a0 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708f4a8 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708f4b0 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708f4c0 00000001 b CTRPluginFramework::g_progressLoop
0708f4c8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708f4d0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708f4d8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708f4e0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708f4e8 00000004 b CTRPluginFramework::__converter
0708f4ec 00000008 b sMappablePool
0708f4f4 0000000c b sAddrMap
0708f500 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708f504 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708f508 00000008 B CTRPluginFramework::ARHandler::Offset
0708f510 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708f514 00000010 B CTRPluginFramework::ARHandler::Data
0708f524 00000008 B CTRPluginFramework::ARHandler::Storage
0708f52c 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708f530 00000001 b CTRPluginFramework::ToggleFloat
0708f534 00000004 b CTRPluginFramework::g_context
0708f538 00000fa0 b CTRPluginFramework::arStack
070904d8 b completed.7759
070904dc b object.7764
070904f4 0000000c b eh_globals
07090500 00000010 b (anonymous namespace)::emergency_pool
07090510 00000010 V std::string::_Rep::_S_empty_rep_storage
07090520 00000004 b (anonymous namespace)::__new_handler
07090524 00000028 B __malloc_current_mallinfo
0709054c 00000004 B __malloc_max_sbrked_mem
07090550 00000004 B __malloc_max_total_mem
07090554 00000004 B __malloc_top_pad
07090558 0000000b b __tzname_dst
07090564 0000000b b __tzname_std
07090570 00000004 b prev_tzenv
07090574 00000004 B _daylight
07090578 00000004 B _timezone
0709057c 00000004 b initial_env
07090580 00000004 b heap_start.7089
07090584 00000004 B fake_heap_end
07090588 00000004 B fake_heap_start
0709058c 00000038 B __syscalls
070905c4 00000004 B g_sharedFont
070905c8 00000004 B charPerSheet
070905cc 00000004 B hidMemHandle
070905d0 00000004 B hidHandle
070905d4 00000014 B hidEvents
070905e8 00000004 B hidSharedMem
070905ec 00000004 B gspEventThread
070905f0 00000004 B gspEvent
070905f4 00000004 B gspGpuHandle
070905f8 00000004 B gspSharedMemHandle
070905fc 00000004 B gspThreadEventHandle
07090600 00000004 B irrstMemHandle
07090604 00000004 B irrstEvent
07090608 00000004 B irrstHandle
0709060c 00000004 B irrstSharedMem
07090610 00000004 B __ctru_linear_heap
07090614 00000004 B __tmp
07090618 00000004 B __ctru_linear_heap_size
0709061c 00000004 B __system_retAddr
07090620 00000004 B __ctru_heap
07090624 B __c_bss_end
07090624 B __tls_start
07090644 A __end__
07090644 B __tls_end
