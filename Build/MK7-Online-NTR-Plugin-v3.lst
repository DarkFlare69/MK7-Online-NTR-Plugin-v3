00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 00000154 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
0700147c 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
070014d8 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001518 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001558 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001598 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
070015d4 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07001610 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07001678 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
070016dc 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
0700179c 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
070017f8 00000070 t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.33]
070017f8 00000070 t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.34]
07001868 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001868 00000020 W std::vector<CTRPluginFramework::Item, std::allocator<CTRPluginFramework::Item> >::~vector()
07001888 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
07001888 00000020 W std::vector<CTRPluginFramework::Speedometer, std::allocator<CTRPluginFramework::Speedometer> >::~vector()
070018a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018a8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018c8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.106]
07001950 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
070019fc 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.145]
07001a58 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a58 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a94 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001ad0 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07001b0c 00000024 W CTRPluginFramework::File::~File()
07001b0c 00000024 W CTRPluginFramework::File::~File()
07001b30 00000084 T CTRPluginFramework::IsInRace()
07001bb4 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001c1c 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001c70 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001ce4 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001da8 00000120 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001ec8 000000a8 T CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)
07001f70 000000bc T CTRPluginFramework::GetRacePointer()
0700202c 00000030 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
0700205c 00000030 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
0700208c 0000002c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
070020b8 00000030 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
070020e8 0000002c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
07002114 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07002118 0000003c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07002154 000000a0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
070021f4 000000c4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
070022b8 00000270 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
07002528 00000254 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
0700277c 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
070028fc 00000038 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
07002934 00000034 T CTRPluginFramework::driveOOB(CTRPluginFramework::MenuEntry*)
07002968 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07002a98 0000009c T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07002b34 000000a4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002bd8 0000004c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002c24 00000050 T CTRPluginFramework::GetFNsPointer()
07002c74 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002cdc 0000006c T CTRPluginFramework::GetOldPointer5CC()
07002d48 00000034 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002d7c 00000070 T CTRPluginFramework::GetOldPointer5D0()
07002dec 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002e34 0000009c T CTRPluginFramework::GetItemPointer()
07002ed0 00000168 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07003038 000000b8 T CTRPluginFramework::GetTotalPlayers()
070030f0 000001f0 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
070032e0 00000060 T CTRPluginFramework::GetTime()
07003340 0000002c T CTRPluginFramework::GetMinutes()
0700336c 0000001c T CTRPluginFramework::GetSeconds()
07003388 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07003440 00000070 T CTRPluginFramework::SubToTime(unsigned short)
070034b0 0000042c T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
070038dc 0000005c T CTRPluginFramework::writeItem(unsigned long)
07003938 000000e8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003a20 0000001c T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07003a3c 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003b20 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003b60 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003ba0 00000230 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003dd0 00000230 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07004000 00000048 T CTRPluginFramework::writeVR(unsigned long)
07004048 000000d8 T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07004120 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
0700413c 00000060 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
0700419c 0000004c T CTRPluginFramework::writeLocation(unsigned long)
070041e8 00000060 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
07004248 00000064 T CTRPluginFramework::writeFlag(unsigned short)
070042ac 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
070043a0 00001764 T CTRPluginFramework::main()
07005b04 0000003c W std::vector<CTRPluginFramework::Mii, std::allocator<CTRPluginFramework::Mii> >::~vector()
07005b04 0000003c W std::vector<CTRPluginFramework::Mii, std::allocator<CTRPluginFramework::Mii> >::~vector()
07005b40 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005c20 000001d4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07005df4 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07005df8 00000004 T CTRPluginFramework::OnProcessExit()
07005dfc 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
07005e60 000000f0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005f50 00000100 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07006050 00000170 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
070061c0 00000550 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
07006710 000000f4 t _GLOBAL__sub_I__ZN18CTRPluginFramework6offsetE
07006804 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0700687c 00000038 T OnLoadCro
070068b4 00000170 T CTRPluginFramework::Initialize()
07006a24 000000b0 T CTRPluginFramework::ThreadExit()
07006ad4 00000060 T abort
07006b34 0000003c T CTRPluginFramework::ThreadInit(void*)
07006b70 0000008c T LaunchMainThread
07006bfc 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07007004 0000000c t _GLOBAL__sub_I_g_mainThread
07007010 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
0700705c 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070070d8 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
0700719c 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
07007214 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07007214 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
0700722c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
0700722c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07007238 00000008 T CTRPluginFramework::Color::ToU32() const
07007240 00000120 T CTRPluginFramework::Color::Fade(double)
07007360 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
070073a0 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0700741c 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07007630 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07007750 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007750 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070077c0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070077c0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070077ec 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07007800 00000044 T CTRPluginFramework::PluginMenu::Run() const
07007844 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700784c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700785c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07007868 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007868 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070078a8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070078a8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070078d0 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
070078e0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070078e0 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700792c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700792c 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700797c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700797c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070079ac 00000010 T CTRPluginFramework::MenuEntry::Disable() const
070079bc 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
070079c4 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
070079cc 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070079d4 00000030 W CTRPluginFramework::TextBox::~TextBox()
070079d4 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007a04 0000001c W CTRPluginFramework::TextBox::~TextBox()
07007a20 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007a20 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007a68 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007a68 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007aa4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007aa4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007ae0 00000008 T CTRPluginFramework::MessageBox::operator()() const
07007ae8 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007bac 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07007c54 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007c54 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007c9c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007c9c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007d04 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007d04 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007d30 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07007d38 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007d54 00000028 T CTRPluginFramework::Keyboard::Open() const
07007d7c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007df4 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007ea4 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07007ef8 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007f60 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07007f68 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007f70 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
0700800c 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008098 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07008140 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07008228 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070082b4 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0700835c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07008444 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070084d0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07008578 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07008660 00000028 t __tcf_0
07008688 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07008700 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07008708 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07008788 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07008804 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
070088dc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070088dc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070088f8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070088f8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07008938 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07008948 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07008a08 00000020 T CTRPluginFramework::HotkeyManager::Count()
07008a28 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008b98 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008cc4 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008dec 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07008e5c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008ee4 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07008f28 0000004c T CTRPluginFramework::Directory::Close() const
07008f74 000000e8 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
0700905c 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07009070 00000008 T CTRPluginFramework::Directory::IsOpen() const
07009078 00000040 T CTRPluginFramework::Directory::Directory()
07009078 00000040 T CTRPluginFramework::Directory::Directory()
070090b8 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
070090ec 00000060 T CTRPluginFramework::Directory::~Directory()
070090ec 00000060 T CTRPluginFramework::Directory::~Directory()
0700914c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700914c 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700916c 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009204 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700929c 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700933c 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009410 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070094a4 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070095f0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070095f0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07009648 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009684 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009684 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070096a0 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07009810 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
0700982c 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07009954 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
070099cc 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07009a34 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07009ae0 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07009b24 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07009d00 000001b4 T CTRPluginFramework::Directory::_List() const
07009eb4 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009f94 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700a078 0000000c T CTRPluginFramework::FwkSettings::Get()
0700a084 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0700a164 00000010 T CTRPluginFramework::Process::GetHandle()
0700a174 00000010 T CTRPluginFramework::Process::GetTitleID()
0700a184 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a1e0 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a218 00000024 T CTRPluginFramework::Process::GetTextSize()
0700a23c 00000008 T CTRPluginFramework::Process::Pause()
0700a244 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700a254 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700a2fc 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700a300 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700a34c 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700a384 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700a3a8 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700a3c4 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0700a3e8 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a424 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a44c 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a46c 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0700a48c 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
0700a5f8 0000002c T CTRPluginFramework::Hook::Hook()
0700a5f8 0000002c T CTRPluginFramework::Hook::Hook()
0700a624 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700a63c 00000230 T CTRPluginFramework::Hook::Enable()
0700a86c 0000005c T CTRPluginFramework::Hook::Disable()
0700a8c8 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a8c8 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a8dc 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a8dc 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a904 00000004 T CTRPluginFramework::Mutex::Lock()
0700a908 00000014 T CTRPluginFramework::Mutex::TryLock()
0700a91c 00000004 T CTRPluginFramework::Mutex::Unlock()
0700a920 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a920 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a944 0000004c T CTRPluginFramework::Lock::~Lock()
0700a944 0000004c T CTRPluginFramework::Lock::~Lock()
0700a990 00000074 T CTRPluginFramework::File::Close() const
0700aa04 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
0700aabc 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700abac 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700abd8 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700acbc 00000008 T CTRPluginFramework::File::Tell() const
0700acc4 00000030 T CTRPluginFramework::File::Rewind() const
0700acf4 00000034 T CTRPluginFramework::File::Flush() const
0700ad28 0000006c T CTRPluginFramework::File::GetSize() const
0700ad94 000000dc T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
0700ae70 00000008 T CTRPluginFramework::File::IsOpen() const
0700ae78 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700ae8c 00000044 T CTRPluginFramework::File::File()
0700ae8c 00000044 T CTRPluginFramework::File::File()
0700aed0 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af64 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b038 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b0bc 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b15c 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700b264 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b264 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b2d0 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700b318 00000014 T CTRPluginFramework::Time::Time()
0700b318 00000014 T CTRPluginFramework::Time::Time()
0700b32c 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700b34c 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700b364 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700b36c 00000028 T CTRPluginFramework::Seconds(float)
0700b394 00000010 T CTRPluginFramework::Milliseconds(int)
0700b3a4 00000008 T CTRPluginFramework::Microseconds(long long)
0700b3ac 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b3c0 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b3d4 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b3e8 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b400 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700b44c 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700b464 00000010 T CTRPluginFramework::System::IsNew3DS()
0700b474 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700b488 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700b4a4 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700b4c0 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700b4dc 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700b4f8 0000002c T CTRPluginFramework::Controller::Update()
0700b524 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700b59c 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b5f8 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700b654 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700b6b0 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700b6f4 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700b774 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b828 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b964 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700b99c 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700b9b8 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700bc0c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bc0c 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bc50 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700c390 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c398 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c3dc 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700c4e8 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700c550 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700c56c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700c5a8 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700c5cc 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c5f0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700c668 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700c698 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700c7a4 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700c970 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700cc50 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700cd1c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700cdd8 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700ce94 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700cef0 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700cf40 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700cfc0 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700d190 00000004 T CTRPluginFramework::Preferences::Initialize()
0700d194 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700d280 00000010 T CTRPluginFramework::Glyph::Width() const
0700d290 00000060 T CTRPluginFramework::Font::Initialize()
0700d2f0 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700d644 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700d948 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700da54 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700dabc 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700dadc 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700db0c 00000020 W CTRPluginFramework::Renderer::GetContext()
0700db2c 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700db8c 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700dcf4 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700de60 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700df00 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700e0e8 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700e118 00000028 T CTRPluginFramework::Window::~Window()
0700e118 00000028 T CTRPluginFramework::Window::~Window()
0700e140 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e140 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e1e0 00000064 T CTRPluginFramework::Window::Draw() const
0700e244 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700e31c 00000018 T CTRPluginFramework::Window::DrawButton() const
0700e334 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700e34c 00000018 T CTRPluginFramework::Window::MustClose() const
0700e364 0000002c T CTRPluginFramework::Window::Close() const
0700e390 00000004 T CTRPluginFramework::Window::GetRect() const
0700e394 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700e3c0 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700e468 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700e598 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700e664 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700e7b0 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e8f4 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e92c 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700eacc 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700ec90 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700eec4 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700ef34 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700efa0 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700efb4 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700efd8 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700eff4 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700f024 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700f054 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700f07c 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700f0a4 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700f0c4 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700f100 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700f148 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700f18c 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700f2a8 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700f2c8 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700f338 00000038 t __tls_init
0700f338 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700f370 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700f3ac 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f420 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f48c 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f514 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f5a8 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f638 00000008 W CTRPluginFramework::Drawable::operator()()
0700f640 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0700f644 000002f0 T CTRPluginFramework::TextBox::Draw()
0700f934 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f934 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f9c8 0000000c T CTRPluginFramework::TextBox::Open() const
0700f9d4 0000000c T CTRPluginFramework::TextBox::Close() const
0700f9e0 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0700f9e8 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0700fc30 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0700fc3c 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0700fcd4 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0700fd88 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0700fde0 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0700fe10 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0700fecc 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
0700ff88 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
07010150 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010150 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010294 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701037c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
070103f4 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
07010464 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07010488 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
070104ac 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
070104ac 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
070104ec 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070104f4 00000008 T CTRPluginFramework::BMPImage::Width() const
070104fc 00000008 T CTRPluginFramework::BMPImage::Height() const
07010504 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0701050c 00000010 T CTRPluginFramework::BMPImage::data() const
0701051c 0000001c T CTRPluginFramework::BMPImage::end() const
07010538 00000010 W CTRPluginFramework::BMPImage::DataClear()
07010548 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
07010548 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
070105f0 0000003c T CTRPluginFramework::BMPImage::Unload()
0701062c 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
07010768 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07010770 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
070109c0 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07010b94 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07010bdc 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07010c0c 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07010ce0 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
07010d60 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07010d84 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07010ea0 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010ea0 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010ef4 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
07011214 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011214 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011260 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070112ac 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070115bc 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0701167c 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
070117ac 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07011918 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
07011958 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
07011958 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
07011978 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07011ae8 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07011bdc 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07011c70 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07011d18 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07011fa4 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011fa4 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011fe8 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0701203c 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
070121c4 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07012270 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
070122b0 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07012930 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012ad8 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07012ad8 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07012b04 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012b04 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012b24 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07012bd4 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07012c30 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012c30 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012cb4 0000000c T CTRPluginFramework::OSDImpl::Lock()
07012cc0 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07012cdc 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07012ce8 000000cc T CTRPluginFramework::OSDImpl::Draw()
07012db4 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07012e8c 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07012eb8 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07012f00 0000020c T CTRPluginFramework::InstallOSD()
0701310c 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
07013154 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0701322c 00000108 T CTRPluginFramework::OSDImpl::Update()
07013334 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
070139bc 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07013a24 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07013a90 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013a90 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013c08 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013c08 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013d60 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07013dd8 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
0701408c 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07014228 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07014448 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07014474 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070144b0 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
070144ec 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07014528 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07014564 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
070145a0 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070145cc 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07014608 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07014644 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07014680 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070146bc 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
070146e8 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07014724 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07014750 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701477c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
070147b8 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
070147e4 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07014820 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0701484c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07014880 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070148bc 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
070148e8 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07014924 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07014950 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701497c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070149a8 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070149d4 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07014a00 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07014a2c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07014a58 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07014a84 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07014ac0 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07014aec 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
07014b7c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014b7c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014b9c 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014b9c 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014c7c 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07014c84 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014c84 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014d18 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07014d38 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07014ec0 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014ee0 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07014efc 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07014f18 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07014f20 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014f28 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014f28 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014f48 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0701502c 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07015728 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07015780 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07015864 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
070158a0 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
070159d0 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07015b0c 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015bc4 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015ccc 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015ccc 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015d50 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07015e44 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07015f7c 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07016114 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07016114 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07016210 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016210 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070163b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07016428 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016428 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016504 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07016504 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701661c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07016658 00000058 T CTRPluginFramework::Menu::CloseAll()
070166b0 00000030 T CTRPluginFramework::Menu::~Menu()
070166b0 00000030 T CTRPluginFramework::Menu::~Menu()
070166e0 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070166ec 00000008 T CTRPluginFramework::Menu::GetFolder() const
070166f4 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
070166fc 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
0701673c 00000384 T CTRPluginFramework::Menu::Draw() const
07016ac0 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
07016b4c 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07016bd8 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07016e00 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07016f74 00000068 T CTRPluginFramework::Menu::ShowNote()
07016fdc 00000008 T CTRPluginFramework::Menu::CloseNote()
07016fe4 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07016fec 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701702c 00000044 T CTRPluginFramework::Menu::Pop()
07017070 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07017134 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
070171ec 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070171f4 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
070171f4 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
0701721c 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07017238 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017238 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701730c 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017328 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017328 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070173e0 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070173e0 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701749c 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
070174b0 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07017500 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07017518 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701753c 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
070175e4 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
070175f4 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07017618 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07017678 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07017688 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07017698 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070176a8 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07017738 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07017854 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
070178c4 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07017968 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07017994 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07017994 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070179c4 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070179c4 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07017a30 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07017b84 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07017bc0 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017bc0 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017d2c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07017d84 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017e38 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017f18 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07017f90 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07017f90 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07018454 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07018460 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07018780 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07018888 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07018cdc 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07018df8 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07018e84 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07018ec0 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07018eec 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07018fbc 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0701903c 0000007c T CTRPluginFramework::PluginMenuHome::Init()
070190b8 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0701913c 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07019198 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070191d8 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07019308 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07019644 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07019858 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07019870 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07019884 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07019898 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070198ac 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070199e8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070199ec 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070199f0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07019a08 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07019a20 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07019a38 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07019a50 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07019a68 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07019a80 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07019a98 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07019ab0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07019ac8 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07019b0c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019b84 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07019be8 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07019c80 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07019e24 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019fa8 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0701a054 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a178 0000005c t CTRPluginFramework::Reboot()
0701a1d4 00000064 t CTRPluginFramework::Shutdown()
0701a238 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0701a42c 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
0701ae2c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701ae2c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701afbc 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0701b0d8 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0701b164 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0701b1a4 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701b314 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701b3c0 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
0701b9d8 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701ba14 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701ba50 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701ba60 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701ba60 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bb38 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701bb38 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701bb74 0000001c T CTRPluginFramework::SubMenu::operator()()
0701bb90 00000200 T CTRPluginFramework::SubMenu::Draw()
0701bd90 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0701be54 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701be5c 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701be78 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701c01c 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701c068 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
0701c068 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
0701c06c 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
0701c070 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
0701c074 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701c210 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701c30c 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701c448 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701c4c0 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c710 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701c964 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701cb60 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701cd40 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701cd5c 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701ce18 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701ce34 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701cea4 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701ced4 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701cf10 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701cfb8 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701cfec 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701d01c 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701d0a8 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701d140 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701d20c 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701d2c8 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701d378 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701d50c 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701d51c 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701d52c 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701d53c 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d53c 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d7b0 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701d7f4 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701d9bc 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701da80 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701dad8 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701dbbc 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701dd2c 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701deb0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701dedc 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701dedc 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701df44 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701df6c 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701e0c0 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701e134 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701e2d4 00000160 T CTRPluginFramework::HexEditor::_Update()
0701e434 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701e6d4 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701e6e8 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e6e8 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e710 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e72c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701e844 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e844 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e914 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e914 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e9e8 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701e9f0 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701ea04 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701ea10 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701ea18 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701ea3c 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701ea6c 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701ea88 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701eaf0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701eaf0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701eb10 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701eb2c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701eb2c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701ebc0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ebc0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ec20 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ec20 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ec80 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701ec84 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701ecfc 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701edbc 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701edf0 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701f1e8 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701f200 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701f4c4 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f4c4 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f684 00000158 T CTRPluginFramework::GuideReader::Draw()
0701f7dc 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701f850 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701f8b8 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701f8b8 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701f900 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701f94c 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701f958 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701f984 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701f9e0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701fa68 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701facc 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701facc 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701fb2c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fb2c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fcd8 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fcd8 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fe94 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fe94 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fef8 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701ff00 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701ff08 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701ff10 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701ff18 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701ff20 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
07020084 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070204dc 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0702056c 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
070205ec 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07020670 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
070207d0 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
07020a50 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07020fbc 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07021024 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07021074 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
070210e4 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
070210ec 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
070211b0 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0702138c 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
070213f0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0702141c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702141c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702143c 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07021508 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
070215c4 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
07021688 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07021bf4 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07022164 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0702221c 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07022c70 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07022d28 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702396c 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
070239b0 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
07023a6c 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07023c30 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
07023c80 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07023cd8 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07023d20 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07024044 00000254 T CTRPluginFramework::KeyboardImpl::Run()
07024298 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07024310 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07024324 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07024348 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
070243d0 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
070244e0 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702453c 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
070245d4 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070245d4 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07024824 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07024858 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070248ac 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
070248d0 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
070248f8 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070249d4 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07024af8 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07024cc4 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024cc4 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024cec 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07024e64 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07024fe0 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07025148 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
07025184 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
070252cc 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
070252fc 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070253d0 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
070255d0 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07025648 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07025710 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070258c8 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07025a70 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07025ae8 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
07025b44 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07025c5c 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07025cc0 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07025e2c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07025e2c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07026284 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
07026640 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
070266b0 000000f4 t CTRPluginFramework::ClearSearchFolder()
070267a4 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
070267d8 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07026a00 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07026a28 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07026a98 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07026b60 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07026b9c 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07026e04 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07026ee8 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07026f28 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07026f58 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0702702c 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070272b8 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07027670 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
070276c8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070276c8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070276f4 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
07027700 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
0702770c 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07027868 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
070278a4 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
070278b0 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
070278bc 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
070278dc 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07027a78 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07027ad4 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07027c30 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07027c48 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07027d6c 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07027e30 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07027fe0 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
070280a4 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07028124 00000044 T CTRPluginFramework::Search::UpdateProgress()
07028168 00000194 T CTRPluginFramework::Search::CheckNextRegion()
070282fc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
07028374 00000008 T CTRPluginFramework::Search::GetHeader() const
0702837c 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
070283c4 0000000c T CTRPluginFramework::Search::GetType() const
070283d0 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
070283e8 00000070 T CTRPluginFramework::Search::WriteHeader()
07028458 00000058 T CTRPluginFramework::Search::WriteResults()
070284b0 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
070284fc 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0702873c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702873c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702897c 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07028a44 00000088 T CTRPluginFramework::Search::CreateIndexTable()
07028acc 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028acc 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028c74 00000080 T CTRPluginFramework::Search::Cancel()
07028cf4 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07028e0c 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07028ed0 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07028f90 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07029008 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07029270 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07029500 00000048 W CTRPluginFramework::Search::~Search()
07029500 00000048 W CTRPluginFramework::Search::~Search()
07029548 00000044 T CTRPluginFramework::Search32::~Search32()
07029548 00000044 T CTRPluginFramework::Search32::~Search32()
0702958c 0000001c T CTRPluginFramework::Search32::~Search32()
070295a8 0000001c W CTRPluginFramework::Search::~Search()
070295c4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070295c4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070297ec 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070297ec 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702980c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0702980c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07029884 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070299dc 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029a28 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07029b6c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07029cb0 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07029ce0 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07029da4 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07029de0 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07029e18 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07029ef8 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029f44 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0702a25c 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0702a3d4 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702a6c0 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
0702a864 0000002c T CTRPluginFramework::Screenshot::Initialize()
0702a890 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0702a93c 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702a9d0 0000003c T CTRPluginFramework::SystemImpl::Status()
0702aa0c 000000c8 T CTRPluginFramework::HookManager::Init()
0702aad4 00000018 T CTRPluginFramework::HookManager::Lock()
0702aaec 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
0702ab94 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
0702abf4 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702abf4 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702ac2c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ac2c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ac64 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702acac 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0702adb8 000000d4 T CTRPluginFramework::Scheduler::Initialize()
0702ae8c 00000050 T CTRPluginFramework::Scheduler::Exit()
0702aedc 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702aedc 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702af24 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
0702af90 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0702b060 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0702b090 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
0702b0ac 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702b1b4 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0702b1cc 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b1cc 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b210 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
0702b264 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0702b344 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
0702b47c 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0702b518 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0702b548 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0702b550 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b5b4 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b618 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b688 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b6fc 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b76c 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
0702b83c 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702b900 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0702b95c 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
0702ba00 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0702ba58 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702bb14 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0702bbec 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
0702bc54 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0702bc5c 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0702bc64 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0702bc6c 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0702bc88 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702bca4 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0702bcfc 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0702bd2c 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0702bd88 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0702be00 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702be24 00000004 t addrMapNodeDestructor(rbtree_node*)
0702be28 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0702bf58 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0702bf60 00000070 T CTRPluginFramework::Heap::Free(void*)
0702bfd0 0000000c T CTRPluginFramework::Heap::SpaceFree()
0702bfdc 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702c00c 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702c110 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702c2ec 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c2ec 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c3b0 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702c410 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702c41c 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c45c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702c46c 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c484 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702c498 00000004 T Kernel::Initialize()
0702c49c 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702c4b4 0000000c T KProcess::GetCurrent()
0702c4c0 00000024 T KProcess::PatchCore2Access()
0702c4e4 0000002c T KProcess::PatchCategory(unsigned long)
0702c510 00000014 T KProcess__PatchCategory
0702c524 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702c550 00000014 T KProcess__PatchMaxPriority
0702c564 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702c5e8 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702c61c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c61c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c63c 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702c720 00000018 T IsPaused
0702c738 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702c774 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702c790 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702c7ac 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702c814 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702c890 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702c92c 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702c9dc 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702caa4 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702cb78 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702cc10 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702cc6c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cc6c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702ccfc 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702ce5c 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702ce98 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702d134 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702d22c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702d234 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702d260 00000034 W MemPool::DelBlock(MemBlock*)
0702d294 0000005c T MemPool::CoalesceRight(MemBlock*)
0702d2f0 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702d408 000000fc T MemPool::Deallocate(MemChunk const&)
0702d504 00000020 T MemPool::GetFreeSpace()
0702d524 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702d548 00000004 t addrMapNodeDestructor(rbtree_node*)
0702d54c 00000154 T vramMemAlign
0702d6a0 00000008 T vramAlloc
0702d6a8 00000070 T vramFree
0702d718 00000030 t _GLOBAL__sub_I_vramMemAlign
0702d748 000001d8 T threadCreate
0702d920 0000002c T threadFree
0702d94c 00000024 T threadJoin
0702d970 00000020 T threadGetCurrent
0702d990 0000003c T threadExit
0702d9cc 0000003c t _thread_begin
0702da08 00000050 T srvExit
0702da58 00000034 T srvRegisterClient
0702da8c 00000064 T srvInit
0702daf0 00000068 T srvGetServiceHandleDirect
0702db58 00000004 T srvGetServiceHandle
0702db5c 00000034 T srvPublishToSubscriber
0702db90 00000034 T errfExit
0702dbc4 00000058 T errfInit
0702dc1c 0000003c T ERRF_Throw
0702dc58 00000090 T ERRF_ExceptionHandler
0702dce8 000000a8 T fontEnsureMapped
0702dd90 00000110 T fontGlyphIndexFromCodePoint
0702dea0 00000074 T fontGetCharWidthInfo
0702df14 0000000c T __sync_init
0702df20 00000018 T __sync_fini
0702df38 00000018 T LightLock_Init
0702df50 0000008c T LightLock_Lock
0702dfdc 00000034 T LightLock_TryLock
0702e010 00000050 T LightLock_Unlock
0702e060 00000018 T RecursiveLock_Init
0702e078 00000030 T RecursiveLock_Lock
0702e0a8 00000044 T RecursiveLock_TryLock
0702e0ec 00000034 T RecursiveLock_Unlock
0702e120 00000030 T LightEvent_Init
0702e150 00000060 T LightEvent_Clear
0702e1b0 00000064 T LightEvent_Pulse
0702e214 000000b4 T LightEvent_Signal
0702e2c8 000000a8 T LightEvent_Wait
0702e370 000000a0 T cfguInit
0702e410 00000034 T cfguExit
0702e444 00000044 T CFGU_GetConfigInfoBlk2
0702e488 00000014 T CFGU_GetSystemLanguage
0702e49c 00000028 t fsSession
0702e4c4 00000044 t fsSessionForArchive
0702e508 00000038 T fsExit
0702e540 00000028 T FSUSER_Initialize
0702e568 000000b0 T fsInit
0702e618 00000080 T FSUSER_OpenFile
0702e698 00000068 T FSUSER_DeleteFile
0702e700 000000a4 T FSUSER_RenameFile
0702e7a4 00000068 T FSUSER_DeleteDirectoryRecursively
0702e80c 00000080 T FSUSER_CreateFile
0702e88c 00000070 T FSUSER_CreateDirectory
0702e8fc 000000a4 T FSUSER_RenameDirectory
0702e9a0 0000006c T FSUSER_OpenDirectory
0702ea0c 00000074 T FSUSER_OpenArchive
0702ea80 00000058 T FSFILE_Read
0702ead8 00000060 T FSFILE_Write
0702eb38 00000038 T FSFILE_GetSize
0702eb70 00000028 T FSFILE_SetSize
0702eb98 0000003c T FSFILE_Close
0702ebd4 00000024 T FSFILE_Flush
0702ebf8 00000054 T FSDIR_Read
0702ec4c 0000003c T FSDIR_Close
0702ec88 00000104 T aptSendCommand
0702ed8c 0000006c T APT_CheckNew3DS
0702edf8 00000048 T APT_GetSharedFont
0702ee40 000000a0 T amInit
0702eee0 00000034 T amExit
0702ef14 00000088 T acInit
0702ef9c 00000034 T acExit
0702efd0 000000bc T hidExit
0702f08c 00000034 T hidCheckSectionUpdateTime
0702f0c0 00000174 T hidScanInput
0702f234 00000010 T hidKeysHeld
0702f244 00000010 T hidKeysDown
0702f254 00000010 T hidKeysUp
0702f264 00000018 T hidTouchRead
0702f27c 00000090 T HIDUSER_GetHandles
0702f30c 00000174 T hidInit
0702f480 000000e8 t gspEventThreadMain
0702f568 000000a0 T gspInitEventHandler
0702f608 00000040 T gspExitEventHandler
0702f648 0000008c T gspExit
0702f6d4 0000005c T gspWaitForEvent
0702f730 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702f794 000000dc T gspInit
0702f870 00000034 T irrstCheckSectionUpdateTime
0702f8a4 00000070 T irrstScanInput
0702f914 0000001c T irrstKeysHeld
0702f930 00000050 T IRRST_GetHandles
0702f980 00000034 T IRRST_Initialize
0702f9b4 00000128 T irrstInit
0702fadc 0000002c T IRRST_Shutdown
0702fb08 000000a8 T irrstExit
0702fbb0 00000028 t __ctru_get_reent
0702fbd8 000000ec T __system_initSyscalls
0702fcc4 000000ac T utf8_to_utf16
0702fd70 00000138 T decode_utf8
0702fea8 0000005c T decode_utf16
0702ff04 000000d4 T utf16_to_utf8
0702ffd8 000000e0 T encode_utf8
070300b8 00000054 T encode_utf16
0703010c 00000054 T rbtree_find
07030160 00000014 t is_black
07030174 000002bc T rbtree_remove
07030430 00000050 T rbtree_node_next
07030480 00000090 T rbtree_rotate
07030510 00000174 t do_insert
07030684 00000008 T rbtree_insert
0703068c 00000010 T rbtree_init
0703069c T LoadCROHooked
070306b0 T AR__ExecuteRoutine
070306d8 t stackBak
070306e0 T svcCustomBackdoor
070306e8 T svcConvertVAToPA
070306f0 T svcFlushDataCacheRange
070306f8 T svcMapProcessMemoryEx
0703070c T svcUnmapProcessMemoryEx
07030714 T svcControlProcess
0703071c T svcQueryMemory
0703074c T svcCreateThread
0703076c T svcExitThread
07030774 T svcSleepThread
0703077c T svcSetThreadPriority
07030784 T svcCreateEvent
07030798 T svcSignalEvent
070307a0 T svcClearEvent
070307a8 T svcMapMemoryBlock
070307b0 T svcUnmapMemoryBlock
070307b8 T svcCreateAddressArbiter
070307cc T svcArbitrateAddress
070307e4 T svcCloseHandle
070307ec T svcWaitSynchronization
070307f4 T svcWaitSynchronizationN
0703081c T svcGetSystemTick
07030824 T svcGetSystemInfo
0703083c T svcGetProcessInfo
07030854 T svcConnectToPort
07030868 T svcSendSyncRequest
07030870 T svcOpenProcess
07030884 T svcGetProcessId
07030898 T svcBreak
070308a0 T svcInvalidateProcessDataCache
070308a8 T svcFlushProcessDataCache
070308b0 T svcKernelSetState
070308b8 T svcQueryProcessMemory
070308dc 00000030 t CTRPluginFramework::GetCurrentTime()
0703090c 00000014 T CTRPluginFramework::Clock::Clock()
0703090c 00000014 T CTRPluginFramework::Clock::Clock()
07030920 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030920 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030928 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
07030960 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07030990 00000044 T CTRPluginFramework::Clock::Restart()
070309d4 00000014 T CTRPluginFramework::Touch::IsDown()
070309e8 00000028 T CTRPluginFramework::Touch::GetPosition()
07030a10 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07030a10 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07030a94 00000048 T CTRPluginFramework::Task::~Task()
07030a94 00000048 T CTRPluginFramework::Task::~Task()
07030adc 00000030 T CTRPluginFramework::Task::Start() const
07030b0c 00000044 T CTRPluginFramework::Task::Wait() const
07030b50 00000014 T CTRPluginFramework::Task::Status() const
07030b64 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030b64 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030b8c 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030c0c 00000048 T CTRPluginFramework::LineWriter::Flush()
07030c54 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030c54 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030c70 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030cdc 00000018 T CTRPluginFramework::LineWriter::Close()
07030cf4 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030db8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
07030e30 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703116c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0703116c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0703118c 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031214 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031214 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031340 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0703137c 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703147c 00000084 T CTRPluginFramework::ARCode::Update()
07031500 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07031500 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07031524 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0703154c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703154c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07031604 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031604 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031638 00000040 T CTRPluginFramework::ARCodeContext::Update()
07031678 00000090 T CTRPluginFramework::ARCodeContext::Clear()
07031708 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
070317e0 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
070317e0 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07031800 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
07031818 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703190c 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
07031928 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031a3c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031a4c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
07031ac4 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
07031adc 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07031b30 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031b74 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031bbc 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07032090 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07032090 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070320d4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
070320d4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
070320e8 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07032108 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07032280 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
070323a4 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07032ad8 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07032b28 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032b28 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032b90 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032bac 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032bac 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032bf8 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07032d14 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07032da4 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07032ebc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07032f44 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032fa0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032fa0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07033018 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07033018 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07033018 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07033018 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07033068 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070343bc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070343bc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07034550 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07034804 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0703488c 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070348d0 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
070348e4 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07034920 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034a88 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034ac4 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07034b28 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07034b4c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07034b74 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034b74 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034b9c 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07034f1c 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
070355a0 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
070355ec 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070356a4 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07035b18 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07035fe4 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
070360dc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07036164 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
070361a0 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070364c4 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07036540 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
070365ac 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
070365e4 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07036660 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
07036a2c 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07036c30 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07036cd0 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07036d8c 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07036e48 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07036ef4 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07036f80 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
070370f8 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0703720c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070372b4 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0703731c 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
070373ac 00000160 T ARM_Disasm::Decode01(unsigned long)
0703750c 00000028 T ARM_Disasm::Decode10(unsigned long)
07037534 0000007c T ARM_Disasm::Decode11(unsigned long)
070375b0 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07037618 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07037668 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07037780 000000c4 T ARM_Disasm::Decode00(unsigned long)
07037844 00000030 T ARM_Disasm::Decode(unsigned long)
07037874 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
0703794c 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07037c30 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07037f20 00000020 T CTRPluginFramework::Button::~Button()
07037f20 00000020 T CTRPluginFramework::Button::~Button()
07037f40 0000001c T CTRPluginFramework::Button::~Button()
07037f5c 00000040 T CTRPluginFramework::Button::operator()()
07037f9c 00000148 T CTRPluginFramework::Button::Draw()
070380e4 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07038238 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038238 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703835c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703835c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703837c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703837c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038410 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038410 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038424 00000018 T CTRPluginFramework::Button::Enable(bool)
0703843c 00000010 T CTRPluginFramework::Button::Enable()
0703844c 00000010 T CTRPluginFramework::Button::Disable()
0703845c 00000010 T CTRPluginFramework::Button::Lock()
0703846c 00000010 T CTRPluginFramework::Button::Execute()
0703847c 00000018 T CTRPluginFramework::Button::SetState(bool)
07038494 00000010 T CTRPluginFramework::Button::GetState() const
070384a4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070384a4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070384b8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070384b8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070384d8 00000024 T CTRPluginFramework::UIContainer::Draw()
070384fc 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07038530 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
070385f4 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07038634 00000094 T CTRPluginFramework::ComboBox::Draw()
070386c8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070386c8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07038714 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07038730 000000a8 T CTRPluginFramework::ComboBox::operator()()
070387d8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070387d8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07038824 0000003c T CTRPluginFramework::ComboBox::Clear()
07038860 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070388b0 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07038934 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038934 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038938 00000014 T CTRPluginFramework::FloatingButton::Draw()
0703894c 00000014 T CTRPluginFramework::FloatingButton::operator()()
07038960 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038974 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07038b34 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038b34 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038b74 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038b74 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038c34 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07038cd0 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07038d70 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07038d88 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07038db8 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038e58 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038e58 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038f08 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038f08 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038fb4 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038fb4 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07039034 00000040 T CTRPluginFramework::TouchKey::Clear()
07039074 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07039074 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07039094 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
070390b0 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070390b8 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07039118 00000060 T CTRPluginFramework::TouchKey::Draw()
07039178 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07039214 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070392d8 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070392d8 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07039428 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039428 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039448 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039464 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070394e0 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07039518 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07039580 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07039678 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07039688 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07039698 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070396a0 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070396ac 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070396ac 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07039714 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07039788 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
07039800 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07039800 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703984c 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703990c 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07039a44 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07039a6c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039ad0 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07039de0 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07039ed4 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703a11c 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703a448 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703a4d0 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
0703a568 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703a5e4 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703a698 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703a824 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703a86c 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703a9b4 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703ab0c 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
0703abf0 00000030 W std::__cxx11::to_string(unsigned long)
0703ac20 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ac20 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703acd4 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0703ad58 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703b2a0 00000230 T CTRPluginFramework::SearchMenu::Update()
0703b4d0 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b9e0 000000e4 T CTRPluginFramework::Converter::Converter()
0703b9e0 000000e4 T CTRPluginFramework::Converter::Converter()
0703bac4 00000010 T CTRPluginFramework::Converter::Instance()
0703bad4 00000108 T CTRPluginFramework::Converter::_Draw()
0703bbdc 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bbdc 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bbf0 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703be0c 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c290 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c718 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703cb94 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d1bc 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703dac8 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e3d8 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ecac 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f8ec 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040190 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040acc 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070413f0 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704218c 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042df0 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043534 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704393c 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704401c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070442ac 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044554 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070447e4 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07044818 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044b3c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07044b60 00000004 t addrMapNodeDestructor(rbtree_node*)
07044b64 000000d8 T mappableAlloc
07044c3c 00000050 T mappableFree
07044c8c 00000090 T __system_allocateHeaps
07044d1c 0000005c t getSysTime
07044d78 000000fc T __libctru_gtod
07044e74 00000008 T envGetHandle
07044e7c 00000004 T envDestroyHandles
07044e80 00000020 T __libctru_exit
07044ea0 00000020 T __appExit
07044ec0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044ec0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044eec 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044eec 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044f04 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0704500c 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
0704506c 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07045074 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07045098 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
070450bc 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
070450e0 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07045108 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07045130 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07045158 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07045228 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0704709c 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0704710c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0704712c 00000008 T __cxa_pure_virtual
07047134 00000010 T __aeabi_atexit
07047144 00000004 T operator new[](unsigned int)
07047148 00000058 T operator new(unsigned int)
070471a0 00000034 T __cxxabiv1::__terminate(void (*)())
070471d4 00000018 T std::terminate()
070471ec 0000000c T __cxxabiv1::__unexpected(void (*)())
070471f8 00000018 T std::unexpected()
07047210 00000014 T std::get_terminate()
07047224 00000014 T std::get_unexpected()
07047238 0000000c T std::bad_alloc::what() const
07047244 00000020 T std::bad_alloc::~bad_alloc()
07047244 00000020 T std::bad_alloc::~bad_alloc()
07047264 0000002c T std::bad_alloc::~bad_alloc()
07047290 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
070473f8 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07047460 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07047538 000006f4 T __gxx_personality_v0
07047c2c 00000004 T operator delete[](void*)
07047c30 00000014 T std::get_new_handler()
07047c44 0000005c T __cxa_guard_acquire
07047ca0 0000000c T __cxa_guard_release
07047cac 00000004 T std::exception::~exception()
07047cac 00000004 T std::exception::~exception()
07047cb0 00000004 T std::bad_exception::~bad_exception()
07047cb0 00000004 T std::bad_exception::~bad_exception()
07047cb4 0000000c T transaction clone for std::exception::what() const
07047cb4 0000000c T std::exception::what() const
07047cc0 0000000c T transaction clone for std::bad_exception::what() const
07047cc0 0000000c T std::bad_exception::what() const
07047ccc 00000018 T std::bad_exception::~bad_exception()
07047ce4 00000004 T operator delete(void*, unsigned int)
07047ce8 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07047d48 00000070 T __cxa_init_primary_exception
07047db8 00000054 T __cxa_throw
07047e0c 000000b0 T __cxa_rethrow
07047ebc 000000cc T __cxa_begin_catch
07047f88 000000e0 T __cxa_end_catch
07048068 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
07048154 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
07048208 00000044 T __cxa_allocate_exception
0704824c 00000030 T __cxa_free_exception
0704827c 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070482bc 00000004 T operator delete(void*)
070482c0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070482c0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070482e0 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704830c 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07048378 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07048454 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07048498 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
070484b0 00000014 T std::__detail::_List_node_base::_M_unhook()
070484c4 0000002c T std::__throw_bad_alloc()
070484f0 00000040 T std::__throw_logic_error(char const*)
07048530 00000040 T std::__throw_invalid_argument(char const*)
07048570 00000040 T std::__throw_length_error(char const*)
070485b0 00000040 T std::__throw_out_of_range(char const*)
070485f0 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704866c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
070486c0 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070486d4 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
070486f8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704871c 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070487d4 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
070488e0 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0704895c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0704895c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070489c8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
070489c8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
070489ec 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07048ab8 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07048bc8 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07048c38 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07048ca4 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048ce8 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048d00 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07048e24 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07048e5c 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
070490e4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0704911c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049168 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
070491c8 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0704925c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704926c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704927c 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
070492a8 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
070492f0 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07049338 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
070493dc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
070493ec 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07049450 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07049480 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
070494cc 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0704957c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704957c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070495ac 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07049624 T __cxa_end_cleanup
07049634 00000138 T __cxa_type_match
0704976c 000000b4 T __cxa_begin_cleanup
07049820 000000b4 T __gnu_end_cleanup
070498d4 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07049944 0000002c T __cxa_call_terminate
07049970 00000158 T __cxa_call_unexpected
07049ac8 0000000c T __cxa_get_globals_fast
07049ad4 0000000c T __cxa_get_globals
07049ae0 00000004 T std::type_info::~type_info()
07049ae0 00000004 T std::type_info::~type_info()
07049ae4 00000008 T std::type_info::__is_pointer_p() const
07049ae4 00000008 T std::type_info::__is_function_p() const
07049aec 0000004c T std::type_info::operator==(std::type_info const&) const
07049b38 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07049b94 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07049ba8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049ba8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049bc8 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07049bf4 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07049c5c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07049c88 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07049ccc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049ccc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049cec 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049d18 00000008 T std::logic_error::what() const
07049d20 00000064 T std::logic_error::~logic_error()
07049d20 00000064 T std::logic_error::~logic_error()
07049d84 0000001c T std::logic_error::~logic_error()
07049da0 00000020 T std::invalid_argument::~invalid_argument()
07049da0 00000020 T std::invalid_argument::~invalid_argument()
07049dc0 00000028 T std::invalid_argument::~invalid_argument()
07049de8 00000020 T std::length_error::~length_error()
07049de8 00000020 T std::length_error::~length_error()
07049e08 00000028 T std::length_error::~length_error()
07049e30 00000020 T std::out_of_range::~out_of_range()
07049e30 00000020 T std::out_of_range::~out_of_range()
07049e50 00000028 T std::out_of_range::~out_of_range()
07049e78 00000038 T std::logic_error::logic_error(char const*)
07049e78 00000038 T std::logic_error::logic_error(char const*)
07049eb0 00000020 T std::invalid_argument::invalid_argument(char const*)
07049eb0 00000020 T std::invalid_argument::invalid_argument(char const*)
07049ed0 00000020 T std::length_error::length_error(char const*)
07049ed0 00000020 T std::length_error::length_error(char const*)
07049ef0 00000020 T std::out_of_range::out_of_range(char const*)
07049ef0 00000020 T std::out_of_range::out_of_range(char const*)
07049f10 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07049f7c 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07049ffc 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0704a0f4 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0704a178 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
0704a178 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
0704a1e8 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704a1ec 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0704a21c 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a21c 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a260 000002bc T log2
0704a51c 00000024 t with_errno
0704a540 00000048 T __math_divzero
0704a588 0000001c T __math_invalid
0704a5a8 0000015c T ceil
0704a704 000000b4 T ceilf
0704a7b8 0000016c T floor
0704a924 00000088 T roundf
0704a9b0 00000108 T sqrtf
0704aab8 00000008 T __ieee754_sqrtf
0704aac0 00000008 T matherr
0704aac8 0000002c T __aeabi_f2lz
0704aac8 0000002c T __fixsfdi
0704aaf4 0000002c T __aeabi_d2lz
0704aaf4 0000002c T __fixdfdi
0704ab20 00000040 T __aeabi_f2ulz
0704ab20 00000040 T __fixunssfdi
0704ab60 00000040 T __aeabi_d2ulz
0704ab60 00000040 T __fixunsdfdi
0704aba0 00000128 T __udivmoddi4
0704acc8 00000018 t selfrel_offset31
0704ace0 00000094 t search_EIT_table
0704ad74 00000040 t __gnu_unwind_get_pr_addr
0704adb4 0000011c t get_eit_entry
0704aed0 00000088 t restore_non_core_regs
0704af58 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704af6c 00000004 t _Unwind_DebugHook
0704af70 00000064 t unwind_phase2
0704afd4 0000014c t unwind_phase2_forced
0704b120 000000a4 T __gnu_Unwind_RaiseException
0704b1c4 00000024 T __gnu_Unwind_ForcedUnwind
0704b1e8 00000074 T __gnu_Unwind_Resume
0704b25c 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704b27c 00000004 T _Unwind_Complete
0704b280 00000018 T _Unwind_DeleteException
0704b298 00000054 T _Unwind_VRS_Get
0704b2ec 0000002c t _Unwind_GetGR
0704b318 00000054 T _Unwind_VRS_Set
0704b36c 0000002c t _Unwind_SetGR
0704b398 000000c0 T __gnu_Unwind_Backtrace
0704b458 00000448 t __gnu_unwind_pr_common
0704b8a0 00000008 T __aeabi_unwind_cpp_pr0
0704b8a8 00000008 W __aeabi_unwind_cpp_pr1
0704b8b0 00000008 W __aeabi_unwind_cpp_pr2
0704b8b8 000003dc T _Unwind_VRS_Pop
0704bc94 00000060 t next_unwind_byte
0704bcf4 0000002c t _Unwind_GetGR.constprop.0
0704bd20 00000004 t unwind_UCB_from_context
0704bd24 000003c8 T __gnu_unwind_execute
0704c0ec 00000048 T __gnu_unwind_frame
0704c134 00000010 T _Unwind_GetRegionStart
0704c144 0000001c T _Unwind_GetLanguageSpecificData
0704c160 00000008 T _Unwind_GetDataRelBase
0704c168 00000008 T _Unwind_GetTextRelBase
0704c170 00000010 T ctime
0704c180 00000014 T __cxa_atexit
0704c194 0000000c T __errno
0704c1a0 0000007c T __libc_init_array
0704c21c 00000018 T isspace
0704c234 00000018 T isxdigit
0704c24c 0000001c T localtime
0704c268 00000378 T localtime_r
0704c5e0 00000020 T memalign
0704c600 0000014c T _memalign_r
0704c74c 00000018 T malloc
0704c764 00000018 T free
0704c77c 000007d8 T _malloc_r
0704cf54 00000100 T memchr
0704d054 000000fc T memcmp
0704d150 00000118 T memcpy
0704d268 00000154 T memmove
0704d3bc 00000114 T memset
0704d4d0 0000000c T __malloc_lock
0704d4dc 0000000c T __malloc_unlock
0704d4e8 00000044 T rand
0704d52c 000000d4 T snprintf
0704d600 00000064 T sprintf
0704d664 00000008 T __seofread
0704d66c 00000154 t iso_year_adjust
0704d7c0 00001138 t __strftime
0704e8f8 00000020 T strftime
0704e918 0000005c T strlen
0704e974 0000010c T strncmp
0704ea80 000000e0 T strncpy
0704eb60 00000054 t sulp
0704ebb8 000013c4 T _strtod_l
0704ff80 000000bc T strtof
07050040 0000025c t _strtoull_l.isra.0
0705029c 00000004 T _strtoull_r
070502a0 000001d0 t _strtoul_l.isra.0
07050470 00000004 T _strtoul_r
07050474 00000028 T strtoul
0705049c 00000620 t get_arg
07050ac0 000035c0 T _svfprintf_r
07054080 0000003c T time
070540bc 00000224 T __tzcalc_limits
070542e0 0000000c T __tz_lock
070542ec 0000000c T __tz_unlock
070542f8 00000010 T _tzset_unlocked
07054308 0000046c T _tzset_unlocked_r
07054774 000000a4 T _vsnprintf_r
07054818 00000038 T vsnprintf
07054850 00000054 T _wcrtomb_r
070548a4 00000020 T _wcsrtombs_r
070548c4 0000000c T abs
070548d0 0000001c T asctime
070548ec 00000078 T asctime_r
07054964 000000b0 T __register_exitproc
07054a14 000001c8 t quorem
07054be0 000012ec T _dtoa_r
07055ecc 000000f8 T _malloc_trim_r
07055fc4 000002e4 T _free_r
070562a8 000000ec t rshift
07056394 00000828 T __gethex
07056bbc 00000060 T __match
07056c1c 00000254 T __hexnan
07056e70 000000c8 T _findenv_r
07056f38 00000018 T _getenv_r
07056f50 0000000c T __gettzinfo
07056f5c 0000027c T gmtime_r
070571d8 0000000c T labs
070571e4 0000000c T _localeconv_r
070571f0 00000010 T __locale_mb_cur_max
07057200 000002fc T __utf8_mbtowc
070574fc 00000088 T _Balloc
07057584 0000001c T _Bfree
070575a0 000000e0 T __multadd
07057680 000000e4 T __s2b
07057764 00000058 T __hi0bits
070577bc 0000009c T __lo0bits
07057858 00000020 T __i2b
07057878 000001c4 T __multiply
07057a3c 00000100 T __pow5mult
07057b3c 000000f4 T __lshift
07057c30 0000005c T __mcmp
07057c8c 00000168 T __mdiff
07057df4 00000074 T __ulp
07057e68 000000d4 T __b2d
07057f3c 00000100 T __d2b
0705803c 00000084 T __ratio
070580c0 0000006c T __copybits
0705812c 00000078 T __any_on
070581a4 0000000c T nanf
070581b0 000000a8 T frexp
07058258 00000064 T siprintf
070582bc 00000074 T siscanf
07058330 00000010 T nan
07058340 000000d4 T sniprintf
07058414 000000f0 T strcpy
07058504 000001bc t _strtol_l.isra.0
070586c0 00000004 T _strtol_r
070586c4 00000620 t get_arg
07058ce4 00000188 T __ssprint_r
07058e6c 0000248c T _svfiprintf_r
0705b2f8 00000048 t get_arg
0705b340 000000e4 T _sungetc_r
0705b424 0000006c T __ssrefill_r
0705b490 000000c8 T _sfread_r
0705b558 00002234 T __ssvfiscanf_r
0705d78c 000000a4 T __submore
0705d830 00000184 T _wcsnrtombs_l
0705d9b4 0000004c T _wcsnrtombs_r
0705da00 000000e8 T __utf8_wctomb
0705dae8 00000094 T _calloc_r
0705db7c 0000000c T __env_lock
0705db88 0000000c T __env_unlock
0705db94 00000008 T iswspace
0705db9c 00000060 T _mbrtowc_r
0705dbfc 00000020 T realloc
0705dc1c 000004bc T _realloc_r
0705e0d8 000000cc T __sccl
0705e1a4 0000025c t _strtoll_l.isra.0
0705e400 00000004 T _strtoll_r
0705e404 0000003c T iswspace_l
0705e440 000001e0 t __jp2uc
0705e620 00000094 T _jp2uc_l
0705e6b4 00000084 T category
0705e738 0000002c T _gettimeofday_r
0705e764 00000070 T _sbrk_r
0705e7d4 00000018 T __libc_lock_acquire
0705e7ec 00000018 T __libc_lock_release
0705e804 00000018 T __libc_lock_acquire_recursive
0705e81c 00000018 T __libc_lock_release_recursive
0705e834 00000028 T __getreent
0705e85c T _fini
0705e874 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0705ea5c 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0705ea68 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0705ea7c 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0705ea98 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0705eaa8 00000030 r ._190
0705ead8 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0705eae8 00000090 r ._188
0705eb78 00000010 r ._189
0705ebc4 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705ebe4 00000a00 r font
0705f5e4 0000001c R vtable for CTRPluginFramework::TextBox
0705f620 00000058 r CTRPluginFramework::g_OSDPattern
0705f6a8 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705f6bc 00000038 r CTRPluginFramework::stable
0705f6f4 00000038 r CTRPluginFramework::ktable
0705f72c 00000048 r CTRPluginFramework::g_ctrpf
0705f774 00000030 r CTRPluginFramework::g_byme
0705f7d0 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705f7e8 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705f800 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705f818 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705f830 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705f838 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705f854 00000038 R vtable for CTRPluginFramework::Search
0705f88c 00000038 R vtable for CTRPluginFramework::Search32
0705f8c4 00000005 r CSWTCH.74
0705f8cc 00000004 R Search15_array_length
0705f8d0 00000384 r Search15_array
0705fc54 00000004 R UnCheckedCheckbox_array_length
0705fc58 00000384 r UnCheckedCheckbox_array
0705ffdc 00000004 R Unsplash15_array_length
0705ffe0 00000384 r Unsplash15_array
07060364 00000004 R Plus25_array_length
07060368 000009c4 r Plus25_array
07060d2c 00000004 R GameControllerFilled25_array_length
07060d30 000009c4 r GameControllerFilled25_array
070616f4 00000004 R About15_array_length
070616f8 00000384 r About15_array
07061a7c 00000004 R Trash25_array_length
07061a80 000009c4 r Trash25_array
07062444 00000004 R Cut25_array_length
07062448 000009c4 r Cut25_array
07062e0c 00000004 R CloseWindow20_array_length
07062e10 00000640 r CloseWindow20_array
07063450 00000004 R AddFavoriteFilled25_array_length
07063454 000009c4 r AddFavoriteFilled25_array
07063e18 00000004 R ClearSymbolFilled15_array_length
07063e1c 00000384 r ClearSymbolFilled15_array
070641a0 00000004 R ClipboardFilled25_array_length
070641a4 000009c4 r ClipboardFilled25_array
07064b68 00000004 R CheckedCheckbox_array_length
07064b6c 00000384 r CheckedCheckbox_array
07064ef0 00000004 R CutFilled25_array_length
07064ef4 000009c4 r CutFilled25_array
070658b8 00000004 R CapsLockOn15_array_length
070658bc 00000384 r CapsLockOn15_array
07065c40 00000004 R TrashFilled25_array_length
07065c44 000009c4 r TrashFilled25_array
07066608 00000004 R RAM15_array_length
0706660c 00000384 r RAM15_array
07066990 00000004 R More15_array_length
07066994 00000384 r More15_array
07066d18 00000004 R InfoFilled25_array_length
07066d1c 000009c4 r InfoFilled25_array
070676e0 00000004 R CloseWindowFilled20_array_length
070676e4 00000640 r CloseWindowFilled20_array
07067d24 00000004 R HandCursor15_array_length
07067d28 00000384 r HandCursor15_array
070680ac 00000004 R EnterKey15_array_length
070680b0 00000384 r EnterKey15_array
07068434 00000004 R Duplicate25_array_length
07068438 000009c4 r Duplicate25_array
07068dfc 00000004 R Settings15_array_length
07068e00 00000384 r Settings15_array
07069184 00000004 R File15_array_length
07069188 00000384 r File15_array
0706950c 00000004 R AddFavorite25_array_length
07069510 000009c4 r AddFavorite25_array
07069ed4 00000004 R Edit25_array_length
07069ed8 000009c4 r Edit25_array
0706a89c 00000004 R DuplicateFilled25_array_length
0706a8a0 000009c4 r DuplicateFilled25_array
0706b264 00000004 R Save25_array_length
0706b268 000009c4 r Save25_array
0706bc2c 00000004 R Clipboard25_array_length
0706bc30 000009c4 r Clipboard25_array
0706c5f4 00000004 R Info25_array_length
0706c5f8 000009c4 r Info25_array
0706cfbc 00000004 R EditFilled25_array_length
0706cfc0 000009c4 r EditFilled25_array
0706d984 00000004 R KeyboardFilled25_array_length
0706d988 000009c4 r KeyboardFilled25_array
0706e34c 00000004 R PlusFilled25_array_length
0706e350 000009c4 r PlusFilled25_array
0706ed14 00000004 R Shutdown15_array_length
0706ed18 00000384 r Shutdown15_array
0706f09c 00000004 R ClearSymbol15_array_length
0706f0a0 00000384 r ClearSymbol15_array
0706f424 00000004 R Maintenance15_array_length
0706f428 00000384 r Maintenance15_array
0706f7ac 00000004 R Controller15_array_length
0706f7b0 00000384 r Controller15_array
0706fb34 00000004 R Grid15_array_length
0706fb38 00000384 r Grid15_array
0706febc 00000004 R Keyboard25_array_length
0706fec0 000009c4 r Keyboard25_array
07070884 00000004 R CapsLockOnFilled15_array_length
07070888 00000384 r CapsLockOnFilled15_array
07070c0c 00000004 R UserManualFilled15_array_length
07070c10 00000384 r UserManualFilled15_array
07070f94 00000004 R Rocket40_array_length
07070f98 00001900 r Rocket40_array
07072898 00000004 R Star15_array_length
0707289c 00000384 r Star15_array
07072c20 00000004 R EnterKeyFilled15_array_length
07072c24 00000384 r EnterKeyFilled15_array
07072fa8 00000004 R GameController25_array_length
07072fac 000009c4 r GameController25_array
07073970 00000004 R FolderFilled_array_length
07073974 00000384 r FolderFilled_array
07073cf8 00000004 R Restart15_array_length
07073cfc 00000384 r Restart15_array
070740b0 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070740cc 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
070740d8 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07074158 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0707416c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07074174 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0707417c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07074184 00000040 r RegNames
070741c4 00000040 r cond_names
07074204 00000010 r shift_names
07074214 0000001c R vtable for CTRPluginFramework::Button
07074230 0000001c R vtable for CTRPluginFramework::ComboBox
0707424c 0000001c R vtable for CTRPluginFramework::FloatingButton
07074268 0000001c R vtable for CTRPluginFramework::TouchKey
07074284 0000001c R vtable for CTRPluginFramework::NumericTextBox
07076848 00000014 V vtable for CTRPluginFramework::MenuItem
07076f20 0000001c V vtable for CTRPluginFramework::MenuEntryTools
070782e0 0000000c R typeinfo for std::bad_alloc
070782ec 0000000d R typeinfo name for std::bad_alloc
070782fc 00000014 R vtable for std::bad_alloc
07078334 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0707833c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07078344 0000000c R typeinfo for std::bad_exception
07078350 00000008 R typeinfo for std::exception
07078358 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07078378 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0707839c 00000012 R typeinfo name for std::bad_exception
070783b0 0000000d R typeinfo name for std::exception
070783c0 00000014 R vtable for std::bad_exception
070783d4 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070783e0 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07078408 0000002c R vtable for __cxxabiv1::__si_class_type_info
07078564 00000008 R typeinfo for std::type_info
0707856c 0000000d R typeinfo name for std::type_info
0707857c 0000000c R typeinfo for __cxxabiv1::__class_type_info
07078588 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070785ac 0000002c R vtable for __cxxabiv1::__class_type_info
070785d8 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070785e4 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07078608 00000014 R vtable for __gnu_cxx::recursive_init_error
0707861c 0000000c R typeinfo for std::logic_error
07078628 0000000c R typeinfo for std::length_error
07078634 0000000c R typeinfo for std::out_of_range
07078640 0000000c R typeinfo for std::invalid_argument
0707864c 00000010 R typeinfo name for std::logic_error
0707865c 00000011 R typeinfo name for std::length_error
07078670 00000011 R typeinfo name for std::out_of_range
07078684 00000015 R typeinfo name for std::invalid_argument
0707869c 00000014 R vtable for std::logic_error
070786b0 00000014 R vtable for std::length_error
070786c4 00000014 R vtable for std::out_of_range
070786d8 00000014 R vtable for std::invalid_argument
070787b0 00000890 R __log2_data
07079040 00000004 R _global_impure_ptr
07079044 00000060 R __month_lengths
07079130 00000014 r fpi.7554
07079144 00000014 r fpinan.7590
07079158 00000028 r tinytens
070791bc 00000010 r blanks.8740
070791cc 00000010 r zeroes.8741
070791dc 000000fc R _C_time_locale
070794a4 00000015 r day_name.6253
070794bc 00000024 r mon_name.6254
070794e0 00000101 R _ctype_
070795f8 00000100 R __hexdig
070796f8 0000000c R _C_numeric_locale
07079750 00000028 R __mprec_bigtens
07079778 000000c8 R __mprec_tens
07079840 0000000c r p05.7474
0707984c 0000006c R __action_table
070798b8 00000100 R __chclass
070799b8 0000006c R __state_table
07079a24 00000010 r blanks.8719
07079a34 00000010 r zeroes.8720
07079a44 00000022 r basefix.8286
07079a7c 000000bc r a1
07079b38 000000bc r a2
07079bf4 0000005b r a3
07079c50 00000070 r a6
07079cc0 000000a2 r a7
07079d64 00000040 r a8
07079da4 0000172a r b02cf
0707b4d0 00001a7c r d02f4
0707cf4c 0000309c r categories
070800fc R __exidx_start
070803b4 R __exidx_end
070803b4 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
070803b8 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
070803bc 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
070803c0 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
070803c4 00000001 D CTRPluginFramework::g_keepRunning
070803c8 00000004 D CTRPluginFramework::FwkSettings::Header
070803cc 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070803d0 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070803d4 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
070803d8 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070803dc 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070803e0 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070803e4 00000004 D CTRPluginFramework::Screenshot::Screens
070803e8 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070803ec 00000001 D CTRPluginFramework::SystemImpl::Language
070803ed 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
070803f0 00000004 D Search15
070803f4 00000004 D UnCheckedCheckbox
070803f8 00000004 D Unsplash15
070803fc 00000004 D Plus25
07080400 00000004 D GameControllerFilled25
07080404 00000004 D About15
07080408 00000004 D Trash25
0708040c 00000004 D Cut25
07080410 00000004 D CloseWindow20
07080414 00000004 D AddFavoriteFilled25
07080418 00000004 D ClearSymbolFilled15
0708041c 00000004 D ClipboardFilled25
07080420 00000004 D CheckedCheckbox
07080424 00000004 D CutFilled25
07080428 00000004 D CapsLockOn15
0708042c 00000004 D TrashFilled25
07080430 00000004 D RAM15
07080434 00000004 D More15
07080438 00000004 D InfoFilled25
0708043c 00000004 D CloseWindowFilled20
07080440 00000004 D HandCursor15
07080444 00000004 D EnterKey15
07080448 00000004 D Duplicate25
0708044c 00000004 D Settings15
07080450 00000004 D File15
07080454 00000004 D AddFavorite25
07080458 00000004 D Edit25
0708045c 00000004 D DuplicateFilled25
07080460 00000004 D Save25
07080464 00000004 D Clipboard25
07080468 00000004 D Info25
0708046c 00000004 D EditFilled25
07080470 00000004 D KeyboardFilled25
07080474 00000004 D PlusFilled25
07080478 00000004 D Shutdown15
0708047c 00000004 D ClearSymbol15
07080480 00000004 D Maintenance15
07080484 00000004 D Controller15
07080488 00000004 D Grid15
0708048c 00000004 D Keyboard25
07080490 00000004 D CapsLockOnFilled15
07080494 00000004 D UserManualFilled15
07080498 00000004 D Rocket40
0708049c 00000004 D Star15
070804a0 00000004 D EnterKeyFilled15
070804a4 00000004 D GameController25
070804a8 00000004 D FolderFilled
070804ac 00000004 D Restart15
070804b0 000001f4 D opcode_names
070806a4 D __dso_handle
070806a8 00000004 D __cxxabiv1::__terminate_handler
070806ac 00000004 D __cxxabiv1::__unexpected_handler
070806b0 00000001 D __fdlib_version
070806b4 00000004 D _impure_ptr
070806b8 00000460 d impure_data
07080b18 00000408 D __malloc_av_
07080f20 00000004 D __malloc_sbrk_base
07080f24 00000004 D __malloc_trim_threshold
07080f28 0000000c d __malloc_recursive_mutex
07080f34 00000004 d __tz_mutex
07080f38 00000008 D _tzname
07080f40 0000000c D __atexit_recursive_mutex
07080f50 00000058 d tzinfo
07080fa8 00000002 d numempty
07080fac 0000016c D __global_locale
07081118 00000004 D environ
0708111c 0000000c d __env_recursive_mutex
07081128 D __TMC_END__
07081138 d _GLOBAL_OFFSET_TABLE_
07081144 D __tdata_lma
07081150 t __frame_dummy_init_array_entry
07081150 T __init_array_start
07081150 B __preinit_array_end
07081150 B __preinit_array_start
07081150 D __tdata_lma_end
070811ac t __do_global_dtors_aux_fini_array_entry
070811ac T __init_array_end
070811b0 B __c_bss_start
070811b0 00000004 B CTRPluginFramework::offset
070811b4 000000b4 b CTRPluginFramework::original_speed
07081268 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
0708126c 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
07081270 00000004 B CTRPluginFramework::data
07081274 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
07081275 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
07081278 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0708127c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
07081280 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
07081284 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
07081288 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0708128c 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
07081290 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
07081291 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
07081294 00000004 B CTRPluginFramework::g_FNsPointer
07081298 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0708129c 00000004 B CTRPluginFramework::g_itemPointer
070812a0 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
070812a4 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
070812a5 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
070812a6 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
070812a7 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
070812a8 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
070812a9 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
070812ac 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070812b0 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070812b4 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
070812b8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
070812ba 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
070812bc 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
070812c0 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070812c4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070812c8 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070812cc 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070812d8 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070812dc 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070812e8 0000000c b CTRPluginFramework::g_items
070812f4 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
070812f8 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
07081304 0000000c b CTRPluginFramework::speed
07081310 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
07081314 00000004 B CTRPluginFramework::g_oldRacePointer5CC
07081318 00000004 b g_onLoadCroLock
0708131c 00000004 B g_mainThread
07081320 00000004 B CTRPluginFramework::g_keepEvent
07081324 00000004 B CTRPluginFramework::g_continueGameEvent
07081328 0000005c b CTRPluginFramework::exception_data
07081384 00000004 B CTRPluginFramework::g_keepThreadHandle
07081388 00000018 b g_onLoadCroHook
070813a0 00000008 B CTRPluginFramework::_sdmcArchive
070813a8 00000004 B g_gspEventThreadPriority
070813ac 00000004 B CTRPluginFramework::g_resumeEvent
070813b0 00001000 b CTRPluginFramework::keepThreadStack
070823b0 00000004 B __ctru_heap_size
070823b4 00000004 B CTRPluginFramework::Color::Black
070823b8 00000004 B CTRPluginFramework::Color::White
070823bc 00000004 B CTRPluginFramework::Color::Red
070823c0 00000004 B CTRPluginFramework::Color::Lime
070823c4 00000004 B CTRPluginFramework::Color::Blue
070823c8 00000004 B CTRPluginFramework::Color::Yellow
070823cc 00000004 B CTRPluginFramework::Color::Cyan
070823d0 00000004 B CTRPluginFramework::Color::Magenta
070823d4 00000004 B CTRPluginFramework::Color::Silver
070823d8 00000004 B CTRPluginFramework::Color::Gray
070823dc 00000004 B CTRPluginFramework::Color::Maroon
070823e0 00000004 B CTRPluginFramework::Color::Olive
070823e4 00000004 B CTRPluginFramework::Color::Green
070823e8 00000004 B CTRPluginFramework::Color::Purple
070823ec 00000004 B CTRPluginFramework::Color::Teal
070823f0 00000004 B CTRPluginFramework::Color::Navy
070823f4 00000004 B CTRPluginFramework::Color::BlackGrey
070823f8 00000004 B CTRPluginFramework::Color::Brown
070823fc 00000004 B CTRPluginFramework::Color::DarkGrey
07082400 00000004 B CTRPluginFramework::Color::DeepSkyBlue
07082404 00000004 B CTRPluginFramework::Color::DimGrey
07082408 00000004 B CTRPluginFramework::Color::DodgerBlue
0708240c 00000004 B CTRPluginFramework::Color::Gainsboro
07082410 00000004 B CTRPluginFramework::Color::ForestGreen
07082414 00000004 B CTRPluginFramework::Color::LimeGreen
07082418 00000004 B CTRPluginFramework::Color::Orange
0708241c 00000004 B CTRPluginFramework::Color::SkyBlue
07082420 00000004 B CTRPluginFramework::Color::Turquoise
07082424 00000004 b CTRPluginFramework::g_runningInstance
07082428 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082430 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082438 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082440 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082444 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082446 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082448 00000180 b CTRPluginFramework::g_keyName
070825c8 00000004 B CTRPluginFramework::__fileHandle
070825d0 00000008 B CTRPluginFramework::Time::Zero
070825d8 00000004 B CTRPluginFramework::System::OnAbort
070825dc 00000004 B CTRPluginFramework::Controller::_keysDown
070825e0 00000004 B CTRPluginFramework::Controller::_keysHeld
070825e4 00000004 B CTRPluginFramework::Controller::_keysReleased
070825e8 000009c4 b CTRPluginFramework::g_rng
07082fb0 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
07082fb4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07082fb8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07082fbc 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
07082fbd 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
07082fbe 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
07082fbf 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
07082fc0 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
07082fc1 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
07082fc2 00000001 B CTRPluginFramework::Preferences::ShowTopFps
07082fc3 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
07082fc4 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07082fc5 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07082fc8 00000070 B CTRPluginFramework::Preferences::Settings
07083038 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07083050 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07083068 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07083080 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
07083081 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
07083082 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
07083084 00000004 b CTRPluginFramework::defaultSysFont
07083088 00000004 B CTRPluginFramework::g_fontAllocated
0708308c 00000004 b CTRPluginFramework::tileData
07083090 00000004 b CTRPluginFramework::glyph
07083094 0000000c B CTRPluginFramework::Font::_mutex
070830a0 00000004 B CTRPluginFramework::g_glyphAllocated
070830a4 00000028 B CTRPluginFramework::Window::BottomWindow
070830cc 00000028 B CTRPluginFramework::Window::TopWindow
070830f4 00000004 B CTRPluginFramework::RendererPriv::g_customColor
070830f8 00000008 B CTRPluginFramework::Renderer::hookContext
07083100 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07083104 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07083108 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708310c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07083118 0000000c B CTRPluginFramework::OSDImpl::RecLock
07083124 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
07083130 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07083148 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07083160 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
07083164 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708316c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07083170 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
07083178 00000018 B CTRPluginFramework::OSDImpl::OSDHook
07083190 00000010 b CTRPluginFramework::InstallOSD()::returnCode
070831a0 00000004 B CTRPluginFramework::OSDImpl::HookReturn
070831a4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070831ac 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070831d0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070831dc 00000004 b CTRPluginFramework::g_second
070831e0 00000010 b CTRPluginFramework::g_fpsClock
070831f0 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
070831f4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
070831f5 00000001 B CTRPluginFramework::OSDImpl::MessColors
070831f8 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
070831fc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07083200 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083208 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07083228 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07083230 00000004 b CTRPluginFramework::g_ctrpfString
07083234 00000004 b CTRPluginFramework::g_bymeString
07083238 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083240 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083248 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083250 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083258 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708325c 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07083260 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083268 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083270 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07083274 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07083278 00000004 b CTRPluginFramework::g_mode
0708327c 00000004 b CTRPluginFramework::g_OpenFileLock
07083280 00000004 b CTRPluginFramework::g_HookMode
07083288 00000040 b CTRPluginFramework::g_hookExportFile
070832c8 00000010 b CTRPluginFramework::g_returncode
070832d8 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
070832f0 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070832f4 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070832f8 00000004 b CTRPluginFramework::g_screenshotEntry
070832fc 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083300 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07083304 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07083308 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708330c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07083310 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07083320 00000004 B CTRPluginFramework::__g_hexEditor
07083324 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083328 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083338 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708333c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07083340 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07083350 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083360 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07083370 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07083374 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083378 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708337c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708338c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07083390 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070833a0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070833a4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070833b4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070833b8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070833c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070833c8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070833d0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070833d8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070833e0 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070833e4 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070833f0 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
070833fc 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07083408 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083410 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083418 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708341c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708342c 00000004 b CTRPluginFramework::__pmARinstance
07083430 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083434 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083438 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083448 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083458 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708345c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083460 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083468 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083478 00000004 b CTRPluginFramework::g_radioId
0708347c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
07083480 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
07083484 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
07083488 00000004 B CTRPluginFramework::_pool
07083490 00000008 B CTRPluginFramework::Screenshot::_timer
07083498 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070834a0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070834a8 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070834c0 00000004 B CTRPluginFramework::Screenshot::_filecount
070834c4 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070834dc 00000004 B CTRPluginFramework::Screenshot::_display
070834e0 00000004 B CTRPluginFramework::Screenshot::_mode
070834e8 00000008 B CTRPluginFramework::Screenshot::Timer
070834f0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070834f4 00000004 B CTRPluginFramework::Screenshot::_task
070834f8 00000004 B CTRPluginFramework::Screenshot::_count
070834fc 00000008 b CTRPluginFramework::g_sleepEvent
07083504 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07083508 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708350c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07083510 00000004 B CTRPluginFramework::SystemImpl::AptStatus
07083514 00000004 B CTRPluginFramework::HookManager::instance
07083518 00000078 B CTRPluginFramework::Scheduler::_singleton
07083590 00000040 b CTRPluginFramework::_topBuf
070835d0 00000004 B CTRPluginFramework::ScreenImpl::Top
070835d4 00000040 b CTRPluginFramework::_botBuf
07083614 00000004 B CTRPluginFramework::ScreenImpl::Bottom
07083618 0000000c b CTRPluginFramework::Heap::_mutex
07083624 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07083628 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708362c 00000008 b CTRPluginFramework::Heap::g_heapPool
07083634 0000000c b sAddrMap
07083640 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07083658 0000000c B CTRPluginFramework::FSPath::FSMutex
07083668 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708366c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070836d0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070836d4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070836d8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070836e0 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070836e4 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070836e8 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070836f4 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07083700 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07083710 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
07083712 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
07083718 0000000c b _mutex
07083724 00000008 b sVramPool
0708372c 0000000c b sAddrMap
07083738 00000004 b srvRefCount
0708373c 00000004 b srv2Handle
07083740 00000004 b errfRefCount
07083744 00000004 b errfHandle
07083748 00000004 b sharedFontAddr
0708374c 00000004 b arbiter
07083750 00000004 b cfguRefCount
07083754 00000004 b cfguHandle
07083758 00000004 b fsuHandle
07083760 00000080 b fsExemptArchives
070837e0 00000004 b fsuRefCount
070837e4 00000001 B fs
070837e8 0000000c b aptFirstHook
070837f4 00000004 b serviceName.7785
070837f8 00000004 b aptRefCount
070837fc 0000000c b aptEvents
07083808 00000008 b aptSleepEvent
07083810 00000004 b aptEventHandlerThread
07083814 00000004 b aptMessageFunc
07083818 00000004 b aptMessageFuncData
0708381c 00000001 b aptHomeButtonState
0708381d 00000001 b flagInit.8135
0708381e 00000001 b flagValue.8136
07083820 00001000 b aptParameters
07084820 00001000 b __stack
07085820 00000004 b amRefCount
07085824 00000004 b amHandle
07085828 00000004 b acRefCount
0708582c 00000004 b acHandle
07085830 00000004 b hidRefCount
07085834 00000004 b kOld
07085838 00000004 b kHeld
0708583c 00000004 b cPos
07085840 00000004 b tPos
07085844 00000006 b aVec
0708584a 00000006 b gRate
07085850 00000004 b kDown
07085854 00000004 b kUp
07085858 00000004 b gspEventData
0708585c 00000038 b gspEvents
07085894 0000001c b gspEventCounts
070858b0 00000001 b gspRunEvents
070858b4 00000004 b gspRefCount
070858b8 00000004 b gfxSharedMemory
070858bc 00000001 b gfxThreadID
070858c0 00000004 b irrstRefCount
070858c4 00000004 b kHeld
070858c8 00000004 b csPos
070858cc 00000004 b g_mainThreadVars
070858d0 b saved_stack
070858d8 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070858dc 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070858f4 0000000c B CTRPluginFramework::g_codeTypes
07085900 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085904 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07085910 00000001 b CTRPluginFramework::g_condAgainstData
07085911 00000001 b CTRPluginFramework::g_newCondDataToggle
07085914 00000004 b CTRPluginFramework::__arCodeEditor
07085918 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708591c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07085928 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07085930 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085938 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085940 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085948 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085958 00000001 b CTRPluginFramework::g_progressLoop
07085960 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085968 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085970 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085978 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085980 00000004 b CTRPluginFramework::__converter
07085984 00000008 b sMappablePool
0708598c 0000000c b sAddrMap
07085998 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708599c 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070859a0 00000008 B CTRPluginFramework::ARHandler::Offset
070859a8 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070859ac 00000010 B CTRPluginFramework::ARHandler::Data
070859bc 00000008 B CTRPluginFramework::ARHandler::Storage
070859c4 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070859c8 00000001 b CTRPluginFramework::ToggleFloat
070859cc 00000004 b CTRPluginFramework::g_context
070859d0 00000fa0 b CTRPluginFramework::arStack
07086970 b completed.10351
07086974 b object.10356
0708698c 00000004 b (anonymous namespace)::__new_handler
07086990 00000010 b (anonymous namespace)::emergency_pool
070869a0 0000000c b eh_globals
070869ac 00000010 V std::string::_Rep::_S_empty_rep_storage
070869bc 00000028 B __malloc_current_mallinfo
070869e4 00000004 B __malloc_max_sbrked_mem
070869e8 00000004 B __malloc_max_total_mem
070869ec 00000004 B __malloc_top_pad
070869f0 0000000b b __tzname_dst
070869fc 0000000b b __tzname_std
07086a08 00000004 b prev_tzenv
07086a0c 00000004 B _daylight
07086a10 00000004 B _timezone
07086a14 00000004 b initial_env
07086a18 00000004 b heap_start.7414
07086a1c 00000004 B fake_heap_end
07086a20 00000004 B fake_heap_start
07086a24 00000048 B __syscalls
07086a6c 00000004 B g_sharedFont
07086a70 00000004 B charPerSheet
07086a74 00000004 B hidMemHandle
07086a78 00000004 B hidHandle
07086a7c 00000014 B hidEvents
07086a90 00000004 B hidSharedMem
07086a94 00000004 B gspEventThread
07086a98 00000004 B gspEvent
07086a9c 00000004 B gspGpuHandle
07086aa0 00000004 B gspSharedMemHandle
07086aa4 00000004 B gspThreadEventHandle
07086aa8 00000004 B irrstMemHandle
07086aac 00000004 B irrstEvent
07086ab0 00000004 B irrstHandle
07086ab4 00000004 B irrstSharedMem
07086ab8 00000004 B __ctru_linear_heap
07086abc 00000004 B __tmp
07086ac0 00000004 B __ctru_linear_heap_size
07086ac4 00000004 B __system_retAddr
07086ac8 00000004 B __ctru_heap
07086acc B __c_bss_end
07086acc B __tls_start
07086aec A __end__
07086aec B __tls_end
