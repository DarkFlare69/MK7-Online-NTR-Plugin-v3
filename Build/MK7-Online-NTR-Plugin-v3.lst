00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_uldivmod
07000e8c t deregister_tm_clones
07000eb8 t register_tm_clones
07000ef0 t __do_global_dtors_aux
07000f34 t frame_dummy
07000f68 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
07000f90 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07000fa4 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07000fb8 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07000fc8 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
07000fd8 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07000fe8 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07000ff8 00000154 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
0700114c 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
070011b4 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07001218 000000b4 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
070012cc 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
07001328 000000c4 t unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .part.40]
070013ec 00000078 t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07001464 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
07001464 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
07001484 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
070014fc 000001dc t CTRPluginFramework::ToggleTouchscreenForceOn()
070016d8 00000084 T CTRPluginFramework::IsInRace()
0700175c 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
070017c4 0000008c T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001850 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
070018a4 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001918 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
070019dc 00000124 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001b00 0000009c T CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)
07001b9c 000000bc T CTRPluginFramework::GetRacePointer()
07001c58 00000030 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
07001c88 00000030 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07001cb8 0000002c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07001ce4 00000030 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07001d14 0000002c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
07001d40 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07001d44 0000003c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
07001d80 000000a0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
07001e20 000000bc T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07001edc 00000280 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
0700215c 0000022c T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
07002388 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
07002508 00000038 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
07002540 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07002670 0000009c T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
0700270c 000000a4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
070027b0 0000004c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
070027fc 00000060 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
0700285c 00000050 T CTRPluginFramework::GetFNsPointer()
070028ac 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002914 00000070 T CTRPluginFramework::GetOldPointer5CC()
07002984 00000034 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
070029b8 00000070 T CTRPluginFramework::GetOldPointer5D0()
07002a28 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002a70 0000009c T CTRPluginFramework::GetItemPointer()
07002b0c 00000168 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002c74 000000ac T CTRPluginFramework::GetTotalPlayers()
07002d20 000001ec T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07002f0c 00000058 T CTRPluginFramework::GetTime()
07002f64 0000002c T CTRPluginFramework::GetMinutes()
07002f90 0000001c T CTRPluginFramework::GetSeconds()
07002fac 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07003064 00000070 T CTRPluginFramework::SubToTime(unsigned short)
070030d4 00000428 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
070034fc 0000005c T CTRPluginFramework::writeItem(unsigned long)
07003558 000000e8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003640 0000001c T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
0700365c 00000080 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
070036dc 000000bc T CTRPluginFramework::writeSpeed(unsigned long)
07003798 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
070037a4 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
070037b0 0000026c T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003a1c 0000026c T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003c88 00000048 T CTRPluginFramework::writeVR(unsigned long)
07003cd0 000000d8 T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07003da8 00000080 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07003e28 00000080 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07003ea8 0000004c T CTRPluginFramework::writeLocation(unsigned long)
07003ef4 00000074 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
07003f68 00000064 T CTRPluginFramework::writeFlag(unsigned short)
07003fcc 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
070040c0 00001698 T CTRPluginFramework::main()
07005758 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0700575c 00000004 T CTRPluginFramework::OnProcessExit()
07005760 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
070057d8 00000038 T OnLoadCro
07005810 00000170 T CTRPluginFramework::Initialize()
07005980 000000b0 T CTRPluginFramework::ThreadExit()
07005a30 00000060 T abort
07005a90 0000003c T CTRPluginFramework::ThreadInit(void*)
07005acc 0000008c T LaunchMainThread
07005b58 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005c3c 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07006044 0000000c t _GLOBAL__sub_I_g_mainThread
07006050 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
0700609c 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07006118 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
070061dc 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
07006254 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07006254 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
0700626c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
0700626c 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07006278 00000008 T CTRPluginFramework::Color::ToU32() const
07006280 00000120 T CTRPluginFramework::Color::Fade(double)
070063a0 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
070063e0 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0700645c 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07006670 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07006790 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006790 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07006800 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07006800 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700682c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07006840 00000044 T CTRPluginFramework::PluginMenu::Run() const
07006884 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
0700688c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700689c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
070068a8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070068a8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070068e8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070068e8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07006910 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07006920 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006920 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700696c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700696c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700699c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070069a4 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006a68 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07006b10 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006b10 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006b58 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006b58 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006bc0 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07006bc0 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07006bec 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07006bf4 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07006c10 00000028 T CTRPluginFramework::Keyboard::Open() const
07006c38 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07006cb0 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07006d60 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07006db4 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07006e1c 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07006e24 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07006e2c 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07006ec8 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07006f54 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07006ffc 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070070e4 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007170 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07007218 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07007300 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700738c 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07007434 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
0700751c 00000028 t __tcf_0
07007544 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
070075bc 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
070075c4 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07007644 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070076c0 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07007798 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07007798 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070077b4 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070077b4 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070077f4 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07007804 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070078c4 00000020 T CTRPluginFramework::HotkeyManager::Count()
070078e4 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007a54 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07007b80 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07007ca8 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07007d18 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07007da0 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07007de4 0000004c T CTRPluginFramework::Directory::Close() const
07007e30 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07007e44 00000008 T CTRPluginFramework::Directory::IsOpen() const
07007e4c 00000040 T CTRPluginFramework::Directory::Directory()
07007e4c 00000040 T CTRPluginFramework::Directory::Directory()
07007e8c 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07007ec0 00000060 T CTRPluginFramework::Directory::~Directory()
07007ec0 00000060 T CTRPluginFramework::Directory::~Directory()
07007f20 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07007f20 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07007f40 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007fd8 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008070 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008110 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070081e4 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008278 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070083c4 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070083c4 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700841c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008458 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07008458 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07008474 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
070085e4 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
07008600 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07008728 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
070087a0 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07008808 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
070088b4 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
070088f8 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07008ad4 000001b4 T CTRPluginFramework::Directory::_List() const
07008c88 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07008d68 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07008e4c 0000000c T CTRPluginFramework::FwkSettings::Get()
07008e58 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
07008f38 00000010 T CTRPluginFramework::Process::GetHandle()
07008f48 00000010 T CTRPluginFramework::Process::GetTitleID()
07008f58 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008fb4 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008fec 00000024 T CTRPluginFramework::Process::GetTextSize()
07009010 00000008 T CTRPluginFramework::Process::Pause()
07009018 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07009028 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
070090d0 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
070090d4 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07009120 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07009158 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700917c 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
07009198 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
070091bc 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070091f8 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07009220 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07009240 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
07009260 0000002c T CTRPluginFramework::Hook::Hook()
07009260 0000002c T CTRPluginFramework::Hook::Hook()
0700928c 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
070092a4 00000230 T CTRPluginFramework::Hook::Enable()
070094d4 0000005c T CTRPluginFramework::Hook::Disable()
07009530 00000014 T CTRPluginFramework::Mutex::Mutex()
07009530 00000014 T CTRPluginFramework::Mutex::Mutex()
07009544 00000028 T CTRPluginFramework::Mutex::~Mutex()
07009544 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700956c 00000004 T CTRPluginFramework::Mutex::Lock()
07009570 00000014 T CTRPluginFramework::Mutex::TryLock()
07009584 00000004 T CTRPluginFramework::Mutex::Unlock()
07009588 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07009588 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
070095ac 0000004c T CTRPluginFramework::Lock::~Lock()
070095ac 0000004c T CTRPluginFramework::Lock::~Lock()
070095f8 00000074 T CTRPluginFramework::File::Close() const
0700966c 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
07009724 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
07009814 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07009840 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07009924 00000008 T CTRPluginFramework::File::Tell() const
0700992c 00000030 T CTRPluginFramework::File::Rewind() const
0700995c 00000034 T CTRPluginFramework::File::Flush() const
07009990 0000006c T CTRPluginFramework::File::GetSize() const
070099fc 00000008 T CTRPluginFramework::File::IsOpen() const
07009a04 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07009a18 00000044 T CTRPluginFramework::File::File()
07009a18 00000044 T CTRPluginFramework::File::File()
07009a5c 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009af0 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009bc4 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009c48 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009ce8 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07009df0 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07009df0 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07009e5c 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07009ea4 00000014 T CTRPluginFramework::Time::Time()
07009ea4 00000014 T CTRPluginFramework::Time::Time()
07009eb8 00000020 T CTRPluginFramework::Time::AsSeconds() const
07009ed8 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
07009ef0 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
07009ef8 00000028 T CTRPluginFramework::Seconds(float)
07009f20 00000010 T CTRPluginFramework::Milliseconds(int)
07009f30 00000008 T CTRPluginFramework::Microseconds(long long)
07009f38 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
07009f4c 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
07009f60 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
07009f74 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
07009f8c 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
07009fd8 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
07009ff0 00000010 T CTRPluginFramework::System::IsNew3DS()
0700a000 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700a014 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700a030 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700a04c 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700a068 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700a084 0000002c T CTRPluginFramework::Controller::Update()
0700a0b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700a128 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a184 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700a1e0 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700a23c 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700a280 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700a300 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a3b4 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a4f0 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700a528 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700a544 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700a544 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700a580 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700a7d4 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700a7d4 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700a818 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700af58 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af60 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700afa4 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700b0b0 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700b118 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700b134 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700b170 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700b194 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b1b8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700b230 00000024 W CTRPluginFramework::File::~File()
0700b230 00000024 W CTRPluginFramework::File::~File()
0700b254 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700b284 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700b390 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700b55c 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700b83c 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700b908 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700b9c4 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700ba80 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700badc 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700bb2c 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700bbac 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700bd7c 00000004 T CTRPluginFramework::Preferences::Initialize()
0700bd80 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700be6c 00000010 T CTRPluginFramework::Glyph::Width() const
0700be7c 00000060 T CTRPluginFramework::Font::Initialize()
0700bedc 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700c230 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700c534 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700c640 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700c6a8 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700c6c8 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700c6f8 00000020 W CTRPluginFramework::Renderer::GetContext()
0700c718 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700c778 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700c8e0 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700ca4c 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700caec 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700ccd4 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700cd04 00000028 T CTRPluginFramework::Window::~Window()
0700cd04 00000028 T CTRPluginFramework::Window::~Window()
0700cd2c 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700cd2c 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700cdcc 00000064 T CTRPluginFramework::Window::Draw() const
0700ce30 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700cf08 00000018 T CTRPluginFramework::Window::DrawButton() const
0700cf20 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700cf38 00000018 T CTRPluginFramework::Window::MustClose() const
0700cf50 0000002c T CTRPluginFramework::Window::Close() const
0700cf7c 00000004 T CTRPluginFramework::Window::GetRect() const
0700cf80 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700cfac 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700d054 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700d184 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700d250 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700d39c 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700d4e0 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700d518 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700d6b8 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700d87c 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700dab0 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700db20 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700db8c 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700dba0 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700dbc4 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700dbe0 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700dc10 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700dc40 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700dc68 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700dc90 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700dcb0 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700dcec 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700dd34 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700dd78 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700de94 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700deb4 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700df24 00000038 t __tls_init
0700df24 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700df5c 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700df98 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e00c 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e078 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e100 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e194 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700e224 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
0700e29c 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
0700e30c 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0700e330 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0700e354 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700e354 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700e394 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0700e39c 00000008 T CTRPluginFramework::BMPImage::Width() const
0700e3a4 00000008 T CTRPluginFramework::BMPImage::Height() const
0700e3ac 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0700e3b4 00000010 T CTRPluginFramework::BMPImage::data() const
0700e3c4 0000001c T CTRPluginFramework::BMPImage::end() const
0700e3e0 00000010 W CTRPluginFramework::BMPImage::DataClear()
0700e3f0 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700e3f0 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700e498 0000003c T CTRPluginFramework::BMPImage::Unload()
0700e4d4 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
0700e610 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700e618 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700e868 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700ea3c 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700ea84 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0700eab4 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700eb88 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
0700ec08 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0700ec2c 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700ed48 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700ed48 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700ed9c 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700f0bc 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f0bc 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f108 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700f154 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700f464 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700f524 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
0700f654 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0700f7c0 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0700f800 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700f800 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700f820 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0700f990 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0700fa84 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0700fb18 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0700fbc0 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700fe4c 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0700fe4c 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0700fe90 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0700fee4 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0701006c 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07010118 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07010158 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
070107d8 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010980 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
07010980 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
070109ac 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
070109ac 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
070109cc 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07010a7c 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07010ad8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010ad8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07010b5c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07010b68 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07010b84 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07010b90 000000cc T CTRPluginFramework::OSDImpl::Draw()
07010c5c 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07010d34 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07010d60 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07010da8 0000020c T CTRPluginFramework::InstallOSD()
07010fb4 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
07010ffc 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070110d4 00000108 T CTRPluginFramework::OSDImpl::Update()
070111dc 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
07011864 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070118cc 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07011938 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07011b58 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07011b84 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07011bc0 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07011bfc 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07011c38 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07011c74 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07011cb0 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
07011cdc 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07011d18 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07011d54 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07011d90 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
07011dcc 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07011df8 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07011e34 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07011e60 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07011e8c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
07011ec8 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07011ef4 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07011f30 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07011f5c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07011f90 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
07011fcc 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07011ff8 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07012034 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07012060 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701208c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070120b8 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070120e4 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07012110 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0701213c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07012168 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07012194 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070121d0 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070121fc 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
0701228c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0701228c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
070122ac 00000030 W CTRPluginFramework::TextBox::~TextBox()
070122ac 00000030 W CTRPluginFramework::TextBox::~TextBox()
070122dc 0000001c W CTRPluginFramework::TextBox::~TextBox()
070122f8 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070122f8 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070123d8 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
070123e0 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
070123e0 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07012474 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07012494 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0701261c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0701263c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07012658 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07012674 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0701267c 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07012684 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07012684 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
070126a4 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07012788 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07012e84 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07012edc 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07012fc0 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07012ffc 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0701312c 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07013268 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07013320 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07013428 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07013428 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070134ac 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
070135a0 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
070136d8 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07013870 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07013870 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701396c 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701396c 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07013b0c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07013b84 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07013b84 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07013c60 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07013c60 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07013d78 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07013db4 00000058 T CTRPluginFramework::Menu::CloseAll()
07013e0c 00000030 T CTRPluginFramework::Menu::~Menu()
07013e0c 00000030 T CTRPluginFramework::Menu::~Menu()
07013e3c 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07013e48 00000008 T CTRPluginFramework::Menu::GetFolder() const
07013e50 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07013e58 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
07013e98 00000384 T CTRPluginFramework::Menu::Draw() const
0701421c 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
070142a8 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07014334 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701455c 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
070146d0 00000068 T CTRPluginFramework::Menu::ShowNote()
07014738 00000008 T CTRPluginFramework::Menu::CloseNote()
07014740 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07014748 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07014788 00000044 T CTRPluginFramework::Menu::Pop()
070147cc 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07014890 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07014948 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07014950 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014950 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07014978 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07014994 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014994 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014a68 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07014a84 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014a84 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014b3c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014b3c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014bf8 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07014c0c 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07014c5c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07014c74 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07014c98 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
07014d40 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07014d50 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07014d74 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07014dd4 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07014de4 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07014df4 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07014e04 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07014e94 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07014fb0 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
07015020 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
070150c4 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
070150f0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070150f0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07015120 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07015120 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701518c 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
070152e0 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
0701531c 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701531c 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015488 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
070154e0 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015594 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07015674 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
070156ec 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070156ec 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07015bb0 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07015bbc 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07015edc 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07015fe4 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07016438 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07016554 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
070165e0 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0701661c 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07016648 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07016718 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07016798 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07016814 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07016898 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
070168f4 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07016934 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07016a64 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07016da0 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07016fb4 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07016fcc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07016fe0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07016ff4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07017008 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07017144 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
07017148 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0701714c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07017164 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0701717c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07017194 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070171ac 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
070171c4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
070171dc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
070171f4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0701720c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07017224 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07017268 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
070172e0 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07017344 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
070173dc 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07017580 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07017704 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
070177b0 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070178d4 0000005c t CTRPluginFramework::Reboot()
07017930 00000064 t CTRPluginFramework::Shutdown()
07017994 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07017b88 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
07018588 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07018588 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07018718 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07018834 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
070188c0 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07018900 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07018a70 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07018b1c 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
07019134 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07019170 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
070191ac 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070191bc 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070191bc 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019294 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07019294 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
070192d0 0000001c T CTRPluginFramework::SubMenu::operator()()
070192ec 00000200 T CTRPluginFramework::SubMenu::Draw()
070194ec 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
070195b0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
070195b8 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070195d4 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07019778 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070197c4 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
070197c4 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
070197c8 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
070197cc 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
070197d0 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701996c 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
07019a68 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07019ba4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019c1c 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07019e6c 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701a0c0 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701a2bc 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701a49c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701a4b8 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701a574 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701a590 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701a600 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701a630 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701a66c 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701a714 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701a748 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701a778 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701a804 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701a89c 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701a968 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701aa24 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701aad4 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701ac68 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701ac78 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701ac88 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701ac98 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701ac98 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701af0c 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701af50 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701b118 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701b1dc 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701b234 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701b318 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701b488 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701b60c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701b638 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701b638 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701b6a0 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701b6c8 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701b81c 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701b890 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701ba30 00000160 T CTRPluginFramework::HexEditor::_Update()
0701bb90 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701be30 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701be44 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701be44 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701be6c 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701be88 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701bfa0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701bfa0 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c070 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c070 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701c144 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701c14c 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701c160 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701c16c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701c174 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701c198 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701c1c8 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701c1e4 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701c24c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c24c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c26c 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701c288 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c288 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701c31c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c31c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c37c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c37c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c3dc 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701c3e0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701c458 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701c518 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701c54c 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701c944 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701c95c 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701cc20 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701cc20 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701cde0 00000158 T CTRPluginFramework::GuideReader::Draw()
0701cf38 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701cfac 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701d014 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701d014 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701d05c 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701d0a8 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701d0b4 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701d0e0 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701d13c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701d1c4 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701d228 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701d228 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701d288 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d288 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d434 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d434 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d5f0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701d5f0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701d654 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701d65c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701d664 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701d66c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701d674 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701d67c 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701d7e0 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701dc38 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701dcc8 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701dd48 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701ddcc 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701df2c 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0701e1ac 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701e718 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701e780 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701e7d0 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701e840 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701e848 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0701e90c 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701eae8 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701eb4c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701eb78 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701eb78 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701eb98 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701ec64 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701ed20 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701ede4 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701f350 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701f8c0 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0701f978 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
070203cc 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07020484 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
070210c8 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702110c 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
070211c8 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0702138c 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
070213dc 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07021434 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0702147c 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
070217a0 00000254 T CTRPluginFramework::KeyboardImpl::Run()
070219f4 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07021a6c 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07021a80 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07021aa4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
07021b2c 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
07021c3c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07021c98 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
07021d30 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07021d30 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07021f80 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07021fb4 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07022008 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0702202c 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07022054 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07022130 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07022254 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07022420 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022420 00000028 W CTRPluginFramework::ARCode::~ARCode()
07022448 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
070225c0 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0702273c 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070228a4 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
070228e0 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07022a28 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07022a58 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07022b2c 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07022d2c 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07022da4 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07022e6c 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07023024 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
070231cc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07023244 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
070232a0 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070233b8 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0702341c 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07023588 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07023588 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070239e0 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
07023d9c 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07023e0c 000000f4 t CTRPluginFramework::ClearSearchFolder()
07023f00 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07023f34 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0702415c 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07024184 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070241f4 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070242bc 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
070242f8 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07024560 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07024644 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07024684 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
070246b4 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07024788 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07024a14 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07024dcc 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
07024e24 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07024e24 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07024e50 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
07024e5c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
07024e68 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07024fc4 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07025000 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
0702500c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
07025018 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
07025038 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
070251d4 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
07025230 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0702538c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
070253a4 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070254c8 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0702558c 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0702573c 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07025800 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07025880 00000044 T CTRPluginFramework::Search::UpdateProgress()
070258c4 00000194 T CTRPluginFramework::Search::CheckNextRegion()
07025a58 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
07025ad0 00000008 T CTRPluginFramework::Search::GetHeader() const
07025ad8 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07025b20 0000000c T CTRPluginFramework::Search::GetType() const
07025b2c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07025b44 00000070 T CTRPluginFramework::Search::WriteHeader()
07025bb4 00000058 T CTRPluginFramework::Search::WriteResults()
07025c0c 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07025c58 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07025e98 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07025e98 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070260d8 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070261a0 00000088 T CTRPluginFramework::Search::CreateIndexTable()
07026228 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026228 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070263d0 00000080 T CTRPluginFramework::Search::Cancel()
07026450 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07026568 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
0702662c 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
070266ec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07026764 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
070269cc 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07026c5c 00000048 W CTRPluginFramework::Search::~Search()
07026c5c 00000048 W CTRPluginFramework::Search::~Search()
07026ca4 00000044 T CTRPluginFramework::Search32::~Search32()
07026ca4 00000044 T CTRPluginFramework::Search32::~Search32()
07026ce8 0000001c T CTRPluginFramework::Search32::~Search32()
07026d04 0000001c W CTRPluginFramework::Search::~Search()
07026d20 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07026d20 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07026f48 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026f48 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026f68 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07026f68 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07026fe0 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027138 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07027184 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
070272c8 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0702740c 0000003c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07027448 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07027478 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0702753c 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07027578 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
070275b0 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07027690 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070276dc 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
070279f4 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07027b6c 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07027e58 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
07027ffc 0000002c T CTRPluginFramework::Screenshot::Initialize()
07028028 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070280d4 00000094 T CTRPluginFramework::SystemImpl::Initialize()
07028168 0000003c T CTRPluginFramework::SystemImpl::Status()
070281a4 000000c8 T CTRPluginFramework::HookManager::Init()
0702826c 00000018 T CTRPluginFramework::HookManager::Lock()
07028284 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
0702832c 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
0702838c 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702838c 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
070283c4 00000038 T CTRPluginFramework::Scheduler::Core::Core()
070283c4 00000038 T CTRPluginFramework::Scheduler::Core::Core()
070283fc 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07028444 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07028550 000000d4 T CTRPluginFramework::Scheduler::Initialize()
07028624 00000050 T CTRPluginFramework::Scheduler::Exit()
07028674 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07028674 00000048 T CTRPluginFramework::Scheduler::Scheduler()
070286bc 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
07028728 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
070287f8 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07028828 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
07028844 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702894c 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
07028964 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07028964 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070289a8 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
070289fc 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
07028adc 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
07028c14 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07028cb0 00000030 T CTRPluginFramework::ScreenImpl::Copy()
07028ce0 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07028ce8 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028d4c 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028db0 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028e20 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028e94 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028f04 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
07028fd4 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
07029098 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070290f4 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
07029198 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
070291f0 000000bc T CTRPluginFramework::ScreenImpl::Clean()
070292ac 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
07029384 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
070293ec 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
070293f4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
070293fc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
07029404 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
07029420 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702943c 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
07029494 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
070294c4 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
07029520 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07029598 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070295bc 00000004 t addrMapNodeDestructor(rbtree_node*)
070295c0 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070296f0 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070296f8 00000070 T CTRPluginFramework::Heap::Free(void*)
07029768 0000000c T CTRPluginFramework::Heap::SpaceFree()
07029774 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
070297a4 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070298a8 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07029a84 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07029a84 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07029b48 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07029ba8 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07029bb4 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07029bf4 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07029c04 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07029c1c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07029c30 00000004 T Kernel::Initialize()
07029c34 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07029c4c 0000000c T KProcess::GetCurrent()
07029c58 00000024 T KProcess::PatchCore2Access()
07029c7c 0000002c T KProcess::PatchCategory(unsigned long)
07029ca8 00000014 T KProcess__PatchCategory
07029cbc 0000002c T KProcess::PatchMaxPriority(unsigned long)
07029ce8 00000014 T KProcess__PatchMaxPriority
07029cfc 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
07029d80 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
07029db4 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
07029db4 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
07029dd4 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
07029eb8 00000018 T IsPaused
07029ed0 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
07029f0c 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07029f28 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07029f44 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07029fac 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702a028 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702a0c4 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702a174 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702a23c 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702a310 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702a3a8 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702a404 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a404 00000090 T CTRPluginFramework::EventManager::EventManager()
0702a494 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702a5f4 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702a630 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702a8cc 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702a9c4 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702a9cc 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702a9f8 00000034 W MemPool::DelBlock(MemBlock*)
0702aa2c 0000005c T MemPool::CoalesceRight(MemBlock*)
0702aa88 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702aba0 000000fc T MemPool::Deallocate(MemChunk const&)
0702ac9c 00000020 T MemPool::GetFreeSpace()
0702acbc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702ace0 00000004 t addrMapNodeDestructor(rbtree_node*)
0702ace4 00000154 T vramMemAlign
0702ae38 00000008 T vramAlloc
0702ae40 00000070 T vramFree
0702aeb0 00000030 t _GLOBAL__sub_I_vramMemAlign
0702aee0 000001d8 T threadCreate
0702b0b8 0000002c T threadFree
0702b0e4 00000024 T threadJoin
0702b108 00000020 T threadGetCurrent
0702b128 0000003c T threadExit
0702b164 0000003c t _thread_begin
0702b1a0 00000050 T srvExit
0702b1f0 00000034 T srvRegisterClient
0702b224 00000064 T srvInit
0702b288 00000068 T srvGetServiceHandleDirect
0702b2f0 00000004 T srvGetServiceHandle
0702b2f4 00000034 T srvPublishToSubscriber
0702b328 00000034 T errfExit
0702b35c 00000058 T errfInit
0702b3b4 0000003c T ERRF_Throw
0702b3f0 00000090 T ERRF_ExceptionHandler
0702b480 000000a8 T fontEnsureMapped
0702b528 00000110 T fontGlyphIndexFromCodePoint
0702b638 00000074 T fontGetCharWidthInfo
0702b6ac 0000000c T __sync_init
0702b6b8 00000018 T __sync_fini
0702b6d0 00000018 T LightLock_Init
0702b6e8 0000008c T LightLock_Lock
0702b774 00000034 T LightLock_TryLock
0702b7a8 00000050 T LightLock_Unlock
0702b7f8 00000018 T RecursiveLock_Init
0702b810 00000030 T RecursiveLock_Lock
0702b840 00000044 T RecursiveLock_TryLock
0702b884 00000034 T RecursiveLock_Unlock
0702b8b8 00000030 T LightEvent_Init
0702b8e8 00000060 T LightEvent_Clear
0702b948 00000064 T LightEvent_Pulse
0702b9ac 000000b4 T LightEvent_Signal
0702ba60 000000a8 T LightEvent_Wait
0702bb08 000000a0 T cfguInit
0702bba8 00000034 T cfguExit
0702bbdc 00000044 T CFGU_GetConfigInfoBlk2
0702bc20 00000014 T CFGU_GetSystemLanguage
0702bc34 00000028 t fsSession
0702bc5c 00000044 t fsSessionForArchive
0702bca0 00000038 T fsExit
0702bcd8 00000028 T FSUSER_Initialize
0702bd00 000000b0 T fsInit
0702bdb0 00000080 T FSUSER_OpenFile
0702be30 00000068 T FSUSER_DeleteFile
0702be98 000000a4 T FSUSER_RenameFile
0702bf3c 00000068 T FSUSER_DeleteDirectoryRecursively
0702bfa4 00000080 T FSUSER_CreateFile
0702c024 00000070 T FSUSER_CreateDirectory
0702c094 000000a4 T FSUSER_RenameDirectory
0702c138 0000006c T FSUSER_OpenDirectory
0702c1a4 00000074 T FSUSER_OpenArchive
0702c218 00000058 T FSFILE_Read
0702c270 00000060 T FSFILE_Write
0702c2d0 00000038 T FSFILE_GetSize
0702c308 00000028 T FSFILE_SetSize
0702c330 0000003c T FSFILE_Close
0702c36c 00000024 T FSFILE_Flush
0702c390 00000054 T FSDIR_Read
0702c3e4 0000003c T FSDIR_Close
0702c420 00000104 T aptSendCommand
0702c524 0000006c T APT_CheckNew3DS
0702c590 00000048 T APT_GetSharedFont
0702c5d8 000000a0 T amInit
0702c678 00000034 T amExit
0702c6ac 00000088 T acInit
0702c734 00000034 T acExit
0702c768 000000bc T hidExit
0702c824 00000034 T hidCheckSectionUpdateTime
0702c858 00000174 T hidScanInput
0702c9cc 00000010 T hidKeysHeld
0702c9dc 00000010 T hidKeysDown
0702c9ec 00000010 T hidKeysUp
0702c9fc 00000018 T hidTouchRead
0702ca14 00000090 T HIDUSER_GetHandles
0702caa4 00000174 T hidInit
0702cc18 000000e8 t gspEventThreadMain
0702cd00 000000a0 T gspInitEventHandler
0702cda0 00000040 T gspExitEventHandler
0702cde0 0000008c T gspExit
0702ce6c 0000005c T gspWaitForEvent
0702cec8 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702cf2c 000000dc T gspInit
0702d008 00000034 T irrstCheckSectionUpdateTime
0702d03c 00000070 T irrstScanInput
0702d0ac 0000001c T irrstKeysHeld
0702d0c8 00000050 T IRRST_GetHandles
0702d118 00000034 T IRRST_Initialize
0702d14c 00000128 T irrstInit
0702d274 0000002c T IRRST_Shutdown
0702d2a0 000000a8 T irrstExit
0702d348 00000028 t __ctru_get_reent
0702d370 000000ec T __system_initSyscalls
0702d45c 000000ac T utf8_to_utf16
0702d508 00000138 T decode_utf8
0702d640 0000005c T decode_utf16
0702d69c 000000d4 T utf16_to_utf8
0702d770 000000e0 T encode_utf8
0702d850 00000054 T encode_utf16
0702d8a4 00000054 T rbtree_find
0702d8f8 00000014 t is_black
0702d90c 000002bc T rbtree_remove
0702dbc8 00000050 T rbtree_node_next
0702dc18 00000090 T rbtree_rotate
0702dca8 00000174 t do_insert
0702de1c 00000008 T rbtree_insert
0702de24 00000010 T rbtree_init
0702de34 T LoadCROHooked
0702de48 T AR__ExecuteRoutine
0702de70 t stackBak
0702de78 T svcCustomBackdoor
0702de80 T svcConvertVAToPA
0702de88 T svcFlushDataCacheRange
0702de90 T svcMapProcessMemoryEx
0702dea4 T svcUnmapProcessMemoryEx
0702deac T svcControlProcess
0702deb4 T svcQueryMemory
0702dee4 T svcCreateThread
0702df04 T svcExitThread
0702df0c T svcSleepThread
0702df14 T svcSetThreadPriority
0702df1c T svcCreateEvent
0702df30 T svcSignalEvent
0702df38 T svcClearEvent
0702df40 T svcMapMemoryBlock
0702df48 T svcUnmapMemoryBlock
0702df50 T svcCreateAddressArbiter
0702df64 T svcArbitrateAddress
0702df7c T svcCloseHandle
0702df84 T svcWaitSynchronization
0702df8c T svcWaitSynchronizationN
0702dfb4 T svcGetSystemTick
0702dfbc T svcGetSystemInfo
0702dfd4 T svcGetProcessInfo
0702dfec T svcConnectToPort
0702e000 T svcSendSyncRequest
0702e008 T svcOpenProcess
0702e01c T svcGetProcessId
0702e030 T svcBreak
0702e038 T svcInvalidateProcessDataCache
0702e040 T svcFlushProcessDataCache
0702e048 T svcKernelSetState
0702e050 T svcQueryProcessMemory
0702e074 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e074 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e0bc 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e0bc 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0702e0f8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e0f8 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0702e134 00000008 T CTRPluginFramework::MessageBox::operator()() const
0702e13c 00000030 t CTRPluginFramework::GetCurrentTime()
0702e16c 00000014 T CTRPluginFramework::Clock::Clock()
0702e16c 00000014 T CTRPluginFramework::Clock::Clock()
0702e180 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702e180 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702e188 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
0702e1c0 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0702e1f0 00000044 T CTRPluginFramework::Clock::Restart()
0702e234 00000014 T CTRPluginFramework::Touch::IsDown()
0702e248 00000028 T CTRPluginFramework::Touch::GetPosition()
0702e270 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e270 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e2f4 00000048 T CTRPluginFramework::Task::~Task()
0702e2f4 00000048 T CTRPluginFramework::Task::~Task()
0702e33c 00000030 T CTRPluginFramework::Task::Start() const
0702e36c 00000044 T CTRPluginFramework::Task::Wait() const
0702e3b0 00000014 T CTRPluginFramework::Task::Status() const
0702e3c4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e3c4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702e3ec 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0702e46c 00000048 T CTRPluginFramework::LineWriter::Flush()
0702e4b4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e4b4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702e4d0 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e53c 00000018 T CTRPluginFramework::LineWriter::Close()
0702e554 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e618 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
0702e690 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702e9cc 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702e9cc 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702e9ec 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ea74 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ea74 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702eba0 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0702ebdc 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702ecdc 00000084 T CTRPluginFramework::ARCode::Update()
0702ed60 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702ed60 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702ed84 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0702edac 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702edac 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702ee64 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702ee64 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702ee98 00000040 T CTRPluginFramework::ARCodeContext::Update()
0702eed8 00000090 T CTRPluginFramework::ARCodeContext::Clear()
0702ef68 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702f040 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702f040 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702f060 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
0702f078 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f16c 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
0702f188 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f29c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f2ac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
0702f324 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702f33c 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702f390 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f3d4 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f41c 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702f8f0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702f8f0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702f934 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702f934 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702f948 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702f968 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702fae0 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702fc04 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07030338 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07030388 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07030388 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070303f0 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703040c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703040c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030458 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07030574 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07030604 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0703071c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
070307a4 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07030800 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030800 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030878 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030878 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07030878 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030878 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
070308c8 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07031c1c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07031c1c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07031db0 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07032064 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
070320ec 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032130 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07032144 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07032180 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070322e8 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032324 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07032388 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
070323ac 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
070323d4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070323d4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070323fc 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703277c 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07032e00 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
07032e4c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07032f04 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07033378 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07033844 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0703393c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
070339c4 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07033a00 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07033d24 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07033da0 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07033e0c 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07033e44 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07033ec0 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703428c 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07034490 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07034530 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
070345ec 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
070346a8 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07034754 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
070347e0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07034958 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07034a6c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07034b14 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07034b7c 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07034c0c 00000160 T ARM_Disasm::Decode01(unsigned long)
07034d6c 00000028 T ARM_Disasm::Decode10(unsigned long)
07034d94 0000007c T ARM_Disasm::Decode11(unsigned long)
07034e10 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07034e78 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07034ec8 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07034fe0 000000c4 T ARM_Disasm::Decode00(unsigned long)
070350a4 00000030 T ARM_Disasm::Decode(unsigned long)
070350d4 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
070351ac 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07035490 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07035780 00000020 T CTRPluginFramework::Button::~Button()
07035780 00000020 T CTRPluginFramework::Button::~Button()
070357a0 0000001c T CTRPluginFramework::Button::~Button()
070357bc 00000040 T CTRPluginFramework::Button::operator()()
070357fc 00000148 T CTRPluginFramework::Button::Draw()
07035944 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07035a98 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035a98 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035bbc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035bbc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035bdc 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035bdc 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035c70 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035c70 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07035c84 00000018 T CTRPluginFramework::Button::Enable(bool)
07035c9c 00000010 T CTRPluginFramework::Button::Enable()
07035cac 00000010 T CTRPluginFramework::Button::Disable()
07035cbc 00000010 T CTRPluginFramework::Button::Lock()
07035ccc 00000010 T CTRPluginFramework::Button::Execute()
07035cdc 00000018 T CTRPluginFramework::Button::SetState(bool)
07035cf4 00000010 T CTRPluginFramework::Button::GetState() const
07035d04 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07035d04 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07035d18 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07035d18 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07035d38 00000024 T CTRPluginFramework::UIContainer::Draw()
07035d5c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07035d90 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07035e54 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07035e94 00000094 T CTRPluginFramework::ComboBox::Draw()
07035f28 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07035f28 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07035f74 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07035f90 000000a8 T CTRPluginFramework::ComboBox::operator()()
07036038 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036038 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07036084 0000003c T CTRPluginFramework::ComboBox::Clear()
070360c0 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036110 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07036194 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036194 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07036198 00000014 T CTRPluginFramework::FloatingButton::Draw()
070361ac 00000014 T CTRPluginFramework::FloatingButton::operator()()
070361c0 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
070361d4 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07036394 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07036394 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070363d4 00000008 W CTRPluginFramework::Drawable::operator()()
070363dc 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070363e0 000002f0 T CTRPluginFramework::TextBox::Draw()
070366d0 00000094 T CTRPluginFramework::TextBox::TextBox()
070366d0 00000094 T CTRPluginFramework::TextBox::TextBox()
07036764 0000000c T CTRPluginFramework::TextBox::Open() const
07036770 0000000c T CTRPluginFramework::TextBox::Close() const
0703677c 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07036784 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
070369cc 0000000c T CTRPluginFramework::TextBox::DrawConst() const
070369d8 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07036a70 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07036b24 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07036b7c 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
07036bac 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07036c68 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
07036d24 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
07036eec 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07036eec 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07037030 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07037118 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037118 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037290 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07037290 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070373e8 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07037460 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07037714 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
070378b0 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070378b0 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037970 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07037a0c 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07037aac 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07037ac4 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07037af4 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07037b94 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07037b94 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07037c44 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07037c44 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07037cf0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07037cf0 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07037d70 00000040 T CTRPluginFramework::TouchKey::Clear()
07037db0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07037db0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07037dd0 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07037dec 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07037df4 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07037e54 00000060 T CTRPluginFramework::TouchKey::Draw()
07037eb4 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07037f50 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07038014 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07038014 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07038164 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038164 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07038184 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070381a0 0000007c T CTRPluginFramework::NumericTextBox::Draw()
0703821c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07038254 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070382bc 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
070383b4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070383c4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070383d4 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070383dc 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070383e8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070383e8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07038450 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070384c4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
0703853c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703853c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07038588 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07038648 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07038780 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
070387a8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703880c 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07038b1c 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07038c10 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07038e58 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
07039184 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703920c 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
070392a4 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07039320 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
070393d4 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07039560 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
070395a8 00000148 T CTRPluginFramework::SearchMenu::_Export()
070396f0 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
07039848 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
0703992c 00000030 W std::__cxx11::to_string(unsigned long)
0703995c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703995c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07039a10 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07039a94 00000548 T CTRPluginFramework::SearchMenu::Draw()
07039fdc 00000230 T CTRPluginFramework::SearchMenu::Update()
0703a20c 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703a71c 000000e4 T CTRPluginFramework::Converter::Converter()
0703a71c 000000e4 T CTRPluginFramework::Converter::Converter()
0703a800 00000010 T CTRPluginFramework::Converter::Instance()
0703a810 00000108 T CTRPluginFramework::Converter::_Draw()
0703a918 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703a918 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703a92c 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703ab48 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703afcc 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b454 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b8d0 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703bef8 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c804 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d114 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d9e8 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e628 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703eecc 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f808 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704012c 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040ec8 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041b2c 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042270 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042678 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042d58 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07042fe8 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043290 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043520 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07043554 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07043878 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0704389c 00000004 t addrMapNodeDestructor(rbtree_node*)
070438a0 000000d8 T mappableAlloc
07043978 00000050 T mappableFree
070439c8 00000090 T __system_allocateHeaps
07043a58 0000005c t getSysTime
07043ab8 000000fc T __libctru_gtod
07043bb4 00000008 T envGetHandle
07043bbc 00000004 T envDestroyHandles
07043bc0 00000020 T __libctru_exit
07043be0 00000020 T __appExit
07043c00 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07043c00 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07043c2c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07043c2c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07043c44 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07043d4c 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
07043dac 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07043db4 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07043dd8 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07043dfc 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07043e20 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07043e48 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07043e70 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07043e98 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07043f68 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07045ddc 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07045e4c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07045e6c 00000004 T operator delete[](void*)
07045e70 00000004 T operator new[](unsigned int)
07045e74 0000005c T __cxa_guard_acquire
07045ed0 0000000c T __cxa_guard_release
07045edc 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07045f3c 00000070 T __cxa_init_primary_exception
07045fac 00000054 T __cxa_throw
07046000 000000b0 T __cxa_rethrow
070460b0 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070460b0 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070460d0 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070460fc 00000004 T std::exception::~exception()
070460fc 00000004 T std::exception::~exception()
07046100 00000004 T std::bad_exception::~bad_exception()
07046100 00000004 T std::bad_exception::~bad_exception()
07046104 0000000c T transaction clone for std::exception::what() const
07046104 0000000c T std::exception::what() const
07046110 0000000c T transaction clone for std::bad_exception::what() const
07046110 0000000c T std::bad_exception::what() const
0704611c 00000018 T std::bad_exception::~bad_exception()
07046134 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046134 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046154 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07046180 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070461ec 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070462c0 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07046304 0000000c T __cxa_get_globals_fast
07046310 0000000c T __cxa_get_globals
0704631c 00000004 T operator delete(void*, unsigned int)
07046320 000000d0 T __cxa_begin_catch
070463f0 000000d8 T __cxa_end_catch
070464c8 00000004 T std::type_info::~type_info()
070464c8 00000004 T std::type_info::~type_info()
070464cc 00000008 T std::type_info::__is_pointer_p() const
070464cc 00000008 T std::type_info::__is_function_p() const
070464d4 0000004c T std::type_info::operator==(std::type_info const&) const
07046520 00000008 T __cxa_pure_virtual
07046528 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07046690 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
070466f0 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
070467d0 0000074c T __gxx_personality_v0
07046f1c 00000004 T operator delete(void*)
07046f20 0000005c T operator new(unsigned int)
07046f7c 00000010 T __aeabi_atexit
07046f8c 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
0704705c 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
07047110 00000044 T __cxa_allocate_exception
07047154 00000030 T __cxa_free_exception
07047184 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070471c4 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07047220 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07047234 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07047234 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07047254 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07047280 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
070472e8 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07047314 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07047358 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07047370 00000014 T std::__detail::_List_node_base::_M_unhook()
07047384 0000002c T std::__throw_bad_alloc()
070473b0 00000040 T std::__throw_logic_error(char const*)
070473f0 00000040 T std::__throw_invalid_argument(char const*)
07047430 00000040 T std::__throw_length_error(char const*)
07047470 00000040 T std::__throw_out_of_range(char const*)
070474b0 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704752c 00000038 T std::logic_error::logic_error(char const*)
0704752c 00000038 T std::logic_error::logic_error(char const*)
07047564 00000020 T std::invalid_argument::invalid_argument(char const*)
07047564 00000020 T std::invalid_argument::invalid_argument(char const*)
07047584 00000020 T std::length_error::length_error(char const*)
07047584 00000020 T std::length_error::length_error(char const*)
070475a4 00000020 T std::out_of_range::out_of_range(char const*)
070475a4 00000020 T std::out_of_range::out_of_range(char const*)
070475c4 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07047648 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704764c 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
070476fc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
070476fc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704773c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07047790 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070477a4 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
070477c8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
070477ec 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070478a4 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
070479b4 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07047a28 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047a28 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047a94 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047a94 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07047ab8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07047b48 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07047c5c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07047cc8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07047d34 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07047d78 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07047d90 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07047e94 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07047ecc 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07048154 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
0704818c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070481d8 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07048238 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070482cc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070482dc 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070482ec 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07048318 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07048360 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
070483a8 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07048450 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
07048460 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
070484d0 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07048500 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704854c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
070485fc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070485fc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704862c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
070486a4 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07048714 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0704878c 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0704888c 00000014 T std::get_new_handler()
070488a0 00000034 T __cxxabiv1::__terminate(void (*)())
070488d4 00000018 T std::terminate()
070488ec 0000000c T __cxxabiv1::__unexpected(void (*)())
070488f8 00000018 T std::unexpected()
07048910 00000014 T std::get_terminate()
07048924 00000014 T std::get_unexpected()
07048938 0000000c T std::bad_alloc::what() const
07048944 00000020 T std::bad_alloc::~bad_alloc()
07048944 00000020 T std::bad_alloc::~bad_alloc()
07048964 0000002c T std::bad_alloc::~bad_alloc()
07048990 T __cxa_end_cleanup
070489a0 00000138 T __cxa_type_match
07048ad8 000000b4 T __cxa_begin_cleanup
07048b8c 000000b4 T __gnu_end_cleanup
07048c40 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07048cb0 0000002c T __cxa_call_terminate
07048cdc 0000013c T __cxa_call_unexpected
07048e18 00000008 T std::logic_error::what() const
07048e20 00000064 T std::logic_error::~logic_error()
07048e20 00000064 T std::logic_error::~logic_error()
07048e84 0000001c T std::logic_error::~logic_error()
07048ea0 00000020 T std::invalid_argument::~invalid_argument()
07048ea0 00000020 T std::invalid_argument::~invalid_argument()
07048ec0 00000028 T std::invalid_argument::~invalid_argument()
07048ee8 00000020 T std::length_error::~length_error()
07048ee8 00000020 T std::length_error::~length_error()
07048f08 00000028 T std::length_error::~length_error()
07048f30 00000020 T std::out_of_range::~out_of_range()
07048f30 00000020 T std::out_of_range::~out_of_range()
07048f50 00000028 T std::out_of_range::~out_of_range()
07048f78 00000174 T ceil
070490ec 000000b8 T ceilf
070491a8 00000174 T floor
0704931c 00000088 T roundf
070493a8 00000020 T log2
070493c8 00000100 T sqrtf
070494c8 0000015c T log
07049624 000000e8 T __ieee754_sqrtf
07049710 000002c4 T __ieee754_log
070499d4 00000008 T matherr
070499e0 00000010 T nan
070499f0 0000002c T __aeabi_f2lz
070499f0 0000002c T __fixsfdi
07049a1c 0000002c T __aeabi_d2lz
07049a1c 0000002c T __fixdfdi
07049a48 00000050 T __aeabi_f2ulz
07049a48 00000050 T __fixunssfdi
07049a98 00000050 T __aeabi_d2ulz
07049a98 00000050 T __fixunsdfdi
07049ae8 00000158 T __udivmoddi4
07049c40 00000018 t selfrel_offset31
07049c58 0000008c t search_EIT_table
07049ce4 00000040 t __gnu_unwind_get_pr_addr
07049d24 00000118 t get_eit_entry
07049e3c 00000088 t restore_non_core_regs
07049ec4 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
07049ed8 00000004 t _Unwind_DebugHook
07049edc 00000068 t unwind_phase2
07049f44 00000134 t unwind_phase2_forced
0704a078 000000a8 T __gnu_Unwind_RaiseException
0704a120 00000024 T __gnu_Unwind_ForcedUnwind
0704a144 00000074 T __gnu_Unwind_Resume
0704a1b8 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704a1d8 00000004 T _Unwind_Complete
0704a1dc 00000018 T _Unwind_DeleteException
0704a1f4 00000068 T _Unwind_VRS_Get
0704a25c 0000002c t _Unwind_GetGR
0704a288 00000068 T _Unwind_VRS_Set
0704a2f0 0000002c t _Unwind_SetGR
0704a31c 000000c0 T __gnu_Unwind_Backtrace
0704a3dc 0000044c t __gnu_unwind_pr_common
0704a828 00000008 T __aeabi_unwind_cpp_pr0
0704a830 00000008 W __aeabi_unwind_cpp_pr1
0704a838 00000008 W __aeabi_unwind_cpp_pr2
0704a840 00000418 T _Unwind_VRS_Pop
0704ac58 00000060 t next_unwind_byte
0704acb8 0000002c t _Unwind_GetGR.constprop.0
0704ace4 00000004 t unwind_UCB_from_context
0704ace8 000003c8 T __gnu_unwind_execute
0704b0b0 00000048 T __gnu_unwind_frame
0704b0f8 00000010 T _Unwind_GetRegionStart
0704b108 0000001c T _Unwind_GetLanguageSpecificData
0704b124 00000008 T _Unwind_GetDataRelBase
0704b12c 00000008 T _Unwind_GetTextRelBase
0704b134 00000010 T ctime
0704b144 00000014 T __cxa_atexit
0704b158 0000000c T __errno
0704b164 0000007c T __libc_init_array
0704b1e0 0000001c T isspace
0704b1fc 0000001c T isxdigit
0704b218 0000001c T localtime
0704b234 00000364 T localtime_r
0704b598 00000024 T __locale_mb_cur_max
0704b5bc 00000008 T __locale_ctype_ptr_l
0704b5c4 00000024 T __locale_ctype_ptr
0704b5e8 00000020 T memalign
0704b608 00000158 T _memalign_r
0704b760 00000018 T malloc
0704b778 00000018 T free
0704b790 000007a8 T _malloc_r
0704bf38 000002fc T __utf8_mbtowc
0704c234 00000100 T memchr
0704c334 000000fc T memcmp
0704c430 0000010c T memcpy
0704c53c 0000013c T memmove
0704c678 00000110 T memset
0704c788 0000000c T __malloc_lock
0704c794 0000000c T __malloc_unlock
0704c7a0 00000044 T rand
0704c7e4 000000c8 T snprintf
0704c8ac 00000064 T sprintf
0704c910 00000008 T __seofread
0704c918 000000f0 T strcpy
0704ca08 00000158 t iso_year_adjust
0704cb60 00001024 t __strftime
0704db84 00000050 T strftime
0704dbd4 0000005c T strlen
0704dc30 000000f8 T strncmp
0704dd28 000000d8 T strncpy
0704de00 00000054 t sulp
0704de58 00001464 T _strtod_l
0704f2c0 000000b8 T strtof
0704f378 000001bc t _strtol_l.isra.0
0704f534 00000050 T _strtol_r
0704f588 00000260 t _strtoull_l.isra.0
0704f7e8 00000050 T _strtoull_r
0704f838 000001d0 t _strtoul_l.isra.0
0704fa08 00000050 T _strtoul_r
0704fa58 00000054 T strtoul
0704faac 000074a0 t get_arg
07056f50 00003e2c T _svfprintf_r
0705ad7c 00000038 T time
0705adb4 00000218 T __tzcalc_limits
0705afcc 0000000c T __tz_lock
0705afd8 0000000c T __tz_unlock
0705afe4 00000010 T _tzset_unlocked
0705aff4 0000049c T _tzset_unlocked_r
0705b490 000000a0 T _vsnprintf_r
0705b530 00000038 T vsnprintf
0705b568 000000a0 T _wcrtomb_r
0705b608 00000020 T _wcsrtombs_r
0705b628 000000e8 T __utf8_wctomb
0705b710 0000000c T abs
0705b71c 0000001c T asctime
0705b738 00000078 T asctime_r
0705b7b0 000000f4 T __register_exitproc
0705b8a4 000001bc t quorem
0705ba60 00001224 T _dtoa_r
0705cc84 000000f8 T _malloc_trim_r
0705cd7c 000002e4 T _free_r
0705d060 00000104 t rshift
0705d164 000007f8 T __gethex
0705d95c 00000060 T __match
0705d9bc 00000254 T __hexnan
0705dc10 000000c8 T _findenv_r
0705dcd8 00000018 T _getenv_r
0705dcf0 0000000c T __gettzinfo
0705dcfc 00000280 T gmtime_r
0705df7c 0000000c T labs
0705df88 00000008 T __localeconv_l
0705df90 00000024 T _localeconv_r
0705dfb4 00000088 T _Balloc
0705e03c 0000001c T _Bfree
0705e058 000000d0 T __multadd
0705e128 000000e0 T __s2b
0705e208 00000058 T __hi0bits
0705e260 0000009c T __lo0bits
0705e2fc 00000020 T __i2b
0705e31c 000001d4 T __multiply
0705e4f0 00000100 T __pow5mult
0705e5f0 000000e8 T __lshift
0705e6d8 0000005c T __mcmp
0705e734 00000168 T __mdiff
0705e89c 00000078 T __ulp
0705e914 000000d0 T __b2d
0705e9e4 00000104 T __d2b
0705eae8 00000084 T __ratio
0705eb6c 00000088 T __copybits
0705ebf4 00000078 T __any_on
0705ec6c 0000000c T nanf
0705ec78 0000009c T frexp
0705ed14 00000064 T siprintf
0705ed78 00000074 T siscanf
0705edec 000000c8 T sniprintf
0705eeb4 000074a0 t get_arg
07066354 00000188 T __ssprint_r
070664dc 0000295c T _svfiprintf_r
07068e38 000000dc T _sungetc_r
07068f14 0000006c T __ssrefill_r
07068f80 000000c8 T _sfread_r
07069048 00001d84 T __ssvfiscanf_r
0706adcc 000000a4 T __submore
0706ae70 00000170 T _wcsnrtombs_l
0706afe0 00000064 T _wcsnrtombs_r
0706b044 00000090 T _calloc_r
0706b0d4 0000000c T __env_lock
0706b0e0 0000000c T __env_unlock
0706b0ec 00000074 T iswspace
0706b160 000001e0 t __jp2uc
0706b340 000000c4 T _jp2uc
0706b404 000000b4 T _mbrtowc_r
0706b4b8 000004d0 T _realloc_r
0706b988 000000cc T __sccl
0706ba54 00000274 t _strtoll_l.isra.0
0706bcc8 00000050 T _strtoll_r
0706bd18 0000002c T _gettimeofday_r
0706bd44 00000070 T _sbrk_r
0706bdb4 00000018 T __libc_lock_acquire
0706bdcc 00000018 T __libc_lock_release
0706bde4 00000018 T __libc_lock_acquire_recursive
0706bdfc 00000018 T __libc_lock_release_recursive
0706be14 00000028 T __getreent
0706be3c T _fini
0706be54 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0706c03c 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0706c048 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0706c05c 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0706c078 00000030 r ._184
0706c0e4 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706c104 00000a00 r font
0706cb24 00000058 r CTRPluginFramework::g_OSDPattern
0706cbac 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706cbc0 00000038 r CTRPluginFramework::stable
0706cbf8 00000038 r CTRPluginFramework::ktable
0706cc30 00000048 r CTRPluginFramework::g_ctrpf
0706cc78 00000030 r CTRPluginFramework::g_byme
0706ccd4 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0706ccec 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706cd04 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0706cd1c 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0706cd34 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706cd3c 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706cd58 00000038 R vtable for CTRPluginFramework::Search
0706cd90 00000038 R vtable for CTRPluginFramework::Search32
0706cdc8 00000005 r CSWTCH.74
0706cdd0 00000004 R Search15_array_length
0706cdd4 00000384 r Search15_array
0706d158 00000004 R UnCheckedCheckbox_array_length
0706d15c 00000384 r UnCheckedCheckbox_array
0706d4e0 00000004 R Unsplash15_array_length
0706d4e4 00000384 r Unsplash15_array
0706d868 00000004 R Plus25_array_length
0706d86c 000009c4 r Plus25_array
0706e230 00000004 R GameControllerFilled25_array_length
0706e234 000009c4 r GameControllerFilled25_array
0706ebf8 00000004 R About15_array_length
0706ebfc 00000384 r About15_array
0706ef80 00000004 R Trash25_array_length
0706ef84 000009c4 r Trash25_array
0706f948 00000004 R Cut25_array_length
0706f94c 000009c4 r Cut25_array
07070310 00000004 R CloseWindow20_array_length
07070314 00000640 r CloseWindow20_array
07070954 00000004 R AddFavoriteFilled25_array_length
07070958 000009c4 r AddFavoriteFilled25_array
0707131c 00000004 R ClearSymbolFilled15_array_length
07071320 00000384 r ClearSymbolFilled15_array
070716a4 00000004 R ClipboardFilled25_array_length
070716a8 000009c4 r ClipboardFilled25_array
0707206c 00000004 R CheckedCheckbox_array_length
07072070 00000384 r CheckedCheckbox_array
070723f4 00000004 R CutFilled25_array_length
070723f8 000009c4 r CutFilled25_array
07072dbc 00000004 R CapsLockOn15_array_length
07072dc0 00000384 r CapsLockOn15_array
07073144 00000004 R TrashFilled25_array_length
07073148 000009c4 r TrashFilled25_array
07073b0c 00000004 R RAM15_array_length
07073b10 00000384 r RAM15_array
07073e94 00000004 R More15_array_length
07073e98 00000384 r More15_array
0707421c 00000004 R InfoFilled25_array_length
07074220 000009c4 r InfoFilled25_array
07074be4 00000004 R CloseWindowFilled20_array_length
07074be8 00000640 r CloseWindowFilled20_array
07075228 00000004 R HandCursor15_array_length
0707522c 00000384 r HandCursor15_array
070755b0 00000004 R EnterKey15_array_length
070755b4 00000384 r EnterKey15_array
07075938 00000004 R Duplicate25_array_length
0707593c 000009c4 r Duplicate25_array
07076300 00000004 R Settings15_array_length
07076304 00000384 r Settings15_array
07076688 00000004 R File15_array_length
0707668c 00000384 r File15_array
07076a10 00000004 R AddFavorite25_array_length
07076a14 000009c4 r AddFavorite25_array
070773d8 00000004 R Edit25_array_length
070773dc 000009c4 r Edit25_array
07077da0 00000004 R DuplicateFilled25_array_length
07077da4 000009c4 r DuplicateFilled25_array
07078768 00000004 R Save25_array_length
0707876c 000009c4 r Save25_array
07079130 00000004 R Clipboard25_array_length
07079134 000009c4 r Clipboard25_array
07079af8 00000004 R Info25_array_length
07079afc 000009c4 r Info25_array
0707a4c0 00000004 R EditFilled25_array_length
0707a4c4 000009c4 r EditFilled25_array
0707ae88 00000004 R KeyboardFilled25_array_length
0707ae8c 000009c4 r KeyboardFilled25_array
0707b850 00000004 R PlusFilled25_array_length
0707b854 000009c4 r PlusFilled25_array
0707c218 00000004 R Shutdown15_array_length
0707c21c 00000384 r Shutdown15_array
0707c5a0 00000004 R ClearSymbol15_array_length
0707c5a4 00000384 r ClearSymbol15_array
0707c928 00000004 R Maintenance15_array_length
0707c92c 00000384 r Maintenance15_array
0707ccb0 00000004 R Controller15_array_length
0707ccb4 00000384 r Controller15_array
0707d038 00000004 R Grid15_array_length
0707d03c 00000384 r Grid15_array
0707d3c0 00000004 R Keyboard25_array_length
0707d3c4 000009c4 r Keyboard25_array
0707dd88 00000004 R CapsLockOnFilled15_array_length
0707dd8c 00000384 r CapsLockOnFilled15_array
0707e110 00000004 R UserManualFilled15_array_length
0707e114 00000384 r UserManualFilled15_array
0707e498 00000004 R Rocket40_array_length
0707e49c 00001900 r Rocket40_array
0707fd9c 00000004 R Star15_array_length
0707fda0 00000384 r Star15_array
07080124 00000004 R EnterKeyFilled15_array_length
07080128 00000384 r EnterKeyFilled15_array
070804ac 00000004 R GameController25_array_length
070804b0 000009c4 r GameController25_array
07080e74 00000004 R FolderFilled_array_length
07080e78 00000384 r FolderFilled_array
070811fc 00000004 R Restart15_array_length
07081200 00000384 r Restart15_array
070815b4 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070815d0 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
070815dc 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0708165c 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07081670 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07081678 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07081680 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07081688 00000040 r RegNames
070816c8 00000040 r cond_names
07081708 00000010 r shift_names
07081718 0000001c R vtable for CTRPluginFramework::Button
07081734 0000001c R vtable for CTRPluginFramework::ComboBox
07081750 0000001c R vtable for CTRPluginFramework::FloatingButton
0708176c 0000001c R vtable for CTRPluginFramework::TextBox
07081788 0000001c R vtable for CTRPluginFramework::TouchKey
070817a4 0000001c R vtable for CTRPluginFramework::NumericTextBox
07083924 00000014 V vtable for CTRPluginFramework::MenuItem
07083ffc 0000001c V vtable for CTRPluginFramework::MenuEntryTools
070853b8 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070853c4 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
070853e8 00000014 R vtable for __gnu_cxx::recursive_init_error
07085420 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07085428 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07085430 0000000c R typeinfo for std::bad_exception
0708543c 00000008 R typeinfo for std::exception
07085444 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07085464 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07085488 00000012 R typeinfo name for std::bad_exception
0708549c 0000000d R typeinfo name for std::exception
070854ac 00000014 R vtable for std::bad_exception
070854c0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070854cc 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070854f4 0000002c R vtable for __cxxabiv1::__si_class_type_info
07085520 00000008 R typeinfo for std::type_info
07085528 0000000d R typeinfo name for std::type_info
07085538 0000000c R typeinfo for __cxxabiv1::__class_type_info
07085544 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07085568 0000002c R vtable for __cxxabiv1::__class_type_info
07085790 0000000c R typeinfo for std::bad_alloc
0708579c 0000000d R typeinfo name for std::bad_alloc
070857ac 00000014 R vtable for std::bad_alloc
070857c0 0000000c R typeinfo for std::logic_error
070857cc 0000000c R typeinfo for std::length_error
070857d8 0000000c R typeinfo for std::out_of_range
070857e4 0000000c R typeinfo for std::invalid_argument
070857f0 00000010 R typeinfo name for std::logic_error
07085800 00000011 R typeinfo name for std::length_error
07085814 00000011 R typeinfo name for std::out_of_range
07085828 00000015 R typeinfo name for std::invalid_argument
07085840 00000014 R vtable for std::logic_error
07085854 00000014 R vtable for std::length_error
07085868 00000014 R vtable for std::out_of_range
0708587c 00000014 R vtable for std::invalid_argument
0708589c 00000004 R _global_impure_ptr
070858e8 00000060 R __month_lengths
070859d4 00000014 r fpi.7439
070859e8 00000014 r fpinan.7475
07085a00 00000028 r tinytens
07085a6c 00000010 r blanks.8562
07085a7c 00000010 r zeroes.8563
07085a8c 000000fc R _C_time_locale
07085d54 00000015 r day_name.6011
07085d6c 00000024 r mon_name.6012
07085d90 00000101 R _ctype_
07085ea4 00000100 R __hexdig
07085fa8 00000028 R __mprec_bigtens
07085fd0 000000c8 R __mprec_tens
07086098 0000000c r p05.7353
070860a4 0000006c R __action_table
07086110 00000100 R __chclass
07086210 0000006c R __state_table
0708627c 00000010 r blanks.8541
0708628c 00000010 r zeroes.8542
0708629c 00000022 r basefix.8096
070862d4 000000bc r a1
07086390 000000bc r a2
0708644c 0000005b r a3
070864a8 00000070 r a6
07086518 000000a2 r a7
070865bc 00000040 r a8
070865fc 0000172a r b02cf
07087d28 00001a7c r d02f4
070898c8 R __exidx_start
07089ad8 R __exidx_end
07089ad8 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
07089adc 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
07089ae0 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
07089ae4 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
07089ae8 00000001 D CTRPluginFramework::g_keepRunning
07089aec 00000004 D CTRPluginFramework::FwkSettings::Header
07089af0 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07089af4 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07089af8 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
07089afc 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
07089b00 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07089b04 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07089b08 00000004 D CTRPluginFramework::Screenshot::Screens
07089b0c 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07089b10 00000001 D CTRPluginFramework::SystemImpl::Language
07089b11 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
07089b14 00000004 D Search15
07089b18 00000004 D UnCheckedCheckbox
07089b1c 00000004 D Unsplash15
07089b20 00000004 D Plus25
07089b24 00000004 D GameControllerFilled25
07089b28 00000004 D About15
07089b2c 00000004 D Trash25
07089b30 00000004 D Cut25
07089b34 00000004 D CloseWindow20
07089b38 00000004 D AddFavoriteFilled25
07089b3c 00000004 D ClearSymbolFilled15
07089b40 00000004 D ClipboardFilled25
07089b44 00000004 D CheckedCheckbox
07089b48 00000004 D CutFilled25
07089b4c 00000004 D CapsLockOn15
07089b50 00000004 D TrashFilled25
07089b54 00000004 D RAM15
07089b58 00000004 D More15
07089b5c 00000004 D InfoFilled25
07089b60 00000004 D CloseWindowFilled20
07089b64 00000004 D HandCursor15
07089b68 00000004 D EnterKey15
07089b6c 00000004 D Duplicate25
07089b70 00000004 D Settings15
07089b74 00000004 D File15
07089b78 00000004 D AddFavorite25
07089b7c 00000004 D Edit25
07089b80 00000004 D DuplicateFilled25
07089b84 00000004 D Save25
07089b88 00000004 D Clipboard25
07089b8c 00000004 D Info25
07089b90 00000004 D EditFilled25
07089b94 00000004 D KeyboardFilled25
07089b98 00000004 D PlusFilled25
07089b9c 00000004 D Shutdown15
07089ba0 00000004 D ClearSymbol15
07089ba4 00000004 D Maintenance15
07089ba8 00000004 D Controller15
07089bac 00000004 D Grid15
07089bb0 00000004 D Keyboard25
07089bb4 00000004 D CapsLockOnFilled15
07089bb8 00000004 D UserManualFilled15
07089bbc 00000004 D Rocket40
07089bc0 00000004 D Star15
07089bc4 00000004 D EnterKeyFilled15
07089bc8 00000004 D GameController25
07089bcc 00000004 D FolderFilled
07089bd0 00000004 D Restart15
07089bd4 000001f4 D opcode_names
07089dc8 D __dso_handle
07089dcc 00000004 D __cxxabiv1::__unexpected_handler
07089dd0 00000004 D __cxxabiv1::__terminate_handler
07089dd4 00000001 D __fdlib_version
07089dd8 00000004 D _impure_ptr
07089de0 00000460 d impure_data
0708a240 0000016c D __global_locale
0708a3ac 00000408 D __malloc_av_
0708a7b4 00000004 D __malloc_sbrk_base
0708a7b8 00000004 D __malloc_trim_threshold
0708a7bc 0000000c d __malloc_lock_object
0708a7c8 00000004 d __tz_lock_object
0708a7cc 00000008 D _tzname
0708a7d4 0000000c D __atexit_lock
0708a7e0 00000040 d tzinfo
0708a820 00000004 D environ
0708a824 0000000c d __env_lock_object
0708a830 D __TMC_END__
0708a840 d _GLOBAL_OFFSET_TABLE_
0708a84c D __tdata_lma
0708a858 t __frame_dummy_init_array_entry
0708a858 T __init_array_start
0708a858 B __preinit_array_end
0708a858 B __preinit_array_start
0708a858 D __tdata_lma_end
0708a8b0 t __do_global_dtors_aux_fini_array_entry
0708a8b0 T __init_array_end
0708a8b4 B __c_bss_start
0708a8b4 00000004 B CTRPluginFramework::offset
0708a8b8 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::ok
0708a8bc 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708a8c0 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708a8c4 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708a8c8 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708a8d4 00000004 B CTRPluginFramework::data
0708a8d8 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708a8d9 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
0708a8dc 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0708a8e0 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0708a8e4 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0708a8e8 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0708a8ec 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0708a8f0 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
0708a8f4 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
0708a8f5 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0708a8f8 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
0708a8fc 00000004 B CTRPluginFramework::g_FNsPointer
0708a900 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0708a904 00000004 B CTRPluginFramework::g_itemPointer
0708a908 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
0708a90c 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
0708a90d 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
0708a90e 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0708a90f 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0708a910 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0708a911 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0708a912 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708a913 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::item
0708a914 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::execute
0708a918 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0708a91c 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
0708a920 00000004 B CTRPluginFramework::random
0708a924 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708a928 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
0708a92c 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::execute
0708a92d 00000001 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708a930 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0708a934 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0708a936 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0708a938 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0708a93c 00000004 B CTRPluginFramework::g_oldRacePointer5CC
0708a940 00000004 B CTRPluginFramework::g_raceCondition
0708a944 00000004 B CTRPluginFramework::g_racePointer
0708a948 00000004 B CTRPluginFramework::dataZ
0708a94c 00000004 B CTRPluginFramework::dataY
0708a950 00000004 B CTRPluginFramework::dataX
0708a958 00000004 b g_onLoadCroLock
0708a95c 00000004 B g_mainThread
0708a960 00000004 B CTRPluginFramework::g_keepEvent
0708a964 00000004 B CTRPluginFramework::g_continueGameEvent
0708a968 0000005c b CTRPluginFramework::exception_data
0708a9c4 00000004 B CTRPluginFramework::g_keepThreadHandle
0708a9c8 00000018 b g_onLoadCroHook
0708a9e0 00000008 B CTRPluginFramework::_sdmcArchive
0708a9e8 00000004 B g_gspEventThreadPriority
0708a9ec 00000004 B CTRPluginFramework::g_resumeEvent
0708a9f0 00001000 b CTRPluginFramework::keepThreadStack
0708b9f0 00000004 B __ctru_heap_size
0708b9f4 00000004 B CTRPluginFramework::Color::Black
0708b9f8 00000004 B CTRPluginFramework::Color::White
0708b9fc 00000004 B CTRPluginFramework::Color::Red
0708ba00 00000004 B CTRPluginFramework::Color::Lime
0708ba04 00000004 B CTRPluginFramework::Color::Blue
0708ba08 00000004 B CTRPluginFramework::Color::Yellow
0708ba0c 00000004 B CTRPluginFramework::Color::Cyan
0708ba10 00000004 B CTRPluginFramework::Color::Magenta
0708ba14 00000004 B CTRPluginFramework::Color::Silver
0708ba18 00000004 B CTRPluginFramework::Color::Gray
0708ba1c 00000004 B CTRPluginFramework::Color::Maroon
0708ba20 00000004 B CTRPluginFramework::Color::Olive
0708ba24 00000004 B CTRPluginFramework::Color::Green
0708ba28 00000004 B CTRPluginFramework::Color::Purple
0708ba2c 00000004 B CTRPluginFramework::Color::Teal
0708ba30 00000004 B CTRPluginFramework::Color::Navy
0708ba34 00000004 B CTRPluginFramework::Color::BlackGrey
0708ba38 00000004 B CTRPluginFramework::Color::Brown
0708ba3c 00000004 B CTRPluginFramework::Color::DarkGrey
0708ba40 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0708ba44 00000004 B CTRPluginFramework::Color::DimGrey
0708ba48 00000004 B CTRPluginFramework::Color::DodgerBlue
0708ba4c 00000004 B CTRPluginFramework::Color::Gainsboro
0708ba50 00000004 B CTRPluginFramework::Color::ForestGreen
0708ba54 00000004 B CTRPluginFramework::Color::LimeGreen
0708ba58 00000004 B CTRPluginFramework::Color::Orange
0708ba5c 00000004 B CTRPluginFramework::Color::SkyBlue
0708ba60 00000004 B CTRPluginFramework::Color::Turquoise
0708ba64 00000004 b CTRPluginFramework::g_runningInstance
0708ba68 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708ba70 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708ba78 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708ba80 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708ba84 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708ba86 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708ba88 00000180 b CTRPluginFramework::g_keyName
0708bc08 00000004 B CTRPluginFramework::__fileHandle
0708bc10 00000008 B CTRPluginFramework::Time::Zero
0708bc18 00000004 B CTRPluginFramework::System::OnAbort
0708bc1c 00000004 B CTRPluginFramework::Controller::_keysDown
0708bc20 00000004 B CTRPluginFramework::Controller::_keysHeld
0708bc24 00000004 B CTRPluginFramework::Controller::_keysReleased
0708bc28 000009c4 b CTRPluginFramework::g_rng
0708c5f0 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
0708c5f4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708c5f8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708c5fc 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
0708c5fd 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
0708c5fe 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
0708c5ff 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
0708c600 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
0708c601 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
0708c602 00000001 B CTRPluginFramework::Preferences::ShowTopFps
0708c603 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
0708c604 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708c605 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708c608 00000070 B CTRPluginFramework::Preferences::Settings
0708c678 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708c690 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708c6a8 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708c6c0 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
0708c6c1 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
0708c6c2 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
0708c6c4 00000004 b CTRPluginFramework::defaultSysFont
0708c6c8 00000004 B CTRPluginFramework::g_fontAllocated
0708c6cc 00000004 b CTRPluginFramework::tileData
0708c6d0 00000004 b CTRPluginFramework::glyph
0708c6d4 0000000c B CTRPluginFramework::Font::_mutex
0708c6e0 00000004 B CTRPluginFramework::g_glyphAllocated
0708c6e4 00000028 B CTRPluginFramework::Window::BottomWindow
0708c70c 00000028 B CTRPluginFramework::Window::TopWindow
0708c734 00000004 B CTRPluginFramework::RendererPriv::g_customColor
0708c738 00000008 B CTRPluginFramework::Renderer::hookContext
0708c740 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708c744 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708c748 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708c74c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708c758 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708c764 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
0708c770 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708c788 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708c7a0 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708c7a4 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708c7ac 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708c7b0 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708c7b8 00000018 B CTRPluginFramework::OSDImpl::OSDHook
0708c7d0 00000010 b CTRPluginFramework::InstallOSD()::returnCode
0708c7e0 00000004 B CTRPluginFramework::OSDImpl::HookReturn
0708c7e4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708c7ec 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708c810 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708c81c 00000004 b CTRPluginFramework::g_second
0708c820 00000010 b CTRPluginFramework::g_fpsClock
0708c830 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708c834 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708c835 00000001 B CTRPluginFramework::OSDImpl::MessColors
0708c838 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708c83c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708c840 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0708c848 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0708c868 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708c870 00000004 b CTRPluginFramework::g_ctrpfString
0708c874 00000004 b CTRPluginFramework::g_bymeString
0708c878 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708c880 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708c888 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c890 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708c898 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708c89c 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708c8a0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708c8a8 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708c8b0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708c8b4 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708c8b8 00000004 b CTRPluginFramework::g_mode
0708c8bc 00000004 b CTRPluginFramework::g_OpenFileLock
0708c8c0 00000004 b CTRPluginFramework::g_HookMode
0708c8c8 00000040 b CTRPluginFramework::g_hookExportFile
0708c908 00000010 b CTRPluginFramework::g_returncode
0708c918 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
0708c930 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708c934 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708c938 00000004 b CTRPluginFramework::g_screenshotEntry
0708c93c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708c940 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0708c944 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708c948 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708c94c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708c950 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708c960 00000004 B CTRPluginFramework::__g_hexEditor
0708c964 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708c968 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708c978 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708c97c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708c980 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708c990 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c9a0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708c9b0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708c9b4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708c9b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c9bc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708c9cc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c9d0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708c9e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c9e4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708c9f4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708c9f8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708ca00 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0708ca08 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0708ca10 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0708ca18 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0708ca20 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708ca24 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708ca30 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708ca3c 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708ca48 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708ca50 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708ca58 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708ca5c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708ca6c 00000004 b CTRPluginFramework::__pmARinstance
0708ca70 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708ca74 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708ca78 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708ca88 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0708ca98 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0708ca9c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0708caa0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0708caa8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0708cab8 00000004 b CTRPluginFramework::g_radioId
0708cabc 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708cac0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0708cac4 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
0708cac8 00000004 B CTRPluginFramework::_pool
0708cad0 00000008 B CTRPluginFramework::Screenshot::_timer
0708cad8 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708cae0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708cae8 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708cb00 00000004 B CTRPluginFramework::Screenshot::_filecount
0708cb04 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708cb1c 00000004 B CTRPluginFramework::Screenshot::_display
0708cb20 00000004 B CTRPluginFramework::Screenshot::_mode
0708cb28 00000008 B CTRPluginFramework::Screenshot::Timer
0708cb30 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708cb34 00000004 B CTRPluginFramework::Screenshot::_task
0708cb38 00000004 B CTRPluginFramework::Screenshot::_count
0708cb3c 00000008 b CTRPluginFramework::g_sleepEvent
0708cb44 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708cb48 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708cb4c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708cb50 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708cb54 00000004 B CTRPluginFramework::HookManager::instance
0708cb58 00000078 B CTRPluginFramework::Scheduler::_singleton
0708cbd0 00000040 b CTRPluginFramework::_topBuf
0708cc10 00000004 B CTRPluginFramework::ScreenImpl::Top
0708cc14 00000040 b CTRPluginFramework::_botBuf
0708cc54 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708cc58 0000000c b CTRPluginFramework::Heap::_mutex
0708cc64 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708cc68 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708cc6c 00000008 b CTRPluginFramework::Heap::g_heapPool
0708cc74 0000000c b sAddrMap
0708cc80 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708cc98 0000000c B CTRPluginFramework::FSPath::FSMutex
0708cca8 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708ccac 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708cd10 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708cd14 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708cd18 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708cd20 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708cd24 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708cd28 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708cd34 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708cd40 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708cd50 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0708cd52 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
0708cd58 0000000c b _mutex
0708cd64 00000008 b sVramPool
0708cd6c 0000000c b sAddrMap
0708cd78 00000004 b srvRefCount
0708cd7c 00000004 b srv2Handle
0708cd80 00000004 b errfRefCount
0708cd84 00000004 b errfHandle
0708cd88 00000004 b sharedFontAddr
0708cd8c 00000004 b arbiter
0708cd90 00000004 b cfguRefCount
0708cd94 00000004 b cfguHandle
0708cd98 00000004 b fsuHandle
0708cda0 00000080 b fsExemptArchives
0708ce20 00000004 b fsuRefCount
0708ce24 00000001 B fs
0708ce28 0000000c b aptFirstHook
0708ce34 00000004 b serviceName.7785
0708ce38 00000004 b aptRefCount
0708ce3c 0000000c b aptEvents
0708ce48 00000008 b aptSleepEvent
0708ce50 00000004 b aptEventHandlerThread
0708ce54 00000004 b aptMessageFunc
0708ce58 00000004 b aptMessageFuncData
0708ce5c 00000001 b aptHomeButtonState
0708ce5d 00000001 b flagInit.8135
0708ce5e 00000001 b flagValue.8136
0708ce60 00001000 b aptParameters
0708de60 00001000 b __stack
0708ee60 00000004 b amRefCount
0708ee64 00000004 b amHandle
0708ee68 00000004 b acRefCount
0708ee6c 00000004 b acHandle
0708ee70 00000004 b hidRefCount
0708ee74 00000004 b kOld
0708ee78 00000004 b kHeld
0708ee7c 00000004 b cPos
0708ee80 00000004 b tPos
0708ee84 00000006 b aVec
0708ee8a 00000006 b gRate
0708ee90 00000004 b kDown
0708ee94 00000004 b kUp
0708ee98 00000004 b gspEventData
0708ee9c 00000038 b gspEvents
0708eed4 0000001c b gspEventCounts
0708eef0 00000001 b gspRunEvents
0708eef4 00000004 b gspRefCount
0708eef8 00000004 b gfxSharedMemory
0708eefc 00000001 b gfxThreadID
0708ef00 00000004 b irrstRefCount
0708ef04 00000004 b kHeld
0708ef08 00000004 b csPos
0708ef0c 00000004 b g_mainThreadVars
0708ef10 b saved_stack
0708ef18 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708ef1c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708ef34 0000000c B CTRPluginFramework::g_codeTypes
0708ef40 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708ef44 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708ef50 00000001 b CTRPluginFramework::g_condAgainstData
0708ef51 00000001 b CTRPluginFramework::g_newCondDataToggle
0708ef54 00000004 b CTRPluginFramework::__arCodeEditor
0708ef58 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708ef5c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708ef68 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708ef70 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708ef78 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0708ef80 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708ef88 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708ef98 00000001 b CTRPluginFramework::g_progressLoop
0708efa0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708efa8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708efb0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708efb8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708efc0 00000004 b CTRPluginFramework::__converter
0708efc4 00000008 b sMappablePool
0708efcc 0000000c b sAddrMap
0708efd8 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708efdc 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708efe0 00000008 B CTRPluginFramework::ARHandler::Offset
0708efe8 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708efec 00000010 B CTRPluginFramework::ARHandler::Data
0708effc 00000008 B CTRPluginFramework::ARHandler::Storage
0708f004 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708f008 00000001 b CTRPluginFramework::ToggleFloat
0708f00c 00000004 b CTRPluginFramework::g_context
0708f010 00000fa0 b CTRPluginFramework::arStack
0708ffb0 b completed.7759
0708ffb4 b object.7764
0708ffcc 0000000c b eh_globals
0708ffd8 00000010 b (anonymous namespace)::emergency_pool
0708ffe8 00000010 V std::string::_Rep::_S_empty_rep_storage
0708fff8 00000004 b (anonymous namespace)::__new_handler
0708fffc 00000028 B __malloc_current_mallinfo
07090024 00000004 B __malloc_max_sbrked_mem
07090028 00000004 B __malloc_max_total_mem
0709002c 00000004 B __malloc_top_pad
07090030 0000000b b __tzname_dst
0709003c 0000000b b __tzname_std
07090048 00000004 b prev_tzenv
0709004c 00000004 B _daylight
07090050 00000004 B _timezone
07090054 00000004 b initial_env
07090058 00000004 b heap_start.7089
0709005c 00000004 B fake_heap_end
07090060 00000004 B fake_heap_start
07090064 00000038 B __syscalls
0709009c 00000004 B g_sharedFont
070900a0 00000004 B charPerSheet
070900a4 00000004 B hidMemHandle
070900a8 00000004 B hidHandle
070900ac 00000014 B hidEvents
070900c0 00000004 B hidSharedMem
070900c4 00000004 B gspEventThread
070900c8 00000004 B gspEvent
070900cc 00000004 B gspGpuHandle
070900d0 00000004 B gspSharedMemHandle
070900d4 00000004 B gspThreadEventHandle
070900d8 00000004 B irrstMemHandle
070900dc 00000004 B irrstEvent
070900e0 00000004 B irrstHandle
070900e4 00000004 B irrstSharedMem
070900e8 00000004 B __ctru_linear_heap
070900ec 00000004 B __tmp
070900f0 00000004 B __ctru_linear_heap_size
070900f4 00000004 B __system_retAddr
070900f8 00000004 B __ctru_heap
070900fc B __c_bss_end
070900fc B __tls_start
0709011c A __end__
0709011c B __tls_end
