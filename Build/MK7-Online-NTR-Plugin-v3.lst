00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 0000013c T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
07001464 0000005c T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
070014c0 00000040 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07001500 00000040 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07001540 00000040 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
07001580 0000003c T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
070015bc 0000003c T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
070015f8 00000068 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
07001660 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001660 00000020 t std::vector<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item, std::allocator<CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::Item> >::~vector()
07001680 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
07001680 0000003c t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector()
070016bc 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016bc 00000020 t std::vector<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer, std::allocator<CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::Speedometer> >::~vector()
070016dc 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07001740 000000c0 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
07001800 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
0700185c 0000001c t CTRPluginFramework::GetItemPointer() [clone .part.110]
0700185c 0000001c t CTRPluginFramework::GetOldPointer5CC() [clone .part.106]
0700185c 0000001c t CTRPluginFramework::GetOldPointer5D0() [clone .part.108]
07001878 00000070 t CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.114]
07001878 00000070 t CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*) [clone .part.115]
070018e8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070018e8 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
07001908 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.153]
07001990 000000ac t CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07001a3c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.178]
07001a98 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001a98 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001ad4 0000003c T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07001b10 0000003c T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
07001b4c 00000024 W CTRPluginFramework::File::~File()
07001b4c 00000024 W CTRPluginFramework::File::~File()
07001b70 00000084 T CTRPluginFramework::IsInRace()
07001bf4 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
07001c5c 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07001cb0 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07001d24 000000c4 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
07001de8 00000110 T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
07001ef8 000000bc T CTRPluginFramework::GetRacePointer()
07001fb4 0000002c T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
07001fe0 0000002c T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
0700200c 00000028 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07002034 0000002c T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07002060 0000001c t CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*) [clone .part.96]
07002060 0000001c t CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*) [clone .part.95]
0700207c 00000018 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
07002094 00000018 T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
070020ac 00000038 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
070020e4 000000b0 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
07002194 000000d0 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07002264 00000254 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
070024b8 00000180 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
07002638 00000070 T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
070026a8 00000130 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
070027d8 00000098 T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07002870 000000a0 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07002910 00000048 T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07002958 00000050 T CTRPluginFramework::GetFNsPointer()
070029a8 00000068 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
07002a10 00000068 T CTRPluginFramework::GetOldPointer5CC()
07002a78 00000030 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
07002aa8 00000064 T CTRPluginFramework::GetOldPointer5D0()
07002b0c 00000048 T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
07002b54 00000090 T CTRPluginFramework::GetItemPointer()
07002be4 000001a4 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07002d88 000000b8 T CTRPluginFramework::GetTotalPlayers()
07002e40 000001f4 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
07003034 000001f0 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07003224 00000060 T CTRPluginFramework::GetTime()
07003284 0000002c T CTRPluginFramework::GetMinutes()
070032b0 0000001c T CTRPluginFramework::GetSeconds()
070032cc 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07003384 00000074 T CTRPluginFramework::SubToTime(unsigned short)
070033f8 0000042c T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
07003824 00000058 T CTRPluginFramework::writeItem(unsigned long)
0700387c 000000c8 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
07003944 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07003974 000000e4 T CTRPluginFramework::writeSpeed(unsigned long)
07003a58 00000040 T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
07003a98 00000040 T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
07003ad8 00000254 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
07003d2c 00000254 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
07003f80 00000048 T CTRPluginFramework::writeVR(unsigned long)
07003fc8 000000ac T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07004074 0000001c T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
07004090 00000060 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
070040f0 0000004c T CTRPluginFramework::writeLocation(unsigned long)
0700413c 00000060 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
0700419c 00000064 T CTRPluginFramework::writeFlag(unsigned short)
07004200 000000f4 T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
070042f4 000016ac T CTRPluginFramework::main()
070059a0 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07005a80 000001d4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07005c54 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07005c58 00000004 T CTRPluginFramework::OnProcessExit()
07005c5c 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
07005cc0 000000f0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005db0 00000198 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
07005f48 00000218 T CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)
07006160 00000550 T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
070066b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
07006728 00000038 T OnLoadCro
07006760 00000170 T CTRPluginFramework::Initialize()
070068d0 000000b0 T CTRPluginFramework::ThreadExit()
07006980 00000060 T abort
070069e0 0000003c T CTRPluginFramework::ThreadInit(void*)
07006a1c 0000008c T LaunchMainThread
07006aa8 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07006eb0 0000000c t _GLOBAL__sub_I_g_mainThread
07006ebc 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07006f08 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07006f84 000000c4 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07007048 00000078 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
070070c0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070070c0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070070d8 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070070d8 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070070e4 00000008 T CTRPluginFramework::Color::ToU32() const
070070f0 00000120 T CTRPluginFramework::Color::Fade(double)
07007210 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07007250 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
070072cc 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
070074e0 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07007600 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007600 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07007670 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07007670 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700769c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
070076b0 00000044 T CTRPluginFramework::PluginMenu::Run() const
070076f4 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070076fc 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
0700770c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07007718 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007718 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007758 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007758 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07007780 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07007790 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007790 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070077dc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070077dc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700782c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700782c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700785c 00000010 T CTRPluginFramework::MenuEntry::Disable() const
0700786c 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07007874 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
0700787c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07007884 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007884 00000030 W CTRPluginFramework::TextBox::~TextBox()
070078b4 0000001c W CTRPluginFramework::TextBox::~TextBox()
070078d0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070078d0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007918 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007918 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07007954 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007954 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07007990 00000008 T CTRPluginFramework::MessageBox::operator()() const
07007998 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007a5c 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07007b04 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b04 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b4c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007b4c 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007bb4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007bb4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07007be0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07007be8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007c04 00000028 T CTRPluginFramework::Keyboard::Open() const
07007c2c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07007ca4 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07007d54 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07007da8 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07007e10 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07007e18 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07007e20 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07007ebc 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07007f48 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07007ff0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070080d8 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008164 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0700820c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070082f4 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07008380 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07008428 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07008510 00000028 t __tcf_0
07008538 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
070085b0 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
070085b8 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07008638 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070086b4 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
0700878c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0700878c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070087a8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070087a8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070087e8 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
070087f8 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070088b8 00000020 T CTRPluginFramework::HotkeyManager::Count()
070088d8 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008a48 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07008b74 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07008c9c 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07008d0c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07008d94 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07008dd8 0000004c T CTRPluginFramework::Directory::Close() const
07008e24 000000e8 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
07008f0c 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07008f20 00000008 T CTRPluginFramework::Directory::IsOpen() const
07008f28 00000040 T CTRPluginFramework::Directory::Directory()
07008f28 00000040 T CTRPluginFramework::Directory::Directory()
07008f68 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07008f9c 00000060 T CTRPluginFramework::Directory::~Directory()
07008f9c 00000060 T CTRPluginFramework::Directory::~Directory()
07008ffc 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07008ffc 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700901c 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070090b4 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700914c 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070091ec 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070092c0 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009354 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070094a0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070094a0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070094f8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009534 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009534 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07009550 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
070096c0 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
070096dc 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07009804 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
0700987c 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
070098e4 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07009990 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
070099d4 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07009bb0 000001b4 T CTRPluginFramework::Directory::_List() const
07009d64 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009e44 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07009f28 0000000c T CTRPluginFramework::FwkSettings::Get()
07009f34 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
0700a014 00000010 T CTRPluginFramework::Process::GetHandle()
0700a024 00000010 T CTRPluginFramework::Process::GetTitleID()
0700a034 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a090 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700a0c8 00000024 T CTRPluginFramework::Process::GetTextSize()
0700a0ec 00000008 T CTRPluginFramework::Process::Pause()
0700a0f4 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0700a104 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700a1ac 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0700a1b0 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700a1fc 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0700a234 00000024 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
0700a258 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700a274 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
0700a298 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0700a2d4 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0700a2fc 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0700a31c 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
0700a33c 0000016c T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
0700a4a8 0000002c T CTRPluginFramework::Hook::Hook()
0700a4a8 0000002c T CTRPluginFramework::Hook::Hook()
0700a4d4 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700a4ec 00000230 T CTRPluginFramework::Hook::Enable()
0700a71c 0000005c T CTRPluginFramework::Hook::Disable()
0700a778 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a778 00000014 T CTRPluginFramework::Mutex::Mutex()
0700a78c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a78c 00000028 T CTRPluginFramework::Mutex::~Mutex()
0700a7b4 00000004 T CTRPluginFramework::Mutex::Lock()
0700a7b8 00000014 T CTRPluginFramework::Mutex::TryLock()
0700a7cc 00000004 T CTRPluginFramework::Mutex::Unlock()
0700a7d0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a7d0 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700a7f4 0000004c T CTRPluginFramework::Lock::~Lock()
0700a7f4 0000004c T CTRPluginFramework::Lock::~Lock()
0700a840 00000074 T CTRPluginFramework::File::Close() const
0700a8b4 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
0700a96c 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
0700aa5c 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0700aa88 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0700ab6c 00000008 T CTRPluginFramework::File::Tell() const
0700ab74 00000030 T CTRPluginFramework::File::Rewind() const
0700aba4 00000034 T CTRPluginFramework::File::Flush() const
0700abd8 0000006c T CTRPluginFramework::File::GetSize() const
0700ac44 000000dc T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
0700ad20 00000008 T CTRPluginFramework::File::IsOpen() const
0700ad28 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0700ad3c 00000044 T CTRPluginFramework::File::File()
0700ad3c 00000044 T CTRPluginFramework::File::File()
0700ad80 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ae14 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700aee8 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700af6c 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b00c 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0700b114 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b114 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700b180 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700b1c8 00000014 T CTRPluginFramework::Time::Time()
0700b1c8 00000014 T CTRPluginFramework::Time::Time()
0700b1dc 00000020 T CTRPluginFramework::Time::AsSeconds() const
0700b1fc 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
0700b214 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0700b21c 00000028 T CTRPluginFramework::Seconds(float)
0700b244 00000010 T CTRPluginFramework::Milliseconds(int)
0700b254 00000008 T CTRPluginFramework::Microseconds(long long)
0700b25c 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b270 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b284 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b298 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700b2b0 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0700b2fc 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0700b314 00000010 T CTRPluginFramework::System::IsNew3DS()
0700b324 00000014 T CTRPluginFramework::Controller::GetKeysDown()
0700b338 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0700b354 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
0700b370 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700b38c 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
0700b3a8 00000034 T CTRPluginFramework::Controller::IsKeysPressed(unsigned long)
0700b3dc 0000002c T CTRPluginFramework::Controller::Update()
0700b408 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
0700b480 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b4dc 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700b538 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700b594 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700b5d8 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700b658 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b70c 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700b848 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700b880 0000001c T CTRPluginFramework::InitializeRandomEngine()
0700b89c 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700baf0 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700baf0 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700bb34 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700c274 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c27c 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c2c0 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700c3cc 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700c434 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700c450 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
0700c48c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700c4b0 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c4d4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
0700c54c 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700c57c 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700c688 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700c854 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0700cb34 000000cc T CTRPluginFramework::Preferences::LoadSettings()
0700cc00 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700ccbc 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700cd78 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700cdd4 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700ce24 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0700cea4 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
0700d074 00000004 T CTRPluginFramework::Preferences::Initialize()
0700d078 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700d164 00000010 T CTRPluginFramework::Glyph::Width() const
0700d174 00000060 T CTRPluginFramework::Font::Initialize()
0700d1d4 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700d528 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700d82c 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700d938 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700d9a0 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700d9c0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700d9f0 00000020 W CTRPluginFramework::Renderer::GetContext()
0700da10 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700da70 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700dbd8 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700dd44 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700dde4 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700dfcc 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700dffc 00000028 T CTRPluginFramework::Window::~Window()
0700dffc 00000028 T CTRPluginFramework::Window::~Window()
0700e024 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e024 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700e0c4 00000064 T CTRPluginFramework::Window::Draw() const
0700e128 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700e200 00000018 T CTRPluginFramework::Window::DrawButton() const
0700e218 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700e230 00000018 T CTRPluginFramework::Window::MustClose() const
0700e248 0000002c T CTRPluginFramework::Window::Close() const
0700e274 00000004 T CTRPluginFramework::Window::GetRect() const
0700e278 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700e2a4 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700e34c 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700e47c 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700e548 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700e694 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e7d8 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700e810 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700e9b0 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700eb74 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700eda8 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700ee18 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700ee84 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700ee98 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700eebc 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700eed8 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700ef08 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700ef38 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700ef60 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700ef88 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700efa8 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700efe4 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700f02c 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700f070 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700f18c 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700f1ac 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700f21c 00000038 t __tls_init
0700f21c 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700f254 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700f290 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f304 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f370 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f3f8 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f48c 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700f51c 00000008 W CTRPluginFramework::Drawable::operator()()
0700f524 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0700f528 000002f0 T CTRPluginFramework::TextBox::Draw()
0700f818 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f818 00000094 T CTRPluginFramework::TextBox::TextBox()
0700f8ac 0000000c T CTRPluginFramework::TextBox::Open() const
0700f8b8 0000000c T CTRPluginFramework::TextBox::Close() const
0700f8c4 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0700f8cc 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0700fb14 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0700fb20 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0700fbb8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0700fc6c 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0700fcc4 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0700fcf4 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0700fdb0 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
0700fe6c 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
07010034 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010034 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07010178 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07010260 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
070102d8 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
07010348 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0701036c 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07010390 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
07010390 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
070103d0 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070103d8 00000008 T CTRPluginFramework::BMPImage::Width() const
070103e0 00000008 T CTRPluginFramework::BMPImage::Height() const
070103e8 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070103f0 00000010 T CTRPluginFramework::BMPImage::data() const
07010400 0000001c T CTRPluginFramework::BMPImage::end() const
0701041c 00000010 W CTRPluginFramework::BMPImage::DataClear()
0701042c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0701042c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
070104d4 0000003c T CTRPluginFramework::BMPImage::Unload()
07010510 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
0701064c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07010654 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
070108a4 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07010a78 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07010ac0 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07010af0 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07010bc4 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
07010c44 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07010c68 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07010d84 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010d84 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07010dd8 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
070110f8 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070110f8 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07011144 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07011190 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070114a0 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07011560 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
07011690 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
070117fc 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0701183c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0701183c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0701185c 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070119cc 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07011ac0 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07011b54 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07011bfc 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07011e88 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011e88 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07011ecc 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07011f20 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
070120a8 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07012154 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
07012198 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07012818 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070129c0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
070129c0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
070129ec 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
070129ec 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
07012a0c 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
07012abc 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
07012b18 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012b18 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07012b9c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07012ba8 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07012bc4 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07012bd0 000000cc T CTRPluginFramework::OSDImpl::Draw()
07012c9c 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
07012d74 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07012da0 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07012de8 0000020c T CTRPluginFramework::InstallOSD()
07012ff4 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
0701303c 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07013114 00000108 T CTRPluginFramework::OSDImpl::Update()
0701321c 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
070138a4 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0701390c 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07013978 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013978 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013af0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013af0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07013c48 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07013cc0 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07013f74 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07014110 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07014330 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701435c 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07014398 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
070143d4 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07014410 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701444c 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07014488 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070144b4 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
070144f0 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701452c 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07014568 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070145a4 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
070145d0 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701460c 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07014638 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07014664 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
070146a0 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
070146cc 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07014708 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07014734 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07014768 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070147a4 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
070147d0 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0701480c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07014838 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07014864 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07014890 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070148bc 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
070148e8 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07014914 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07014940 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0701496c 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070149a8 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070149d4 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
07014a64 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014a64 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
07014a84 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014a84 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014b64 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07014b6c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014b6c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07014c00 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07014c20 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07014da8 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07014dc8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07014de4 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07014e00 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07014e08 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07014e10 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014e10 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07014e30 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07014f14 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
07015610 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07015668 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701574c 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07015788 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
070158b8 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
070159f4 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07015aac 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015bb4 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015bb4 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07015c38 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07015d2c 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07015e64 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07015ffc 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07015ffc 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
070160f8 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070160f8 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07016298 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07016310 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07016310 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070163ec 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070163ec 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07016504 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07016540 00000058 T CTRPluginFramework::Menu::CloseAll()
07016598 00000030 T CTRPluginFramework::Menu::~Menu()
07016598 00000030 T CTRPluginFramework::Menu::~Menu()
070165c8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
070165d4 00000008 T CTRPluginFramework::Menu::GetFolder() const
070165dc 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
070165e4 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
07016624 00000384 T CTRPluginFramework::Menu::Draw() const
070169a8 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
07016a34 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07016ac0 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07016ce8 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07016e5c 00000068 T CTRPluginFramework::Menu::ShowNote()
07016ec4 00000008 T CTRPluginFramework::Menu::CloseNote()
07016ecc 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07016ed4 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07016f14 00000044 T CTRPluginFramework::Menu::Pop()
07016f58 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701701c 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
070170d4 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070170dc 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
070170dc 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07017104 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07017120 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017120 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070171f4 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07017210 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017210 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070172c8 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070172c8 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017384 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07017398 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
070173e8 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
07017400 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07017424 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
070174cc 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
070174dc 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07017500 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07017560 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07017570 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07017580 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07017590 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07017620 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701773c 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
070177ac 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07017850 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701787c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701787c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070178ac 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070178ac 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07017918 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07017a6c 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07017aa8 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017aa8 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017c14 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07017c6c 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017d20 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07017e00 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07017e78 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07017e78 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701833c 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07018348 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07018668 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07018770 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07018bc4 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07018ce0 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07018d6c 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07018da8 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07018dd4 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07018ea4 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07018f24 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07018fa0 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07019024 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07019080 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070190c0 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
070191f0 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0701952c 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07019740 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07019758 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0701976c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07019780 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07019794 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070198d0 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070198d4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070198d8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
070198f0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07019908 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07019920 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07019938 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07019950 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07019968 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07019980 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07019998 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
070199b0 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
070199f4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019a6c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07019ad0 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07019b68 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07019d0c 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019e90 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07019f3c 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701a060 0000005c t CTRPluginFramework::Reboot()
0701a0bc 00000064 t CTRPluginFramework::Shutdown()
0701a120 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0701a314 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
0701ad14 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701ad14 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0701aea4 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0701afc0 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0701b04c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0701b08c 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701b1fc 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701b2a8 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
0701b8c0 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0701b8fc 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0701b938 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701b948 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701b948 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701ba20 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701ba20 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0701ba5c 0000001c T CTRPluginFramework::SubMenu::operator()()
0701ba78 00000200 T CTRPluginFramework::SubMenu::Draw()
0701bc78 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0701bd3c 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0701bd44 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0701bd60 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bf04 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701bf50 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
0701bf50 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
0701bf54 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
0701bf58 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
0701bf5c 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701c0f8 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701c1f4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701c330 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
0701c3a8 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c5f8 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701c84c 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701ca48 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701cc28 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701cc44 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
0701cd00 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701cd1c 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701cd8c 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0701cdbc 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701cdf8 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701cea0 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701ced4 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701cf04 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701cf90 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701d028 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701d0f4 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701d1b0 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701d260 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701d3f4 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701d404 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701d414 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701d424 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d424 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701d698 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701d6dc 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701d8a4 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701d968 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701d9c0 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701daa4 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701dc14 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701dd98 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701ddc4 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701ddc4 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701de2c 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701de54 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701dfa8 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701e01c 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701e1bc 00000160 T CTRPluginFramework::HexEditor::_Update()
0701e31c 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701e5bc 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701e5d0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e5d0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e5f8 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701e614 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701e72c 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e72c 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e7fc 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e7fc 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701e8d0 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701e8d8 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701e8ec 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701e8f8 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701e900 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701e924 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701e954 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701e970 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701e9d8 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701e9d8 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701e9f8 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701ea14 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701ea14 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701eaa8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eaa8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb08 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb08 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701eb68 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701eb6c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701ebe4 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701eca4 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701ecd8 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701f0d0 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701f0e8 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701f3ac 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f3ac 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701f56c 00000158 T CTRPluginFramework::GuideReader::Draw()
0701f6c4 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701f738 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701f7a0 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701f7a0 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701f7e8 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701f834 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701f840 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701f86c 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701f8c8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701f950 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701f9b4 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701f9b4 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701fa14 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fa14 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fbc0 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fbc0 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fd7c 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fd7c 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701fde0 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701fde8 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701fdf0 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701fdf8 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701fe00 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701fe08 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701ff6c 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070203c4 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07020454 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
070204d4 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07020558 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
070206b8 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
07020938 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07020ea4 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07020f0c 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07020f5c 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07020fcc 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07020fd4 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
07021098 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07021274 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
070212d8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07021304 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021304 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07021324 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
070213f0 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
070214ac 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
07021570 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07021adc 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0702204c 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
07022104 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07022b58 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07022c10 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07023854 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07023898 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
07023954 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07023b18 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
07023b68 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07023bc0 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07023c08 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07023f2c 00000254 T CTRPluginFramework::KeyboardImpl::Run()
07024180 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070241f8 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0702420c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07024230 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
070242b8 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
070243c8 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07024424 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
070244bc 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070244bc 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702470c 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07024740 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07024794 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
070247b8 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
070247e0 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070248bc 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
070249e0 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07024bac 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024bac 00000028 W CTRPluginFramework::ARCode::~ARCode()
07024bd4 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07024d4c 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07024ec8 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07025030 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
0702506c 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
070251b4 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
070251e4 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070252b8 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
070254b8 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07025530 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
070255f8 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070257b0 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07025958 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
070259d0 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
07025a2c 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07025b44 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07025ba8 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07025d14 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07025d14 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0702616c 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
07026528 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07026598 000000f4 t CTRPluginFramework::ClearSearchFolder()
0702668c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
070266c0 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
070268e8 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07026910 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07026980 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07026a48 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07026a84 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07026cec 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07026dd0 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07026e10 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07026e40 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07026f14 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070271a0 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07027558 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
070275b0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070275b0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070275dc 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
070275e8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
070275f4 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07027750 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0702778c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
07027798 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
070277a4 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
070277c4 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07027960 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
070279bc 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07027b18 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07027b30 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07027c54 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07027d18 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07027ec8 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07027f8c 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0702800c 00000044 T CTRPluginFramework::Search::UpdateProgress()
07028050 00000194 T CTRPluginFramework::Search::CheckNextRegion()
070281e4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
0702825c 00000008 T CTRPluginFramework::Search::GetHeader() const
07028264 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
070282ac 0000000c T CTRPluginFramework::Search::GetType() const
070282b8 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
070282d0 00000070 T CTRPluginFramework::Search::WriteHeader()
07028340 00000058 T CTRPluginFramework::Search::WriteResults()
07028398 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
070283e4 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07028624 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07028624 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07028864 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0702892c 00000088 T CTRPluginFramework::Search::CreateIndexTable()
070289b4 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070289b4 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028b5c 00000080 T CTRPluginFramework::Search::Cancel()
07028bdc 00000118 T CTRPluginFramework::Search::ExecuteSearch()
07028cf4 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
07028db8 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07028e78 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07028ef0 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07029158 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
070293e8 00000048 W CTRPluginFramework::Search::~Search()
070293e8 00000048 W CTRPluginFramework::Search::~Search()
07029430 00000044 T CTRPluginFramework::Search32::~Search32()
07029430 00000044 T CTRPluginFramework::Search32::~Search32()
07029474 0000001c T CTRPluginFramework::Search32::~Search32()
07029490 0000001c W CTRPluginFramework::Search::~Search()
070294ac 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070294ac 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070296d4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070296d4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070296f4 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070296f4 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0702976c 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070298c4 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029910 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07029a54 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07029b98 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07029bc8 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07029c8c 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07029cc8 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07029d00 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07029de0 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07029e2c 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0702a144 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0702a2bc 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0702a5a8 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
0702a74c 0000002c T CTRPluginFramework::Screenshot::Initialize()
0702a778 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0702a824 00000094 T CTRPluginFramework::SystemImpl::Initialize()
0702a8b8 0000003c T CTRPluginFramework::SystemImpl::Status()
0702a8f4 000000c8 T CTRPluginFramework::HookManager::Init()
0702a9bc 00000018 T CTRPluginFramework::HookManager::Lock()
0702a9d4 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
0702aa7c 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
0702aadc 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702aadc 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702ab14 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ab14 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702ab4c 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702ab94 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0702aca0 000000d4 T CTRPluginFramework::Scheduler::Initialize()
0702ad74 00000050 T CTRPluginFramework::Scheduler::Exit()
0702adc4 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702adc4 00000048 T CTRPluginFramework::Scheduler::Scheduler()
0702ae0c 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
0702ae78 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0702af48 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0702af78 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
0702af94 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
0702b09c 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0702b0b4 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b0b4 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702b0f8 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
0702b14c 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0702b22c 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
0702b364 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0702b400 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0702b430 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0702b438 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b49c 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b500 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b570 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b5e4 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702b654 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
0702b724 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
0702b7e8 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0702b844 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
0702b8e8 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0702b940 000000bc T CTRPluginFramework::ScreenImpl::Clean()
0702b9fc 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0702bad4 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
0702bb3c 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0702bb44 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0702bb4c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0702bb54 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0702bb70 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0702bb8c 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0702bbe4 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0702bc14 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0702bc70 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0702bce8 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702bd0c 00000004 t addrMapNodeDestructor(rbtree_node*)
0702bd10 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0702be40 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0702be48 00000070 T CTRPluginFramework::Heap::Free(void*)
0702beb8 0000000c T CTRPluginFramework::Heap::SpaceFree()
0702bec4 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702bef4 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702bff8 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702c1d4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c1d4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702c298 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702c2f8 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702c304 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c344 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702c354 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702c36c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702c380 00000004 T Kernel::Initialize()
0702c384 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702c39c 0000000c T KProcess::GetCurrent()
0702c3a8 00000024 T KProcess::PatchCore2Access()
0702c3cc 0000002c T KProcess::PatchCategory(unsigned long)
0702c3f8 00000014 T KProcess__PatchCategory
0702c40c 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702c438 00000014 T KProcess__PatchMaxPriority
0702c44c 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0702c4d0 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702c504 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c504 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702c524 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
0702c608 00000018 T IsPaused
0702c620 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
0702c65c 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702c678 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702c694 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702c6fc 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702c778 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702c814 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702c8c4 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702c98c 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
0702ca60 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
0702caf8 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702cb54 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cb54 00000090 T CTRPluginFramework::EventManager::EventManager()
0702cbe4 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702cd44 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0702cd80 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
0702d01c 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702d114 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702d11c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0702d148 00000034 W MemPool::DelBlock(MemBlock*)
0702d17c 0000005c T MemPool::CoalesceRight(MemBlock*)
0702d1d8 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
0702d2f0 000000fc T MemPool::Deallocate(MemChunk const&)
0702d3ec 00000020 T MemPool::GetFreeSpace()
0702d40c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702d430 00000004 t addrMapNodeDestructor(rbtree_node*)
0702d434 00000154 T vramMemAlign
0702d588 00000008 T vramAlloc
0702d590 00000070 T vramFree
0702d600 00000030 t _GLOBAL__sub_I_vramMemAlign
0702d630 000001d8 T threadCreate
0702d808 0000002c T threadFree
0702d834 00000024 T threadJoin
0702d858 00000020 T threadGetCurrent
0702d878 0000003c T threadExit
0702d8b4 0000003c t _thread_begin
0702d8f0 00000050 T srvExit
0702d940 00000034 T srvRegisterClient
0702d974 00000064 T srvInit
0702d9d8 00000068 T srvGetServiceHandleDirect
0702da40 00000004 T srvGetServiceHandle
0702da44 00000034 T srvPublishToSubscriber
0702da78 00000034 T errfExit
0702daac 00000058 T errfInit
0702db04 0000003c T ERRF_Throw
0702db40 00000090 T ERRF_ExceptionHandler
0702dbd0 000000a8 T fontEnsureMapped
0702dc78 00000110 T fontGlyphIndexFromCodePoint
0702dd88 00000074 T fontGetCharWidthInfo
0702ddfc 0000000c T __sync_init
0702de08 00000018 T __sync_fini
0702de20 00000018 T LightLock_Init
0702de38 0000008c T LightLock_Lock
0702dec4 00000034 T LightLock_TryLock
0702def8 00000050 T LightLock_Unlock
0702df48 00000018 T RecursiveLock_Init
0702df60 00000030 T RecursiveLock_Lock
0702df90 00000044 T RecursiveLock_TryLock
0702dfd4 00000034 T RecursiveLock_Unlock
0702e008 00000030 T LightEvent_Init
0702e038 00000060 T LightEvent_Clear
0702e098 00000064 T LightEvent_Pulse
0702e0fc 000000b4 T LightEvent_Signal
0702e1b0 000000a8 T LightEvent_Wait
0702e258 000000a0 T cfguInit
0702e2f8 00000034 T cfguExit
0702e32c 00000044 T CFGU_GetConfigInfoBlk2
0702e370 00000014 T CFGU_GetSystemLanguage
0702e384 00000028 t fsSession
0702e3ac 00000044 t fsSessionForArchive
0702e3f0 00000038 T fsExit
0702e428 00000028 T FSUSER_Initialize
0702e450 000000b0 T fsInit
0702e500 00000080 T FSUSER_OpenFile
0702e580 00000068 T FSUSER_DeleteFile
0702e5e8 000000a4 T FSUSER_RenameFile
0702e68c 00000068 T FSUSER_DeleteDirectoryRecursively
0702e6f4 00000080 T FSUSER_CreateFile
0702e774 00000070 T FSUSER_CreateDirectory
0702e7e4 000000a4 T FSUSER_RenameDirectory
0702e888 0000006c T FSUSER_OpenDirectory
0702e8f4 00000074 T FSUSER_OpenArchive
0702e968 00000058 T FSFILE_Read
0702e9c0 00000060 T FSFILE_Write
0702ea20 00000038 T FSFILE_GetSize
0702ea58 00000028 T FSFILE_SetSize
0702ea80 0000003c T FSFILE_Close
0702eabc 00000024 T FSFILE_Flush
0702eae0 00000054 T FSDIR_Read
0702eb34 0000003c T FSDIR_Close
0702eb70 00000104 T aptSendCommand
0702ec74 0000006c T APT_CheckNew3DS
0702ece0 00000048 T APT_GetSharedFont
0702ed28 000000a0 T amInit
0702edc8 00000034 T amExit
0702edfc 00000088 T acInit
0702ee84 00000034 T acExit
0702eeb8 000000bc T hidExit
0702ef74 00000034 T hidCheckSectionUpdateTime
0702efa8 00000174 T hidScanInput
0702f11c 00000010 T hidKeysHeld
0702f12c 00000010 T hidKeysDown
0702f13c 00000010 T hidKeysUp
0702f14c 00000018 T hidTouchRead
0702f164 00000090 T HIDUSER_GetHandles
0702f1f4 00000174 T hidInit
0702f368 000000e8 t gspEventThreadMain
0702f450 000000a0 T gspInitEventHandler
0702f4f0 00000040 T gspExitEventHandler
0702f530 0000008c T gspExit
0702f5bc 0000005c T gspWaitForEvent
0702f618 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702f67c 000000dc T gspInit
0702f758 00000034 T irrstCheckSectionUpdateTime
0702f78c 00000070 T irrstScanInput
0702f7fc 0000001c T irrstKeysHeld
0702f818 00000050 T IRRST_GetHandles
0702f868 00000034 T IRRST_Initialize
0702f89c 00000128 T irrstInit
0702f9c4 0000002c T IRRST_Shutdown
0702f9f0 000000a8 T irrstExit
0702fa98 00000028 t __ctru_get_reent
0702fac0 000000ec T __system_initSyscalls
0702fbac 000000ac T utf8_to_utf16
0702fc58 00000138 T decode_utf8
0702fd90 0000005c T decode_utf16
0702fdec 000000d4 T utf16_to_utf8
0702fec0 000000e0 T encode_utf8
0702ffa0 00000054 T encode_utf16
0702fff4 00000054 T rbtree_find
07030048 00000014 t is_black
0703005c 000002bc T rbtree_remove
07030318 00000050 T rbtree_node_next
07030368 00000090 T rbtree_rotate
070303f8 00000174 t do_insert
0703056c 00000008 T rbtree_insert
07030574 00000010 T rbtree_init
07030584 T LoadCROHooked
07030598 T AR__ExecuteRoutine
070305c0 t stackBak
070305c8 T svcCustomBackdoor
070305d0 T svcConvertVAToPA
070305d8 T svcFlushDataCacheRange
070305e0 T svcMapProcessMemoryEx
070305f4 T svcUnmapProcessMemoryEx
070305fc T svcControlProcess
07030604 T svcQueryMemory
07030634 T svcCreateThread
07030654 T svcExitThread
0703065c T svcSleepThread
07030664 T svcSetThreadPriority
0703066c T svcCreateEvent
07030680 T svcSignalEvent
07030688 T svcClearEvent
07030690 T svcMapMemoryBlock
07030698 T svcUnmapMemoryBlock
070306a0 T svcCreateAddressArbiter
070306b4 T svcArbitrateAddress
070306cc T svcCloseHandle
070306d4 T svcWaitSynchronization
070306dc T svcWaitSynchronizationN
07030704 T svcGetSystemTick
0703070c T svcGetSystemInfo
07030724 T svcGetProcessInfo
0703073c T svcConnectToPort
07030750 T svcSendSyncRequest
07030758 T svcOpenProcess
0703076c T svcGetProcessId
07030780 T svcBreak
07030788 T svcInvalidateProcessDataCache
07030790 T svcFlushProcessDataCache
07030798 T svcKernelSetState
070307a0 T svcQueryProcessMemory
070307c4 00000030 t CTRPluginFramework::GetCurrentTime()
070307f4 00000014 T CTRPluginFramework::Clock::Clock()
070307f4 00000014 T CTRPluginFramework::Clock::Clock()
07030808 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030808 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07030810 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
07030848 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07030878 00000044 T CTRPluginFramework::Clock::Restart()
070308bc 00000014 T CTRPluginFramework::Touch::IsDown()
070308d0 00000028 T CTRPluginFramework::Touch::GetPosition()
070308f8 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070308f8 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0703097c 00000048 T CTRPluginFramework::Task::~Task()
0703097c 00000048 T CTRPluginFramework::Task::~Task()
070309c4 00000030 T CTRPluginFramework::Task::Start() const
070309f4 00000044 T CTRPluginFramework::Task::Wait() const
07030a38 00000014 T CTRPluginFramework::Task::Status() const
07030a4c 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030a4c 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030a74 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030af4 00000048 T CTRPluginFramework::LineWriter::Flush()
07030b3c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030b3c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030b58 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030bc4 00000018 T CTRPluginFramework::LineWriter::Close()
07030bdc 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030ca0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
07030d18 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07031054 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07031054 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
07031074 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070310fc 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070310fc 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07031228 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07031264 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031364 00000084 T CTRPluginFramework::ARCode::Update()
070313e8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070313e8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703140c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07031434 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07031434 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070314ec 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070314ec 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07031520 00000040 T CTRPluginFramework::ARCodeContext::Update()
07031560 00000090 T CTRPluginFramework::ARCodeContext::Clear()
070315f0 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
070316c8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
070316c8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
070316e8 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
07031700 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070317f4 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
07031810 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031924 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031934 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
070319ac 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070319c4 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07031a18 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031a5c 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031aa4 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031f78 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031f78 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07031fbc 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07031fbc 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
07031fd0 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07031ff0 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07032168 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0703228c 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
070329c0 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07032a10 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032a10 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032a78 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07032a94 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032a94 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032ae0 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07032bfc 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07032c8c 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07032da4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
07032e2c 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07032e88 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032e88 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07032f00 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032f00 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032f00 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07032f00 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07032f50 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070342a4 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070342a4 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07034438 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
070346ec 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
07034774 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070347b8 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
070347cc 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07034808 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07034970 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070349ac 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07034a10 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07034a34 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07034a5c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034a5c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07034a84 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07034e04 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07035488 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
070354d4 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0703558c 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07035a00 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07035ecc 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07035fc4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
0703604c 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07036088 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070363ac 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07036428 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07036494 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
070364cc 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07036548 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
07036914 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07036b18 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07036bb8 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07036c74 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07036d30 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07036ddc 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07036e68 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07036fe0 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
070370f4 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0703719c 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07037204 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07037294 00000160 T ARM_Disasm::Decode01(unsigned long)
070373f4 00000028 T ARM_Disasm::Decode10(unsigned long)
0703741c 0000007c T ARM_Disasm::Decode11(unsigned long)
07037498 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07037500 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07037550 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07037668 000000c4 T ARM_Disasm::Decode00(unsigned long)
0703772c 00000030 T ARM_Disasm::Decode(unsigned long)
0703775c 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
07037834 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07037b18 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07037e08 00000020 T CTRPluginFramework::Button::~Button()
07037e08 00000020 T CTRPluginFramework::Button::~Button()
07037e28 0000001c T CTRPluginFramework::Button::~Button()
07037e44 00000040 T CTRPluginFramework::Button::operator()()
07037e84 00000148 T CTRPluginFramework::Button::Draw()
07037fcc 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07038120 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038120 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038244 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038244 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07038264 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038264 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070382f8 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070382f8 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703830c 00000018 T CTRPluginFramework::Button::Enable(bool)
07038324 00000010 T CTRPluginFramework::Button::Enable()
07038334 00000010 T CTRPluginFramework::Button::Disable()
07038344 00000010 T CTRPluginFramework::Button::Lock()
07038354 00000010 T CTRPluginFramework::Button::Execute()
07038364 00000018 T CTRPluginFramework::Button::SetState(bool)
0703837c 00000010 T CTRPluginFramework::Button::GetState() const
0703838c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0703838c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070383a0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070383a0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070383c0 00000024 T CTRPluginFramework::UIContainer::Draw()
070383e4 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07038418 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
070384dc 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0703851c 00000094 T CTRPluginFramework::ComboBox::Draw()
070385b0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070385b0 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070385fc 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07038618 000000a8 T CTRPluginFramework::ComboBox::operator()()
070386c0 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070386c0 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703870c 0000003c T CTRPluginFramework::ComboBox::Clear()
07038748 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038798 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703881c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703881c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07038820 00000014 T CTRPluginFramework::FloatingButton::Draw()
07038834 00000014 T CTRPluginFramework::FloatingButton::operator()()
07038848 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703885c 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07038a1c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038a1c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07038a5c 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038a5c 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07038b1c 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07038bb8 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07038c58 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07038c70 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07038ca0 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07038d40 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038d40 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07038df0 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038df0 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07038e9c 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038e9c 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07038f1c 00000040 T CTRPluginFramework::TouchKey::Clear()
07038f5c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038f5c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07038f7c 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07038f98 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07038fa0 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07039000 00000060 T CTRPluginFramework::TouchKey::Draw()
07039060 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070390fc 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070391c0 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070391c0 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07039310 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039310 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07039330 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703934c 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070393c8 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07039400 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07039468 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07039560 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07039570 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07039580 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07039588 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07039594 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07039594 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070395fc 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07039670 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
070396e8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070396e8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07039734 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
070397f4 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703992c 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07039954 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070399b8 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07039cc8 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07039dbc 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703a004 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703a330 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
0703a3b8 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
0703a450 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703a4cc 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703a580 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703a70c 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703a754 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703a89c 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703a9f4 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
0703aad8 00000030 W std::__cxx11::to_string(unsigned long)
0703ab08 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703ab08 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703abbc 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0703ac40 00000548 T CTRPluginFramework::SearchMenu::Draw()
0703b188 00000230 T CTRPluginFramework::SearchMenu::Update()
0703b3b8 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b8c8 000000e4 T CTRPluginFramework::Converter::Converter()
0703b8c8 000000e4 T CTRPluginFramework::Converter::Converter()
0703b9ac 00000010 T CTRPluginFramework::Converter::Instance()
0703b9bc 00000108 T CTRPluginFramework::Converter::_Draw()
0703bac4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bac4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0703bad8 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
0703bcf4 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c178 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c600 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ca7c 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d0a4 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d9b0 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e2c0 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703eb94 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f7d4 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040078 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070409b4 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070412d8 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042074 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042cd8 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704341c 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043824 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043f04 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044194 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704443c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070446cc 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07044700 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07044a24 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07044a48 00000004 t addrMapNodeDestructor(rbtree_node*)
07044a4c 000000d8 T mappableAlloc
07044b24 00000050 T mappableFree
07044b74 00000090 T __system_allocateHeaps
07044c04 0000005c t getSysTime
07044c60 000000fc T __libctru_gtod
07044d5c 00000008 T envGetHandle
07044d64 00000004 T envDestroyHandles
07044d68 00000020 T __libctru_exit
07044d88 00000020 T __appExit
07044da8 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044da8 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07044dd4 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044dd4 00000018 T CTRPluginFramework::LineReader::~LineReader()
07044dec 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07044ef4 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
07044f54 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07044f5c 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07044f80 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07044fa4 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07044fc8 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07044ff0 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07045018 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07045040 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07045110 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07046f84 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07046ff4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07047014 00000008 T __cxa_pure_virtual
0704701c 00000010 T __aeabi_atexit
0704702c 00000004 T operator new[](unsigned int)
07047030 00000058 T operator new(unsigned int)
07047088 00000034 T __cxxabiv1::__terminate(void (*)())
070470bc 00000018 T std::terminate()
070470d4 0000000c T __cxxabiv1::__unexpected(void (*)())
070470e0 00000018 T std::unexpected()
070470f8 00000014 T std::get_terminate()
0704710c 00000014 T std::get_unexpected()
07047120 0000000c T std::bad_alloc::what() const
0704712c 00000020 T std::bad_alloc::~bad_alloc()
0704712c 00000020 T std::bad_alloc::~bad_alloc()
0704714c 0000002c T std::bad_alloc::~bad_alloc()
07047178 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
070472e0 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07047348 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07047420 000006f4 T __gxx_personality_v0
07047b14 00000004 T operator delete[](void*)
07047b18 00000014 T std::get_new_handler()
07047b2c 0000005c T __cxa_guard_acquire
07047b88 0000000c T __cxa_guard_release
07047b94 00000004 T std::exception::~exception()
07047b94 00000004 T std::exception::~exception()
07047b98 00000004 T std::bad_exception::~bad_exception()
07047b98 00000004 T std::bad_exception::~bad_exception()
07047b9c 0000000c T transaction clone for std::exception::what() const
07047b9c 0000000c T std::exception::what() const
07047ba8 0000000c T transaction clone for std::bad_exception::what() const
07047ba8 0000000c T std::bad_exception::what() const
07047bb4 00000018 T std::bad_exception::~bad_exception()
07047bcc 00000004 T operator delete(void*, unsigned int)
07047bd0 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07047c30 00000070 T __cxa_init_primary_exception
07047ca0 00000054 T __cxa_throw
07047cf4 000000b0 T __cxa_rethrow
07047da4 000000cc T __cxa_begin_catch
07047e70 000000e0 T __cxa_end_catch
07047f50 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
0704803c 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
070480f0 00000044 T __cxa_allocate_exception
07048134 00000030 T __cxa_free_exception
07048164 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070481a4 00000004 T operator delete(void*)
070481a8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070481a8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070481c8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070481f4 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07048260 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704833c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07048380 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07048398 00000014 T std::__detail::_List_node_base::_M_unhook()
070483ac 0000002c T std::__throw_bad_alloc()
070483d8 00000040 T std::__throw_logic_error(char const*)
07048418 00000040 T std::__throw_invalid_argument(char const*)
07048458 00000040 T std::__throw_length_error(char const*)
07048498 00000040 T std::__throw_out_of_range(char const*)
070484d8 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
07048554 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
070485a8 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070485bc 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
070485e0 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07048604 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070486bc 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
070487c8 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07048844 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07048844 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070488b0 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
070488b0 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
070488d4 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070489a0 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07048ab0 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07048b20 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07048b8c 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07048bd0 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07048be8 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
07048d0c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07048d44 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07048fcc 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
07049004 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049050 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
070490b0 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07049144 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049154 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049164 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07049190 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
070491d8 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07049220 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
070492c4 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
070492d4 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07049338 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07049368 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
070493b4 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
07049464 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049464 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07049494 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0704950c T __cxa_end_cleanup
0704951c 00000138 T __cxa_type_match
07049654 000000b4 T __cxa_begin_cleanup
07049708 000000b4 T __gnu_end_cleanup
070497bc 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0704982c 0000002c T __cxa_call_terminate
07049858 00000158 T __cxa_call_unexpected
070499b0 0000000c T __cxa_get_globals_fast
070499bc 0000000c T __cxa_get_globals
070499c8 00000004 T std::type_info::~type_info()
070499c8 00000004 T std::type_info::~type_info()
070499cc 00000008 T std::type_info::__is_pointer_p() const
070499cc 00000008 T std::type_info::__is_function_p() const
070499d4 0000004c T std::type_info::operator==(std::type_info const&) const
07049a20 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07049a7c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07049a90 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049a90 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07049ab0 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07049adc 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07049b44 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07049b70 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07049bb4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049bb4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049bd4 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07049c00 00000008 T std::logic_error::what() const
07049c08 00000064 T std::logic_error::~logic_error()
07049c08 00000064 T std::logic_error::~logic_error()
07049c6c 0000001c T std::logic_error::~logic_error()
07049c88 00000020 T std::invalid_argument::~invalid_argument()
07049c88 00000020 T std::invalid_argument::~invalid_argument()
07049ca8 00000028 T std::invalid_argument::~invalid_argument()
07049cd0 00000020 T std::length_error::~length_error()
07049cd0 00000020 T std::length_error::~length_error()
07049cf0 00000028 T std::length_error::~length_error()
07049d18 00000020 T std::out_of_range::~out_of_range()
07049d18 00000020 T std::out_of_range::~out_of_range()
07049d38 00000028 T std::out_of_range::~out_of_range()
07049d60 00000038 T std::logic_error::logic_error(char const*)
07049d60 00000038 T std::logic_error::logic_error(char const*)
07049d98 00000020 T std::invalid_argument::invalid_argument(char const*)
07049d98 00000020 T std::invalid_argument::invalid_argument(char const*)
07049db8 00000020 T std::length_error::length_error(char const*)
07049db8 00000020 T std::length_error::length_error(char const*)
07049dd8 00000020 T std::out_of_range::out_of_range(char const*)
07049dd8 00000020 T std::out_of_range::out_of_range(char const*)
07049df8 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07049e64 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07049ee4 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07049fdc 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0704a060 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
0704a060 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
0704a0d0 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704a0d4 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0704a104 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a104 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704a148 000002bc T log2
0704a404 00000024 t with_errno
0704a428 00000048 T __math_divzero
0704a470 0000001c T __math_invalid
0704a490 0000015c T ceil
0704a5ec 000000b4 T ceilf
0704a6a0 0000016c T floor
0704a80c 00000088 T roundf
0704a898 00000108 T sqrtf
0704a9a0 00000008 T __ieee754_sqrtf
0704a9a8 00000008 T matherr
0704a9b0 0000002c T __aeabi_f2lz
0704a9b0 0000002c T __fixsfdi
0704a9dc 0000002c T __aeabi_d2lz
0704a9dc 0000002c T __fixdfdi
0704aa08 00000040 T __aeabi_f2ulz
0704aa08 00000040 T __fixunssfdi
0704aa48 00000040 T __aeabi_d2ulz
0704aa48 00000040 T __fixunsdfdi
0704aa88 00000128 T __udivmoddi4
0704abb0 00000018 t selfrel_offset31
0704abc8 00000094 t search_EIT_table
0704ac5c 00000040 t __gnu_unwind_get_pr_addr
0704ac9c 0000011c t get_eit_entry
0704adb8 00000088 t restore_non_core_regs
0704ae40 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
0704ae54 00000004 t _Unwind_DebugHook
0704ae58 00000064 t unwind_phase2
0704aebc 0000014c t unwind_phase2_forced
0704b008 000000a4 T __gnu_Unwind_RaiseException
0704b0ac 00000024 T __gnu_Unwind_ForcedUnwind
0704b0d0 00000074 T __gnu_Unwind_Resume
0704b144 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704b164 00000004 T _Unwind_Complete
0704b168 00000018 T _Unwind_DeleteException
0704b180 00000054 T _Unwind_VRS_Get
0704b1d4 0000002c t _Unwind_GetGR
0704b200 00000054 T _Unwind_VRS_Set
0704b254 0000002c t _Unwind_SetGR
0704b280 000000c0 T __gnu_Unwind_Backtrace
0704b340 00000448 t __gnu_unwind_pr_common
0704b788 00000008 T __aeabi_unwind_cpp_pr0
0704b790 00000008 W __aeabi_unwind_cpp_pr1
0704b798 00000008 W __aeabi_unwind_cpp_pr2
0704b7a0 000003dc T _Unwind_VRS_Pop
0704bb7c 00000060 t next_unwind_byte
0704bbdc 0000002c t _Unwind_GetGR.constprop.0
0704bc08 00000004 t unwind_UCB_from_context
0704bc0c 000003c8 T __gnu_unwind_execute
0704bfd4 00000048 T __gnu_unwind_frame
0704c01c 00000010 T _Unwind_GetRegionStart
0704c02c 0000001c T _Unwind_GetLanguageSpecificData
0704c048 00000008 T _Unwind_GetDataRelBase
0704c050 00000008 T _Unwind_GetTextRelBase
0704c058 00000010 T ctime
0704c068 00000014 T __cxa_atexit
0704c07c 0000000c T __errno
0704c088 0000007c T __libc_init_array
0704c104 00000018 T isspace
0704c11c 00000018 T isxdigit
0704c134 0000001c T localtime
0704c150 00000378 T localtime_r
0704c4c8 00000020 T memalign
0704c4e8 0000014c T _memalign_r
0704c634 00000018 T malloc
0704c64c 00000018 T free
0704c664 000007d8 T _malloc_r
0704ce3c 00000100 T memchr
0704cf3c 000000fc T memcmp
0704d038 00000118 T memcpy
0704d150 00000154 T memmove
0704d2a4 00000114 T memset
0704d3b8 0000000c T __malloc_lock
0704d3c4 0000000c T __malloc_unlock
0704d3d0 000000d4 T snprintf
0704d4a4 00000064 T sprintf
0704d508 00000008 T __seofread
0704d510 00000154 t iso_year_adjust
0704d664 00001138 t __strftime
0704e79c 00000020 T strftime
0704e7bc 0000005c T strlen
0704e818 0000010c T strncmp
0704e924 000000e0 T strncpy
0704ea04 00000054 t sulp
0704ea58 000013c4 T _strtod_l
0704fe20 000000bc T strtof
0704fee0 0000025c t _strtoull_l.isra.0
0705013c 00000004 T _strtoull_r
07050140 000001d0 t _strtoul_l.isra.0
07050310 00000004 T _strtoul_r
07050314 00000028 T strtoul
0705033c 00000620 t get_arg
07050960 000035c0 T _svfprintf_r
07053f20 0000003c T time
07053f5c 00000224 T __tzcalc_limits
07054180 0000000c T __tz_lock
0705418c 0000000c T __tz_unlock
07054198 00000010 T _tzset_unlocked
070541a8 0000046c T _tzset_unlocked_r
07054614 000000a4 T _vsnprintf_r
070546b8 00000038 T vsnprintf
070546f0 00000054 T _wcrtomb_r
07054744 00000020 T _wcsrtombs_r
07054764 0000000c T abs
07054770 0000001c T asctime
0705478c 00000078 T asctime_r
07054804 000000b0 T __register_exitproc
070548b4 000001c8 t quorem
07054a80 000012ec T _dtoa_r
07055d6c 000000f8 T _malloc_trim_r
07055e64 000002e4 T _free_r
07056148 000000ec t rshift
07056234 00000828 T __gethex
07056a5c 00000060 T __match
07056abc 00000254 T __hexnan
07056d10 000000c8 T _findenv_r
07056dd8 00000018 T _getenv_r
07056df0 0000000c T __gettzinfo
07056dfc 0000027c T gmtime_r
07057078 0000000c T labs
07057084 0000000c T _localeconv_r
07057090 00000010 T __locale_mb_cur_max
070570a0 000002fc T __utf8_mbtowc
0705739c 00000088 T _Balloc
07057424 0000001c T _Bfree
07057440 000000e0 T __multadd
07057520 000000e4 T __s2b
07057604 00000058 T __hi0bits
0705765c 0000009c T __lo0bits
070576f8 00000020 T __i2b
07057718 000001c4 T __multiply
070578dc 00000100 T __pow5mult
070579dc 000000f4 T __lshift
07057ad0 0000005c T __mcmp
07057b2c 00000168 T __mdiff
07057c94 00000074 T __ulp
07057d08 000000d4 T __b2d
07057ddc 00000100 T __d2b
07057edc 00000084 T __ratio
07057f60 0000006c T __copybits
07057fcc 00000078 T __any_on
07058044 0000000c T nanf
07058050 000000a8 T frexp
070580f8 00000064 T siprintf
0705815c 00000074 T siscanf
070581d0 00000010 T nan
070581e0 000000d4 T sniprintf
070582b4 000000f0 T strcpy
070583a4 000001bc t _strtol_l.isra.0
07058560 00000004 T _strtol_r
07058564 00000620 t get_arg
07058b84 00000188 T __ssprint_r
07058d0c 0000248c T _svfiprintf_r
0705b198 00000048 t get_arg
0705b1e0 000000e4 T _sungetc_r
0705b2c4 0000006c T __ssrefill_r
0705b330 000000c8 T _sfread_r
0705b3f8 00002234 T __ssvfiscanf_r
0705d62c 000000a4 T __submore
0705d6d0 00000184 T _wcsnrtombs_l
0705d854 0000004c T _wcsnrtombs_r
0705d8a0 000000e8 T __utf8_wctomb
0705d988 00000094 T _calloc_r
0705da1c 0000000c T __env_lock
0705da28 0000000c T __env_unlock
0705da34 00000008 T iswspace
0705da3c 00000060 T _mbrtowc_r
0705da9c 00000020 T realloc
0705dabc 000004bc T _realloc_r
0705df78 000000cc T __sccl
0705e044 0000025c t _strtoll_l.isra.0
0705e2a0 00000004 T _strtoll_r
0705e2a4 0000003c T iswspace_l
0705e2e0 000001e0 t __jp2uc
0705e4c0 00000094 T _jp2uc_l
0705e554 00000084 T category
0705e5d8 0000002c T _gettimeofday_r
0705e604 00000070 T _sbrk_r
0705e674 00000018 T __libc_lock_acquire
0705e68c 00000018 T __libc_lock_release
0705e6a4 00000018 T __libc_lock_acquire_recursive
0705e6bc 00000018 T __libc_lock_release_recursive
0705e6d4 00000028 T __getreent
0705e6fc T _fini
0705e714 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
0705e8fc 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0705e908 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
0705e91c 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
0705e938 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::units
0705e948 00000030 r ._190
0705e978 00000090 r ._188
0705ea08 00000010 r ._189
0705ea18 00000010 r CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::multiplications
0705ea64 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705ea84 00000a00 r font
0705f484 0000001c R vtable for CTRPluginFramework::TextBox
0705f4c0 00000058 r CTRPluginFramework::g_OSDPattern
0705f548 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705f55c 00000038 r CTRPluginFramework::stable
0705f594 00000038 r CTRPluginFramework::ktable
0705f5cc 00000048 r CTRPluginFramework::g_ctrpf
0705f614 00000030 r CTRPluginFramework::g_byme
0705f670 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705f688 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705f6a0 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705f6b8 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705f6d0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705f6d8 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705f6f4 00000038 R vtable for CTRPluginFramework::Search
0705f72c 00000038 R vtable for CTRPluginFramework::Search32
0705f764 00000005 r CSWTCH.74
0705f76c 00000004 R Search15_array_length
0705f770 00000384 r Search15_array
0705faf4 00000004 R UnCheckedCheckbox_array_length
0705faf8 00000384 r UnCheckedCheckbox_array
0705fe7c 00000004 R Unsplash15_array_length
0705fe80 00000384 r Unsplash15_array
07060204 00000004 R Plus25_array_length
07060208 000009c4 r Plus25_array
07060bcc 00000004 R GameControllerFilled25_array_length
07060bd0 000009c4 r GameControllerFilled25_array
07061594 00000004 R About15_array_length
07061598 00000384 r About15_array
0706191c 00000004 R Trash25_array_length
07061920 000009c4 r Trash25_array
070622e4 00000004 R Cut25_array_length
070622e8 000009c4 r Cut25_array
07062cac 00000004 R CloseWindow20_array_length
07062cb0 00000640 r CloseWindow20_array
070632f0 00000004 R AddFavoriteFilled25_array_length
070632f4 000009c4 r AddFavoriteFilled25_array
07063cb8 00000004 R ClearSymbolFilled15_array_length
07063cbc 00000384 r ClearSymbolFilled15_array
07064040 00000004 R ClipboardFilled25_array_length
07064044 000009c4 r ClipboardFilled25_array
07064a08 00000004 R CheckedCheckbox_array_length
07064a0c 00000384 r CheckedCheckbox_array
07064d90 00000004 R CutFilled25_array_length
07064d94 000009c4 r CutFilled25_array
07065758 00000004 R CapsLockOn15_array_length
0706575c 00000384 r CapsLockOn15_array
07065ae0 00000004 R TrashFilled25_array_length
07065ae4 000009c4 r TrashFilled25_array
070664a8 00000004 R RAM15_array_length
070664ac 00000384 r RAM15_array
07066830 00000004 R More15_array_length
07066834 00000384 r More15_array
07066bb8 00000004 R InfoFilled25_array_length
07066bbc 000009c4 r InfoFilled25_array
07067580 00000004 R CloseWindowFilled20_array_length
07067584 00000640 r CloseWindowFilled20_array
07067bc4 00000004 R HandCursor15_array_length
07067bc8 00000384 r HandCursor15_array
07067f4c 00000004 R EnterKey15_array_length
07067f50 00000384 r EnterKey15_array
070682d4 00000004 R Duplicate25_array_length
070682d8 000009c4 r Duplicate25_array
07068c9c 00000004 R Settings15_array_length
07068ca0 00000384 r Settings15_array
07069024 00000004 R File15_array_length
07069028 00000384 r File15_array
070693ac 00000004 R AddFavorite25_array_length
070693b0 000009c4 r AddFavorite25_array
07069d74 00000004 R Edit25_array_length
07069d78 000009c4 r Edit25_array
0706a73c 00000004 R DuplicateFilled25_array_length
0706a740 000009c4 r DuplicateFilled25_array
0706b104 00000004 R Save25_array_length
0706b108 000009c4 r Save25_array
0706bacc 00000004 R Clipboard25_array_length
0706bad0 000009c4 r Clipboard25_array
0706c494 00000004 R Info25_array_length
0706c498 000009c4 r Info25_array
0706ce5c 00000004 R EditFilled25_array_length
0706ce60 000009c4 r EditFilled25_array
0706d824 00000004 R KeyboardFilled25_array_length
0706d828 000009c4 r KeyboardFilled25_array
0706e1ec 00000004 R PlusFilled25_array_length
0706e1f0 000009c4 r PlusFilled25_array
0706ebb4 00000004 R Shutdown15_array_length
0706ebb8 00000384 r Shutdown15_array
0706ef3c 00000004 R ClearSymbol15_array_length
0706ef40 00000384 r ClearSymbol15_array
0706f2c4 00000004 R Maintenance15_array_length
0706f2c8 00000384 r Maintenance15_array
0706f64c 00000004 R Controller15_array_length
0706f650 00000384 r Controller15_array
0706f9d4 00000004 R Grid15_array_length
0706f9d8 00000384 r Grid15_array
0706fd5c 00000004 R Keyboard25_array_length
0706fd60 000009c4 r Keyboard25_array
07070724 00000004 R CapsLockOnFilled15_array_length
07070728 00000384 r CapsLockOnFilled15_array
07070aac 00000004 R UserManualFilled15_array_length
07070ab0 00000384 r UserManualFilled15_array
07070e34 00000004 R Rocket40_array_length
07070e38 00001900 r Rocket40_array
07072738 00000004 R Star15_array_length
0707273c 00000384 r Star15_array
07072ac0 00000004 R EnterKeyFilled15_array_length
07072ac4 00000384 r EnterKeyFilled15_array
07072e48 00000004 R GameController25_array_length
07072e4c 000009c4 r GameController25_array
07073810 00000004 R FolderFilled_array_length
07073814 00000384 r FolderFilled_array
07073b98 00000004 R Restart15_array_length
07073b9c 00000384 r Restart15_array
07073f50 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07073f6c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07073f78 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07073ff8 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0707400c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07074014 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0707401c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07074024 00000040 r RegNames
07074064 00000040 r cond_names
070740a4 00000010 r shift_names
070740b4 0000001c R vtable for CTRPluginFramework::Button
070740d0 0000001c R vtable for CTRPluginFramework::ComboBox
070740ec 0000001c R vtable for CTRPluginFramework::FloatingButton
07074108 0000001c R vtable for CTRPluginFramework::TouchKey
07074124 0000001c R vtable for CTRPluginFramework::NumericTextBox
07076624 00000014 V vtable for CTRPluginFramework::MenuItem
07076cfc 0000001c V vtable for CTRPluginFramework::MenuEntryTools
070780bc 0000000c R typeinfo for std::bad_alloc
070780c8 0000000d R typeinfo name for std::bad_alloc
070780d8 00000014 R vtable for std::bad_alloc
07078110 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07078118 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07078120 0000000c R typeinfo for std::bad_exception
0707812c 00000008 R typeinfo for std::exception
07078134 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07078154 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07078178 00000012 R typeinfo name for std::bad_exception
0707818c 0000000d R typeinfo name for std::exception
0707819c 00000014 R vtable for std::bad_exception
070781b0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070781bc 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070781e4 0000002c R vtable for __cxxabiv1::__si_class_type_info
07078340 00000008 R typeinfo for std::type_info
07078348 0000000d R typeinfo name for std::type_info
07078358 0000000c R typeinfo for __cxxabiv1::__class_type_info
07078364 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07078388 0000002c R vtable for __cxxabiv1::__class_type_info
070783b4 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070783c0 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
070783e4 00000014 R vtable for __gnu_cxx::recursive_init_error
070783f8 0000000c R typeinfo for std::logic_error
07078404 0000000c R typeinfo for std::length_error
07078410 0000000c R typeinfo for std::out_of_range
0707841c 0000000c R typeinfo for std::invalid_argument
07078428 00000010 R typeinfo name for std::logic_error
07078438 00000011 R typeinfo name for std::length_error
0707844c 00000011 R typeinfo name for std::out_of_range
07078460 00000015 R typeinfo name for std::invalid_argument
07078478 00000014 R vtable for std::logic_error
0707848c 00000014 R vtable for std::length_error
070784a0 00000014 R vtable for std::out_of_range
070784b4 00000014 R vtable for std::invalid_argument
07078590 00000890 R __log2_data
07078e20 00000004 R _global_impure_ptr
07078e24 00000060 R __month_lengths
07078f10 00000014 r fpi.7554
07078f24 00000014 r fpinan.7590
07078f38 00000028 r tinytens
07078f9c 00000010 r blanks.8740
07078fac 00000010 r zeroes.8741
07078fbc 000000fc R _C_time_locale
07079284 00000015 r day_name.6253
0707929c 00000024 r mon_name.6254
070792c0 00000101 R _ctype_
070793d8 00000100 R __hexdig
070794d8 0000000c R _C_numeric_locale
07079530 00000028 R __mprec_bigtens
07079558 000000c8 R __mprec_tens
07079620 0000000c r p05.7474
0707962c 0000006c R __action_table
07079698 00000100 R __chclass
07079798 0000006c R __state_table
07079804 00000010 r blanks.8719
07079814 00000010 r zeroes.8720
07079824 00000022 r basefix.8286
0707985c 000000bc r a1
07079918 000000bc r a2
070799d4 0000005b r a3
07079a30 00000070 r a6
07079aa0 000000a2 r a7
07079b44 00000040 r a8
07079b84 0000172a r b02cf
0707b2b0 00001a7c r d02f4
0707cd2c 0000309c r categories
0707fedc R __exidx_start
07080194 R __exidx_end
07080194 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
07080198 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
0708019c 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
070801a0 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
070801a4 00000001 D CTRPluginFramework::g_keepRunning
070801a8 00000004 D CTRPluginFramework::FwkSettings::Header
070801ac 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070801b0 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070801b4 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
070801b8 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
070801bc 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070801c0 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070801c4 00000004 D CTRPluginFramework::Screenshot::Screens
070801c8 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070801cc 00000001 D CTRPluginFramework::SystemImpl::Language
070801cd 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
070801d0 00000004 D Search15
070801d4 00000004 D UnCheckedCheckbox
070801d8 00000004 D Unsplash15
070801dc 00000004 D Plus25
070801e0 00000004 D GameControllerFilled25
070801e4 00000004 D About15
070801e8 00000004 D Trash25
070801ec 00000004 D Cut25
070801f0 00000004 D CloseWindow20
070801f4 00000004 D AddFavoriteFilled25
070801f8 00000004 D ClearSymbolFilled15
070801fc 00000004 D ClipboardFilled25
07080200 00000004 D CheckedCheckbox
07080204 00000004 D CutFilled25
07080208 00000004 D CapsLockOn15
0708020c 00000004 D TrashFilled25
07080210 00000004 D RAM15
07080214 00000004 D More15
07080218 00000004 D InfoFilled25
0708021c 00000004 D CloseWindowFilled20
07080220 00000004 D HandCursor15
07080224 00000004 D EnterKey15
07080228 00000004 D Duplicate25
0708022c 00000004 D Settings15
07080230 00000004 D File15
07080234 00000004 D AddFavorite25
07080238 00000004 D Edit25
0708023c 00000004 D DuplicateFilled25
07080240 00000004 D Save25
07080244 00000004 D Clipboard25
07080248 00000004 D Info25
0708024c 00000004 D EditFilled25
07080250 00000004 D KeyboardFilled25
07080254 00000004 D PlusFilled25
07080258 00000004 D Shutdown15
0708025c 00000004 D ClearSymbol15
07080260 00000004 D Maintenance15
07080264 00000004 D Controller15
07080268 00000004 D Grid15
0708026c 00000004 D Keyboard25
07080270 00000004 D CapsLockOnFilled15
07080274 00000004 D UserManualFilled15
07080278 00000004 D Rocket40
0708027c 00000004 D Star15
07080280 00000004 D EnterKeyFilled15
07080284 00000004 D GameController25
07080288 00000004 D FolderFilled
0708028c 00000004 D Restart15
07080290 000001f4 D opcode_names
07080484 D __dso_handle
07080488 00000004 D __cxxabiv1::__terminate_handler
0708048c 00000004 D __cxxabiv1::__unexpected_handler
07080490 00000001 D __fdlib_version
07080494 00000004 D _impure_ptr
07080498 00000460 d impure_data
070808f8 00000408 D __malloc_av_
07080d00 00000004 D __malloc_sbrk_base
07080d04 00000004 D __malloc_trim_threshold
07080d08 0000000c d __malloc_recursive_mutex
07080d14 00000004 d __tz_mutex
07080d18 00000008 D _tzname
07080d20 0000000c D __atexit_recursive_mutex
07080d30 00000058 d tzinfo
07080d88 00000002 d numempty
07080d8c 0000016c D __global_locale
07080ef8 00000004 D environ
07080efc 0000000c d __env_recursive_mutex
07080f08 D __TMC_END__
07080f18 d _GLOBAL_OFFSET_TABLE_
07080f24 D __tdata_lma
07080f30 t __frame_dummy_init_array_entry
07080f30 T __init_array_start
07080f30 B __preinit_array_end
07080f30 B __preinit_array_start
07080f30 D __tdata_lma_end
07080f88 t __do_global_dtors_aux_fini_array_entry
07080f88 T __init_array_end
07080f8c B __c_bss_start
07080f8c 00000004 B CTRPluginFramework::offset
07080f90 000000b4 b CTRPluginFramework::original_speed
07081044 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::base
07081048 00000004 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::choice
0708104c 00000004 B CTRPluginFramework::data
07081050 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
07081054 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
07081058 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0708105c 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0708105d 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0708105e 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
07081060 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::cpuPointer
07081064 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
07081068 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
07081069 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
0708106a 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0708106b 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0708106c 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0708106d 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
07081070 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
07081074 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
07081078 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0708107c 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0708107e 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
07081080 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
07081084 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
07081088 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708108c 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07081090 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708109c 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
070810a0 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::g_items
070810ac 00000004 b guard variable for CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070810b0 0000000c b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::items
070810bc 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
070810c0 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speed
070810cc 00000004 b guard variable for CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
070810d0 0000000c b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::speeds
070810dc 00000001 b CTRPluginFramework::spedometer(CTRPluginFramework::MenuEntry*)::keyboardDone
070810e0 00000004 b g_onLoadCroLock
070810e4 00000004 B g_mainThread
070810e8 00000004 B CTRPluginFramework::g_keepEvent
070810ec 00000004 B CTRPluginFramework::g_continueGameEvent
070810f0 0000005c b CTRPluginFramework::exception_data
0708114c 00000004 B CTRPluginFramework::g_keepThreadHandle
07081150 00000018 b g_onLoadCroHook
07081168 00000008 B CTRPluginFramework::_sdmcArchive
07081170 00000004 B g_gspEventThreadPriority
07081174 00000004 B CTRPluginFramework::g_resumeEvent
07081178 00001000 b CTRPluginFramework::keepThreadStack
07082178 00000004 B __ctru_heap_size
0708217c 00000004 B CTRPluginFramework::Color::Black
07082180 00000004 B CTRPluginFramework::Color::White
07082184 00000004 B CTRPluginFramework::Color::Red
07082188 00000004 B CTRPluginFramework::Color::Lime
0708218c 00000004 B CTRPluginFramework::Color::Blue
07082190 00000004 B CTRPluginFramework::Color::Yellow
07082194 00000004 B CTRPluginFramework::Color::Cyan
07082198 00000004 B CTRPluginFramework::Color::Magenta
0708219c 00000004 B CTRPluginFramework::Color::Silver
070821a0 00000004 B CTRPluginFramework::Color::Gray
070821a4 00000004 B CTRPluginFramework::Color::Maroon
070821a8 00000004 B CTRPluginFramework::Color::Olive
070821ac 00000004 B CTRPluginFramework::Color::Green
070821b0 00000004 B CTRPluginFramework::Color::Purple
070821b4 00000004 B CTRPluginFramework::Color::Teal
070821b8 00000004 B CTRPluginFramework::Color::Navy
070821bc 00000004 B CTRPluginFramework::Color::BlackGrey
070821c0 00000004 B CTRPluginFramework::Color::Brown
070821c4 00000004 B CTRPluginFramework::Color::DarkGrey
070821c8 00000004 B CTRPluginFramework::Color::DeepSkyBlue
070821cc 00000004 B CTRPluginFramework::Color::DimGrey
070821d0 00000004 B CTRPluginFramework::Color::DodgerBlue
070821d4 00000004 B CTRPluginFramework::Color::Gainsboro
070821d8 00000004 B CTRPluginFramework::Color::ForestGreen
070821dc 00000004 B CTRPluginFramework::Color::LimeGreen
070821e0 00000004 B CTRPluginFramework::Color::Orange
070821e4 00000004 B CTRPluginFramework::Color::SkyBlue
070821e8 00000004 B CTRPluginFramework::Color::Turquoise
070821ec 00000004 b CTRPluginFramework::g_runningInstance
070821f0 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070821f8 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082200 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082208 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708220c 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708220e 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07082210 00000180 b CTRPluginFramework::g_keyName
07082390 00000004 B CTRPluginFramework::__fileHandle
07082398 00000008 B CTRPluginFramework::Time::Zero
070823a0 00000004 B CTRPluginFramework::System::OnAbort
070823a4 00000004 B CTRPluginFramework::Controller::_keysDown
070823a8 00000004 B CTRPluginFramework::Controller::_keysHeld
070823ac 00000004 B CTRPluginFramework::Controller::_keysReleased
070823b0 000009c4 b CTRPluginFramework::g_rng
07082d78 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
07082d7c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07082d80 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07082d84 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
07082d85 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
07082d86 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
07082d87 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
07082d88 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
07082d89 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
07082d8a 00000001 B CTRPluginFramework::Preferences::ShowTopFps
07082d8b 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
07082d8c 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07082d8d 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07082d90 00000070 B CTRPluginFramework::Preferences::Settings
07082e00 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07082e18 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07082e30 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07082e48 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
07082e49 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
07082e4a 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
07082e4c 00000004 b CTRPluginFramework::defaultSysFont
07082e50 00000004 B CTRPluginFramework::g_fontAllocated
07082e54 00000004 b CTRPluginFramework::tileData
07082e58 00000004 b CTRPluginFramework::glyph
07082e5c 0000000c B CTRPluginFramework::Font::_mutex
07082e68 00000004 B CTRPluginFramework::g_glyphAllocated
07082e6c 00000028 B CTRPluginFramework::Window::BottomWindow
07082e94 00000028 B CTRPluginFramework::Window::TopWindow
07082ebc 00000004 B CTRPluginFramework::RendererPriv::g_customColor
07082ec0 00000008 B CTRPluginFramework::Renderer::hookContext
07082ec8 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07082ecc 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07082ed0 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07082ed4 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07082ee0 0000000c B CTRPluginFramework::OSDImpl::RecLock
07082eec 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
07082ef8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07082f10 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07082f28 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
07082f2c 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
07082f34 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07082f38 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
07082f40 00000018 B CTRPluginFramework::OSDImpl::OSDHook
07082f58 00000010 b CTRPluginFramework::InstallOSD()::returnCode
07082f68 00000004 B CTRPluginFramework::OSDImpl::HookReturn
07082f6c 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
07082f74 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
07082f98 0000000c B CTRPluginFramework::OSDImpl::Callbacks
07082fa4 00000004 b CTRPluginFramework::g_second
07082fa8 00000010 b CTRPluginFramework::g_fpsClock
07082fb8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
07082fbc 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
07082fbd 00000001 B CTRPluginFramework::OSDImpl::MessColors
07082fc0 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
07082fc4 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07082fc8 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07082fd0 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07082ff0 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07082ff8 00000004 b CTRPluginFramework::g_ctrpfString
07082ffc 00000004 b CTRPluginFramework::g_bymeString
07083000 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083008 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07083010 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083018 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07083020 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
07083024 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07083028 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083030 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07083038 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708303c 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07083040 00000004 b CTRPluginFramework::g_mode
07083044 00000004 b CTRPluginFramework::g_OpenFileLock
07083048 00000004 b CTRPluginFramework::g_HookMode
07083050 00000040 b CTRPluginFramework::g_hookExportFile
07083090 00000010 b CTRPluginFramework::g_returncode
070830a0 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
070830b8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070830bc 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070830c0 00000004 b CTRPluginFramework::g_screenshotEntry
070830c4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
070830c8 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
070830cc 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070830d0 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070830d4 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
070830d8 00000010 b CTRPluginFramework::SubMenu::Draw()::background
070830e8 00000004 B CTRPluginFramework::__g_hexEditor
070830ec 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070830f0 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07083100 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
07083104 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07083108 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07083118 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083128 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07083138 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708313c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07083140 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07083144 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07083154 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07083158 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07083168 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708316c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708317c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07083180 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07083188 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07083190 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07083198 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070831a0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070831a8 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070831ac 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070831b8 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
070831c4 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
070831d0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070831d8 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070831e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070831e4 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070831f4 00000004 b CTRPluginFramework::__pmARinstance
070831f8 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070831fc 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07083200 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083210 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083220 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07083224 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07083228 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083230 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07083240 00000004 b CTRPluginFramework::g_radioId
07083244 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
07083248 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0708324c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
07083250 00000004 B CTRPluginFramework::_pool
07083258 00000008 B CTRPluginFramework::Screenshot::_timer
07083260 00000008 B CTRPluginFramework::Screenshot::_readyEvent
07083268 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
07083270 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
07083288 00000004 B CTRPluginFramework::Screenshot::_filecount
0708328c 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070832a4 00000004 B CTRPluginFramework::Screenshot::_display
070832a8 00000004 B CTRPluginFramework::Screenshot::_mode
070832b0 00000008 B CTRPluginFramework::Screenshot::Timer
070832b8 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070832bc 00000004 B CTRPluginFramework::Screenshot::_task
070832c0 00000004 B CTRPluginFramework::Screenshot::_count
070832c4 00000008 b CTRPluginFramework::g_sleepEvent
070832cc 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070832d0 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070832d4 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070832d8 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070832dc 00000004 B CTRPluginFramework::HookManager::instance
070832e0 00000078 B CTRPluginFramework::Scheduler::_singleton
07083358 00000040 b CTRPluginFramework::_topBuf
07083398 00000004 B CTRPluginFramework::ScreenImpl::Top
0708339c 00000040 b CTRPluginFramework::_botBuf
070833dc 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070833e0 0000000c b CTRPluginFramework::Heap::_mutex
070833ec 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
070833f0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
070833f4 00000008 b CTRPluginFramework::Heap::g_heapPool
070833fc 0000000c b sAddrMap
07083408 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07083420 0000000c B CTRPluginFramework::FSPath::FSMutex
07083430 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
07083434 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
07083498 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708349c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070834a0 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070834a8 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070834ac 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070834b0 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070834bc 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
070834c8 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
070834d8 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
070834da 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
070834e0 0000000c b _mutex
070834ec 00000008 b sVramPool
070834f4 0000000c b sAddrMap
07083500 00000004 b srvRefCount
07083504 00000004 b srv2Handle
07083508 00000004 b errfRefCount
0708350c 00000004 b errfHandle
07083510 00000004 b sharedFontAddr
07083514 00000004 b arbiter
07083518 00000004 b cfguRefCount
0708351c 00000004 b cfguHandle
07083520 00000004 b fsuHandle
07083528 00000080 b fsExemptArchives
070835a8 00000004 b fsuRefCount
070835ac 00000001 B fs
070835b0 0000000c b aptFirstHook
070835bc 00000004 b serviceName.7785
070835c0 00000004 b aptRefCount
070835c4 0000000c b aptEvents
070835d0 00000008 b aptSleepEvent
070835d8 00000004 b aptEventHandlerThread
070835dc 00000004 b aptMessageFunc
070835e0 00000004 b aptMessageFuncData
070835e4 00000001 b aptHomeButtonState
070835e5 00000001 b flagInit.8135
070835e6 00000001 b flagValue.8136
070835e8 00001000 b aptParameters
070845e8 00001000 b __stack
070855e8 00000004 b amRefCount
070855ec 00000004 b amHandle
070855f0 00000004 b acRefCount
070855f4 00000004 b acHandle
070855f8 00000004 b hidRefCount
070855fc 00000004 b kOld
07085600 00000004 b kHeld
07085604 00000004 b cPos
07085608 00000004 b tPos
0708560c 00000006 b aVec
07085612 00000006 b gRate
07085618 00000004 b kDown
0708561c 00000004 b kUp
07085620 00000004 b gspEventData
07085624 00000038 b gspEvents
0708565c 0000001c b gspEventCounts
07085678 00000001 b gspRunEvents
0708567c 00000004 b gspRefCount
07085680 00000004 b gfxSharedMemory
07085684 00000001 b gfxThreadID
07085688 00000004 b irrstRefCount
0708568c 00000004 b kHeld
07085690 00000004 b csPos
07085694 00000004 b g_mainThreadVars
07085698 b saved_stack
070856a0 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070856a4 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070856bc 0000000c B CTRPluginFramework::g_codeTypes
070856c8 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070856cc 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070856d8 00000001 b CTRPluginFramework::g_condAgainstData
070856d9 00000001 b CTRPluginFramework::g_newCondDataToggle
070856dc 00000004 b CTRPluginFramework::__arCodeEditor
070856e0 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070856e4 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070856f0 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070856f8 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085700 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07085708 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085710 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07085720 00000001 b CTRPluginFramework::g_progressLoop
07085728 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085730 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07085738 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085740 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07085748 00000004 b CTRPluginFramework::__converter
0708574c 00000008 b sMappablePool
07085754 0000000c b sAddrMap
07085760 00000004 B CTRPluginFramework::ARHandler::ActiveData
07085764 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
07085768 00000008 B CTRPluginFramework::ARHandler::Offset
07085770 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
07085774 00000010 B CTRPluginFramework::ARHandler::Data
07085784 00000008 B CTRPluginFramework::ARHandler::Storage
0708578c 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
07085790 00000001 b CTRPluginFramework::ToggleFloat
07085794 00000004 b CTRPluginFramework::g_context
07085798 00000fa0 b CTRPluginFramework::arStack
07086738 b completed.10351
0708673c b object.10356
07086754 00000004 b (anonymous namespace)::__new_handler
07086758 00000010 b (anonymous namespace)::emergency_pool
07086768 0000000c b eh_globals
07086774 00000010 V std::string::_Rep::_S_empty_rep_storage
07086784 00000028 B __malloc_current_mallinfo
070867ac 00000004 B __malloc_max_sbrked_mem
070867b0 00000004 B __malloc_max_total_mem
070867b4 00000004 B __malloc_top_pad
070867b8 0000000b b __tzname_dst
070867c4 0000000b b __tzname_std
070867d0 00000004 b prev_tzenv
070867d4 00000004 B _daylight
070867d8 00000004 B _timezone
070867dc 00000004 b initial_env
070867e0 00000004 b heap_start.7414
070867e4 00000004 B fake_heap_end
070867e8 00000004 B fake_heap_start
070867ec 00000048 B __syscalls
07086834 00000004 B g_sharedFont
07086838 00000004 B charPerSheet
0708683c 00000004 B hidMemHandle
07086840 00000004 B hidHandle
07086844 00000014 B hidEvents
07086858 00000004 B hidSharedMem
0708685c 00000004 B gspEventThread
07086860 00000004 B gspEvent
07086864 00000004 B gspGpuHandle
07086868 00000004 B gspSharedMemHandle
0708686c 00000004 B gspThreadEventHandle
07086870 00000004 B irrstMemHandle
07086874 00000004 B irrstEvent
07086878 00000004 B irrstHandle
0708687c 00000004 B irrstSharedMem
07086880 00000004 B __ctru_linear_heap
07086884 00000004 B __tmp
07086888 00000004 B __ctru_linear_heap_size
0708688c 00000004 B __system_retAddr
07086890 00000004 B __ctru_heap
07086894 B __c_bss_end
07086894 B __tls_start
070868b4 A __end__
070868b4 B __tls_end
