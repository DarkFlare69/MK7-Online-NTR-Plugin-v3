         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 000000b0 t CTRPluginFramework::GetRacePointer() [clone .part.7]
001010b8 0000003c t CTRPluginFramework::GetFNsPointer() [clone .part.8]
001010f4 00000068 t CTRPluginFramework::GetOldPointer5CC() [clone .part.9]
0010115c 00000064 t CTRPluginFramework::GetOldPointer5D0() [clone .part.10]
001011c0 00000090 t CTRPluginFramework::GetItemPointer() [clone .part.11]
00101250 0000008c T CTRPluginFramework::IsInRace()
001012dc 000000ac T CTRPluginFramework::GetTotalPlayers()
00101388 00000074 T CTRPluginFramework::GetTime()
001013fc 00000114 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
00101510 000000b4 T CTRPluginFramework::SubToTime(unsigned short)
001015c4 00000070 T CTRPluginFramework::writeItem(unsigned long)
00101634 000000c4 T CTRPluginFramework::writeSpeed(unsigned long)
001016f8 00000048 T CTRPluginFramework::writeVR(unsigned long)
00101740 0000004c T CTRPluginFramework::writeLocation(unsigned long)
0010178c 00000064 T CTRPluginFramework::writeFlag(unsigned short)
001017f0 00000040 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
00101830 00000040 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
00101870 0000003c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
001018ac 00000040 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
001018ec 0000003c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
00101928 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
0010192c 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
00101954 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
00101968 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
0010197c 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
001019e4 0000004c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
00101a30 000000b4 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
00101ae4 000000a4 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
00101b88 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
00101bdc 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
00101c50 000000f4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
00101d44 000002dc T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
00102020 000000dc T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
001020fc 000002c0 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
001023bc 00000198 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
00102554 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
00102564 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
00102574 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
00102584 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
00102594 0000005c T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
001025f0 0000004c T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
0010263c 00000084 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
001026c0 00000070 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
00102730 00000144 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
00102874 00000118 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
0010298c 00000030 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
001029bc 00000194 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
00102b50 00000110 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
00102c60 000000ac T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
00102d0c 000000b4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
00102dc0 0000005c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
00102e1c 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
00102e28 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
00102e34 00000118 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
00102f4c 00000480 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
001033cc 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
00103430 0000012c T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
0010355c 0000011c T CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)
00103678 000000ec T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
00103764 0000010c T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
00103870 00000088 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
001038f8 000000b4 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
001039ac 00000048 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
001039f4 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
00103a50 0000020c T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
00103c5c 000000d0 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
00103d2c 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
00103dcc 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
00103dd0 00001a88 T CTRPluginFramework::main()
00105858 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00105858 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00105888 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00105888 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00105928 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
00105928 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
001059d8 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
001059d8 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00105aa4 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105d4c 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
00105d80 00000424 T CTRPluginFramework::KeepThreadMain(void*)
001061a4 00000038 T onLoadCro
001061dc 00000164 T CTRPluginFramework::Initialize()
00106340 00000098 T CTRPluginFramework::ThreadExit()
001063d8 00000060 T abort
00106438 00000024 T CTRPluginFramework::ThreadInit(void*)
0010645c 00000068 T LaunchMainThread
001064c4 0000000c t _GLOBAL__sub_I_g_mainThread
001064d0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001064d0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001064e8 00000020 T CTRPluginFramework::Color::Color(unsigned long)
001064e8 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00106508 00000008 T CTRPluginFramework::Color::ToU32() const
00106510 00000120 T CTRPluginFramework::Color::Fade(double)
00106630 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
00106670 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
001066f0 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
001068c8 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
00106a94 00000068 T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
00106afc 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
00106b7c 00000004 T CTRPluginFramework::OSD::TryLock()
00106b80 00000004 T CTRPluginFramework::OSD::Unlock()
00106b84 000000d8 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
00106c5c 0000007c T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
00106cd8 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00106d9c 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
00106e44 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106e44 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106e94 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00106e94 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00106efc 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00106efc 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00106f28 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
00106f30 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
00106f38 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00106f54 00000028 T CTRPluginFramework::Keyboard::Open() const
00106f7c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
00106ff4 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
001070a4 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
001070f8 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00107160 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
001071fc 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00107288 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
00107330 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00107418 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001074a4 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0010754c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
00107634 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001076c0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
00107768 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
00107850 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107850 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010789c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0010789c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
001078cc 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
001078d4 00000028 t __tcf_0
001078fc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
00107974 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
0010797c 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
001079fc 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
00107a78 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
00107b50 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00107b50 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00107b6c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00107b6c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00107bac 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
00107bbc 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
00107c7c 00000020 T CTRPluginFramework::HotkeyManager::Count()
00107c9c 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
00107dd0 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
00107ef8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107ef8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107f38 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00107f38 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00107f60 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
00107f70 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00107f70 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00107fdc 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
00107ff0 00000038 T CTRPluginFramework::PluginMenu::Run() const
00108028 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
00108030 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
00108040 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
0010804c 00000030 t CTRPluginFramework::GetCurrentTime()
0010807c 00000014 T CTRPluginFramework::Clock::Clock()
0010807c 00000014 T CTRPluginFramework::Clock::Clock()
00108090 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
001080c8 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
001080f8 00000044 T CTRPluginFramework::Clock::Restart()
0010813c 00000014 T CTRPluginFramework::Controller::GetKeysDown()
00108150 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
0010816c 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00108188 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
001081a4 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
001081c0 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
001081ec 0000002c T CTRPluginFramework::Controller::Update()
00108218 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00108288 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
001083b0 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00108434 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
001084b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00108528 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
0010858c 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
0010861c 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108730 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001087a4 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108830 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001088a8 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108920 00000034 T CTRPluginFramework::Directory::Close() const
00108954 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00108a54 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
00108a68 00000008 T CTRPluginFramework::Directory::IsOpen() const
00108a70 0000002c T CTRPluginFramework::Directory::Directory()
00108a70 0000002c T CTRPluginFramework::Directory::Directory()
00108a9c 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00108a9c 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00108ad0 0000002c T CTRPluginFramework::Directory::~Directory()
00108ad0 0000002c T CTRPluginFramework::Directory::~Directory()
00108afc 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
00108bfc 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108c40 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
00108c8c 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
00108e10 0000010c T CTRPluginFramework::Directory::_List() const
00108f1c 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00109084 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
001091e4 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
0010921c 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001092fc 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010935c 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001093e4 0000005c T CTRPluginFramework::File::Close() const
00109440 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0010951c 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
001095cc 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
001096b4 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001096e0 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
00109790 00000008 T CTRPluginFramework::File::Tell() const
00109798 00000010 T CTRPluginFramework::File::Rewind() const
001097a8 00000008 T CTRPluginFramework::File::Flush() const
001097b0 00000044 T CTRPluginFramework::File::GetSize() const
001097f4 00000008 T CTRPluginFramework::File::IsOpen() const
001097fc 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
00109810 00000034 T CTRPluginFramework::File::File()
00109810 00000034 T CTRPluginFramework::File::File()
00109844 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00109844 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00109884 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
00109984 00000010 T CTRPluginFramework::Process::GetHandle()
00109994 00000010 T CTRPluginFramework::Process::GetTitleID()
001099a4 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00109a04 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00109a3c 00000024 T CTRPluginFramework::Process::GetTextSize()
00109a60 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
00109abc 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
00109b30 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
00109bd8 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
00109c90 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
00109d40 0000003c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
00109d7c 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
00109da4 00000020 T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
00109dc4 00000028 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
00109dec 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
00109e2c 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
00109e58 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
00109e7c 00000024 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
00109ea0 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
00109ee8 00000010 T CTRPluginFramework::System::IsNew3DS()
00109ef8 00000010 T CTRPluginFramework::System::IsLoaderNTR()
00109f08 00000014 T CTRPluginFramework::Time::Time()
00109f08 00000014 T CTRPluginFramework::Time::Time()
00109f1c 00000020 T CTRPluginFramework::Time::AsSeconds() const
00109f3c 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
00109f54 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
00109f5c 00000028 T CTRPluginFramework::Seconds(float)
00109f84 00000010 T CTRPluginFramework::Milliseconds(int)
00109f94 00000008 T CTRPluginFramework::Microseconds(long long)
00109f9c 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109fb0 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109fc4 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109fd8 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109ff8 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
0010a044 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0010a05c 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
0010a0c0 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0010a134 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0010a190 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0010a210 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010a2c4 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010a404 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0010a43c 0000001c T CTRPluginFramework::InitializeRandomEngine()
0010a458 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0010a564 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0010a5cc 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0010a5e8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
0010a660 0000001c W CTRPluginFramework::File::~File()
0010a660 0000001c W CTRPluginFramework::File::~File()
0010a67c 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010a67c 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010a71c 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0010a71c 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0010a77c 00000010 W CTRPluginFramework::BMPImage::DataClear()
0010a78c 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0010a8c0 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0010a8ec 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0010aa24 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0010acbc 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
0010ad8c 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0010ae44 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0010aefc 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0010af58 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
0010b0ec 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0010b16c 000001ec T CTRPluginFramework::Preferences::WriteSettings()
0010b358 00000004 T CTRPluginFramework::Preferences::Initialize()
0010b35c 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0010b3d4 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
0010b3dc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0010b454 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
0010b460 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
0010b46c 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
0010b56c 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010b56c 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010b59c 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0010b668 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
0010b77c 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0010b980 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
0010b9d8 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
0010beac 00000010 T CTRPluginFramework::Glyph::Width() const
0010bebc 00000060 T CTRPluginFramework::Font::Initialize()
0010bf1c 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0010c270 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0010c578 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0010c66c 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0010c6d4 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0010c6f4 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010c6f4 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010c720 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010c720 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010c740 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
0010c7f8 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
0010c84c 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010c84c 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010c8e8 0000000c T CTRPluginFramework::OSDImpl::Lock()
0010c8f4 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0010c910 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0010c91c 000000e4 T CTRPluginFramework::OSDImpl::Draw()
0010ca00 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0010cad8 000001b8 T CTRPluginFramework::InstallOSD()
0010cc90 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
0010ccb8 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0010cd98 00000108 T CTRPluginFramework::OSDImpl::Update()
0010cea0 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0010d4b8 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0010d520 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0010d584 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0010d5b0 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0010d5d4 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0010d60c 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0010d644 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0010d674 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0010d69c 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0010d6bc 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0010d6f8 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0010d740 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0010d784 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0010d888 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
0010d8c4 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0010d934 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d9b8 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010da30 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010dac8 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010db6c 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010dc0c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
0010dc2c 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0010dc68 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0010dee0 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
0010e000 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
0010e01c 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010e060 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0010e108 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010e1b0 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010e270 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0010e304 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0010e3ac 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010e400 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010e400 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010e444 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0010e498 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010e62c 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010e6dc 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010e720 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010edac 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010ede8 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010ef28 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010f06c 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010f134 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010f2f8 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010f328 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010f458 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010f52c 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010f678 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010f77c 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010f8d0 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010fa68 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010fc54 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010fcc4 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010fd30 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010fd54 00000028 T CTRPluginFramework::Window::~Window()
0010fd54 00000028 T CTRPluginFramework::Window::~Window()
0010fd7c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010fd7c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010fd80 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010fd9c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010fdb0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010fe14 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010fe14 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010fedc 00000064 T CTRPluginFramework::Window::Draw() const
0010ff40 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00110018 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
00110030 00000018 T CTRPluginFramework::Window::MustClose() const
00110048 00000014 T CTRPluginFramework::Window::Close() const
0011005c 00000004 T CTRPluginFramework::Window::GetRect() const
00110060 0000002c T CTRPluginFramework::Window::Initialize()
0011008c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011010c 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
001101b4 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
00110364 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
00110390 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
001103cc 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
00110408 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
00110444 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
00110480 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
001104bc 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
001104e8 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
00110524 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
00110560 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0011059c 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
001105d8 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
00110604 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
00110640 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0011066c 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
00110698 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
001106c4 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
00110700 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0011072c 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
00110768 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
00110794 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
001107c8 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
00110804 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
00110830 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0011086c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
00110898 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
001108c4 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
001108f0 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0011091c 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
00110948 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
00110974 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
001109a0 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
001109cc 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
00110a08 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
00110a24 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
00110a24 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
00110a28 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
00110a3c 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
00110aa0 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
00110b24 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
00110bec 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
00110c7c 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
00110d98 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
00110e08 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
00110ea8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
00110ed4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
00110ed4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
00110f04 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
00110fd8 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
00111014 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111014 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111130 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001111b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
00111228 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
001112cc 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001112cc 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111410 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111410 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00111558 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00111558 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
001115bc 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
001115c4 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
001115cc 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
001115d4 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
001115dc 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
001115e4 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
00111748 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
00111bdc 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
00111c40 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
00111cd0 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
00111d50 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
00111dd4 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
00111f34 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
001121b4 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
00112730 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
00112798 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
001127e8 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
00112858 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
00112860 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
00112860 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
001128a4 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
001128d4 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
001129ac 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00112b78 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
00112ba4 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
00112ba4 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
00112bcc 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
00112ce8 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
00112d78 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0011366c 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
00113f60 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
001152a4 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
001169e4 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
00116a28 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
00116c7c 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
00116ccc 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
00116d34 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
00116d7c 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
001170a0 00000250 T CTRPluginFramework::KeyboardImpl::Run()
001172f0 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00117368 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00117370 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00117384 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00117384 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
001173ac 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
001173ac 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
001173d4 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
001173f0 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0011740c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00117524 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117524 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001175fc 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001175fc 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001176d8 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
001176e0 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
001176ec 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
001176f4 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00117718 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
00117748 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
00117764 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
001177cc 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001177cc 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00117898 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001178b4 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001178b4 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117970 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117970 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117a30 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
00117a44 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
00117a94 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
00117aac 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
00117ad0 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
00117ae0 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
00117b04 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
00117bdc 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
00117c3c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
00117c4c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
00117c5c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
00117c6c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00117c6c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00117c70 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00117c70 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00117c74 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00117c90 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00117cac 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00117cc0 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00117cd4 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
00117cfc 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00117d60 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00117dc4 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00117dec 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
00117e10 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
00117e88 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00117ef4 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
00117fc8 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00118068 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00118068 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
001182d0 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
001182e4 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0011833c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00118390 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
001184b0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
001184b0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
001184ec 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
00118660 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001186e0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118760 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
001188c0 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
00118968 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00118aec 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
00118c74 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
00118c80 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
00118e04 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
00118e48 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00118e78 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
00118f4c 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
00118fd4 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00119148 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
001191b8 00000030 W CTRPluginFramework::ARCode::~ARCode()
001191b8 00000030 W CTRPluginFramework::ARCode::~ARCode()
001191e8 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0011932c 0000001c W CTRPluginFramework::ARCode::~ARCode()
00119348 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
001193a0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
001193a0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
001193cc 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
001193d8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
001193e4 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00119500 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0011953c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00119548 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00119554 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00119574 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0011964c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
001197e8 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0011983c 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0011999c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
001199b4 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
00119ad8 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
00119bb0 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
00119d6c 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
00119e44 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
00119ec8 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
0011a0dc 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0011a2e0 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
0011a4e4 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
0011a6f8 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011a750 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011a7c4 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011a838 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011a890 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
0011a918 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
0011a924 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a924 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a94c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a968 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
0011a9fc 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011a9fc 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011aa24 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011aa40 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011aa40 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011aa68 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011aa84 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011aa84 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011aaac 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011aac8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011aac8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011aae8 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011aae8 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011ab18 0000001c W CTRPluginFramework::TextBox::~TextBox()
0011ab34 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011ab34 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011ac24 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0011ac2c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011ac2c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011acc0 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0011ace0 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011ae6c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011ae8c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0011aea8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0011aec4 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0011aecc 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0011aed4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011aed4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011aef4 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0011afe8 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
0011b744 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0011b79c 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0011b7cc 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0011b890 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011b8c4 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011b9f4 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011bb30 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0011bbf4 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011bcfc 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011bcfc 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011bd64 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0011be60 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0011bfa0 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011c138 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c1b8 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c22c 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c2a0 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011c320 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
0011c398 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
0011c3dc 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0011c518 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0011c580 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0011c6ec 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0011c73c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0011c7e8 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0011ccb4 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0011cd24 000000f4 t CTRPluginFramework::ClearSearchFolder()
0011ce18 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011ce18 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011cf70 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
0011cfcc 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011cfcc 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011d60c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0011d640 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0011d860 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0011d888 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0011d8f0 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0011d920 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0011d9f4 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0011daa0 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0011dae0 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0011dd4c 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011e0d4 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0011e1b0 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011e1e8 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0011e464 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0011e478 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0011e48c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0011e4a0 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0011e5b4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0011e5b8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0011e5bc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0011e5d4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0011e5ec 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0011e604 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0011e61c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0011e634 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0011e64c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0011e664 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011e67c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011e694 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011e70c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011e770 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011e890 0000005c t CTRPluginFramework::Reboot()
0011e8ec 00000064 t CTRPluginFramework::Shutdown()
0011e950 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011ea48 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011eb88 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011ed50 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011ef44 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011f740 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011f740 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011f894 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011f9a0 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011fa44 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011fa84 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011fac0 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011fafc 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011fc04 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011fc8c 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011fd2c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011fda8 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011fe5c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011ffe8 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
00120030 0000014c T CTRPluginFramework::SearchMenu::_Export()
0012017c 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
001202d8 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
00120484 00000030 W std::__cxx11::to_string(unsigned long)
001204b4 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00120538 00000584 T CTRPluginFramework::SearchMenu::Draw()
00120abc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
00120abc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
00120b70 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
00120ba0 00000230 T CTRPluginFramework::SearchMenu::Update()
00120dd0 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
001212dc 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
00121340 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00121340 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001213d4 0000001c T CTRPluginFramework::SubMenu::operator()()
001213f0 00000214 T CTRPluginFramework::SubMenu::Draw()
00121604 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
001216c0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
001216c8 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
001216e4 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0012187c 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001218c4 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
00121988 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
00121a48 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
00121a84 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
00121afc 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
00121d9c 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
00122058 00000040 W CTRPluginFramework::Search::~Search()
00122058 00000040 W CTRPluginFramework::Search::~Search()
00122098 00000044 T CTRPluginFramework::Search32::~Search32()
00122098 00000044 T CTRPluginFramework::Search32::~Search32()
001220dc 0000001c T CTRPluginFramework::Search32::~Search32()
001220f8 0000001c W CTRPluginFramework::Search::~Search()
00122114 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00122114 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0012233c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012233c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012235c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0012235c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
001223b8 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
001224f0 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00122538 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0012267c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
001227c0 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00122804 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
00122830 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0012291c 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
00122950 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
00122984 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00122a90 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00122ad8 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
00122df0 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00123050 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
001232c8 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00123528 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0012355c 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00123880 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001240ac 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124978 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125224 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125fd4 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126b88 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012727c 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012765c 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127df8 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012823c 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128684 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128ac8 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001290f8 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001299b4 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012a274 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012ab30 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012b780 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012b7c4 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0012b958 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
0012b9d0 00000008 T CTRPluginFramework::Search::GetHeader() const
0012b9d8 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0012ba30 0000000c T CTRPluginFramework::Search::GetType() const
0012ba3c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0012ba54 00000070 T CTRPluginFramework::Search::WriteHeader()
0012bac4 00000058 T CTRPluginFramework::Search::WriteResults()
0012bb1c 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0012bb68 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0012bd88 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012bd88 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012bfc8 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0012c0a0 0000008c T CTRPluginFramework::Search::CreateIndexTable()
0012c12c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012c12c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012c2d4 00000080 T CTRPluginFramework::Search::Cancel()
0012c354 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0012c46c 00000090 T CTRPluginFramework::EventManager::EventManager()
0012c46c 00000090 T CTRPluginFramework::EventManager::EventManager()
0012c4fc 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0012c664 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0012c6a8 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
0012c934 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0012ca38 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0012ca40 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012ca64 00000004 t addrMapNodeDestructor(rbtree_node*)
0012ca68 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0012cb78 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0012cb80 00000050 T CTRPluginFramework::Heap::Free(void*)
0012cbd0 0000000c T CTRPluginFramework::Heap::SpaceFree()
0012cbdc 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
0012cd04 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
0012cd50 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
0012cd68 00000018 T IsPaused
0012cd80 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
0012cf08 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
0012d060 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
0012d0c0 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0012d0d8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012d0d8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012d108 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
0012d168 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0012d210 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
0012d278 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
0012d32c 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
0012d3e4 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0012d3ec 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0012d448 00000118 T CTRPluginFramework::ScreenImpl::Flush()
0012d560 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
0012d678 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0012d6d0 00000078 T CTRPluginFramework::ScreenImpl::Clean()
0012d748 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0012d7bc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012d7c4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0012d7cc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0012d7d4 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0012d7f0 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0012d80c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0012d860 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0012d890 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0012d8e8 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0012d95c 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
0012da4c 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
0012da5c 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
0012da6c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0012da94 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012da94 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012dab4 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012db3c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012db3c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012dc74 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012dd78 0000006c T CTRPluginFramework::ARCode::Update()
0012dde4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012dde4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012dea8 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012dea8 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012dee8 00000040 T CTRPluginFramework::ARCodeContext::Update()
0012df28 00000048 T CTRPluginFramework::ARCodeContext::Clear()
0012df70 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012dfe4 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0012e044 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0012e110 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
0012e110 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012e11c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012e1a4 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0012e200 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012e970 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012e970 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012e9f0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e9f0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012e9f0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e9f0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012ea40 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012f550 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012f550 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012f6f0 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012f9d4 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012f9f0 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012fa78 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012fab0 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012fc34 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012fc78 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012fcdc 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012fd08 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012fd08 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012fd30 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012fd7c 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012fde0 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012fe9c 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
001301c4 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
00130684 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
00130aec 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00130fa8 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
00131098 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
00131098 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
001310b8 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
001310d4 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001311e8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
00131260 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
00131278 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013136c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013137c 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
00131454 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
001314a8 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001314ec 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131534 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00131a0c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
00131a0c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
00131a50 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
00131a50 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
00131a64 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
00131a84 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
00131c10 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
00131d78 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
00132598 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013265c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
001326d4 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
00132a18 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
00132a6c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
00132a6c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
00132acc 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
00132ae8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132ae8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132b38 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
00132bd4 0000002c W MemBlock::Create(unsigned char*, unsigned long)
00132c00 00000034 W MemPool::DelBlock(MemBlock*)
00132c34 0000005c T MemPool::CoalesceRight(MemBlock*)
00132c90 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
00132dac 00000100 T MemPool::Deallocate(MemChunk const&)
00132eac 00000020 T MemPool::GetFreeSpace()
00132ecc 00000124 T __system_allocateHeaps
00132ff0 00000034 T arm11kSetKProcessId
00133024 00000028 T arm11kGetCurrentKProcess
0013304c 00000024 T arm11kMemcpy
00133070 00000064 T arm11kSvcControlMemory
001330d4 00000018 T getKernelObjectPtr
001330ec 000000a0 T cfguInit
0013318c 00000034 T cfguExit
001331c0 00000044 T CFGU_GetConfigInfoBlk2
00133204 00000014 T CFGU_GetSystemLanguage
00133218 000000a8 T fontEnsureMapped
001332c0 0000011c T fontGlyphIndexFromCodePoint
001333dc 00000074 T fontGetCharWidthInfo
00133450 00000050 T srvExit
001334a0 00000034 T srvRegisterClient
001334d4 00000064 T srvInit
00133538 00000068 T srvGetServiceHandleDirect
001335a0 00000004 T srvGetServiceHandle
001335a4 00000034 T srvPublishToSubscriber
001335d8 0000000c T __sync_init
001335e4 00000018 T __sync_fini
001335fc 00000018 T LightLock_Init
00133614 0000008c T LightLock_Lock
001336a0 00000034 T LightLock_TryLock
001336d4 00000050 T LightLock_Unlock
00133724 00000018 T RecursiveLock_Init
0013373c 00000030 T RecursiveLock_Lock
0013376c 00000044 T RecursiveLock_TryLock
001337b0 00000034 T RecursiveLock_Unlock
001337e4 00000030 T LightEvent_Init
00133814 00000060 T LightEvent_Clear
00133874 00000060 T LightEvent_Pulse
001338d4 000000b4 T LightEvent_Signal
00133988 000000a8 T LightEvent_Wait
00133a30 00000168 T threadCreate
00133b98 0000001c T threadFree
00133bb4 00000024 T threadJoin
00133bd8 00000030 T threadGetCurrent
00133c08 0000003c T threadExit
00133c44 0000003c t _thread_begin
00133c80 00000088 T acInit
00133d08 00000034 T acExit
00133d3c 000000a0 T amInit
00133ddc 00000034 T amExit
00133e10 00000128 T aptSendCommand
00133f38 0000006c T APT_CheckNew3DS
00133fa4 00000048 T APT_GetSharedFont
00133fec 00000028 t fsSession
00134014 00000040 t fsSessionForArchive
00134054 00000038 T fsExit
0013408c 00000028 T FSUSER_Initialize
001340b4 000000b0 T fsInit
00134164 00000080 T FSUSER_OpenFile
001341e4 00000068 T FSUSER_DeleteFile
0013424c 000000a4 T FSUSER_RenameFile
001342f0 00000070 T FSUSER_CreateDirectory
00134360 0000006c T FSUSER_OpenDirectory
001343cc 00000074 T FSUSER_OpenArchive
00134440 00000058 T FSFILE_Read
00134498 00000060 T FSFILE_Write
001344f8 00000038 T FSFILE_GetSize
00134530 00000028 T FSFILE_SetSize
00134558 0000003c T FSFILE_Close
00134594 00000024 T FSFILE_Flush
001345b8 00000050 T FSDIR_Read
00134608 0000003c T FSDIR_Close
00134644 000000e8 t gspEventThreadMain
0013472c 00000098 T gspInitEventHandler
001347c4 00000040 T gspExitEventHandler
00134804 0000008c T gspExit
00134890 0000005c T gspWaitForEvent
001348ec 00000044 T GSPGPU_FlushDataCache
00134930 00000044 T GSPGPU_InvalidateDataCache
00134974 00000064 T GSPGPU_RegisterInterruptRelayQueue
001349d8 000000dc T gspInit
00134ab4 0000002c T GSPGPU_SaveVramSysArea
00134ae0 0000002c T GSPGPU_RestoreVramSysArea
00134b0c 000000bc T hidExit
00134bc8 00000034 T hidCheckSectionUpdateTime
00134bfc 0000016c T hidScanInput
00134d68 00000010 T hidKeysHeld
00134d78 00000010 T hidKeysDown
00134d88 00000010 T hidKeysUp
00134d98 00000018 T hidTouchRead
00134db0 00000090 T HIDUSER_GetHandles
00134e40 00000174 T hidInit
00134fb4 00000034 T irrstCheckSectionUpdateTime
00134fe8 00000070 T irrstScanInput
00135058 0000001c T irrstKeysHeld
00135074 00000050 T IRRST_GetHandles
001350c4 00000034 T IRRST_Initialize
001350f8 00000124 T irrstInit
0013521c 0000002c T IRRST_Shutdown
00135248 000000a8 T irrstExit
001352f0 0000002c t __ctru_get_reent
0013531c 000000f0 T __system_initSyscalls
0013540c 0000005c T decode_utf16
00135468 00000138 T decode_utf8
001355a0 00000054 T encode_utf16
001355f4 000000e0 T encode_utf8
001356d4 000000d4 T utf16_to_utf8
001357a8 000000ac T utf8_to_utf16
00135854 00000054 T rbtree_find
001358a8 00000010 T rbtree_init
001358b8 00000174 t do_insert
00135a2c 00000008 T rbtree_insert
00135a34 00000014 t is_black
00135a48 000002c8 T rbtree_remove
00135d10 00000094 T rbtree_rotate
00135da4 T loadCROHooked
00135dc0 T svcControlMemory
00135de0 T svcQueryMemory
00135e10 T svcCreateThread
00135e30 T svcExitThread
00135e38 T svcSleepThread
00135e40 T svcSetThreadPriority
00135e48 T svcReleaseMutex
00135e50 T svcCreateEvent
00135e64 T svcSignalEvent
00135e6c T svcClearEvent
00135e74 T svcMapMemoryBlock
00135e7c T svcUnmapMemoryBlock
00135e84 T svcCreateAddressArbiter
00135e98 T svcArbitrateAddress
00135eb0 T svcCloseHandle
00135eb8 T svcWaitSynchronization
00135ec0 T svcGetSystemTick
00135ec8 T svcGetSystemInfo
00135ee0 T svcGetProcessInfo
00135ef8 T svcConnectToPort
00135f0c T svcSendSyncRequest
00135f14 T svcOpenProcess
00135f28 T svcBreak
00135f30 T svcInvalidateProcessDataCache
00135f38 T svcFlushProcessDataCache
00135f40 T svcControlProcessMemory
00135f58 T svcBackdoor
00135f60 T svcKernelSetState
00135f68 T svcQueryProcessMemory
00135f8c 0000004c T Hook::Hook()
00135f8c 0000004c T Hook::Hook()
00135fd8 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
001360a0 00000060 T Hook::Enable()
00136100 00000060 T Hook::Disable()
00136160 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136160 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013619c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013619c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001361d0 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
001361d0 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0013620c 00000008 T CTRPluginFramework::MessageBox::operator()() const
00136214 00000014 T CTRPluginFramework::Touch::IsDown()
00136228 00000028 T CTRPluginFramework::Touch::GetPosition()
00136250 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00136250 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0013627c 00000018 T CTRPluginFramework::LineReader::~LineReader()
0013627c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00136294 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001363a8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
001363a8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
001363d0 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00136450 00000048 T CTRPluginFramework::LineWriter::Flush()
00136498 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00136498 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
001364b4 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00136524 00000018 T CTRPluginFramework::LineWriter::Close()
0013653c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00136578 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0013659c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001365c0 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013665c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
0013665c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00136660 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
00136674 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136758 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00136758 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
001367b8 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
001367c0 000000ac T CTRPluginFramework::ComboBox::Draw()
0013686c 000000ac T CTRPluginFramework::ComboBox::operator()()
00136918 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00136918 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00136964 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
00136980 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00136980 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
001369d0 00000038 T CTRPluginFramework::ComboBox::Clear()
00136a08 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00136a60 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136af0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00136af0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00136af4 00000014 T CTRPluginFramework::FloatingButton::Draw()
00136b08 00000014 T CTRPluginFramework::FloatingButton::operator()()
00136b1c 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
00136b30 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
00136cf0 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00136cf0 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00136d34 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136d34 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136f0c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136f0c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013707c 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
001370f4 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
001373b0 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
001374b4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
001374b4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
001374d4 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
001374f0 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00137584 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
001375bc 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
00137624 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
0013771c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0013772c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0013773c 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
00137744 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00137750 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00137750 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
001377b8 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137838 00000008 W CTRPluginFramework::Drawable::operator()()
00137840 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137844 000002e0 T CTRPluginFramework::TextBox::Draw()
00137b24 000000ec T CTRPluginFramework::TextBox::TextBox()
00137b24 000000ec T CTRPluginFramework::TextBox::TextBox()
00137c10 0000000c T CTRPluginFramework::TextBox::Open() const
00137c1c 0000000c T CTRPluginFramework::TextBox::Close() const
00137c28 00000008 T CTRPluginFramework::TextBox::IsOpen() const
00137c30 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
00137e7c 0000000c T CTRPluginFramework::TextBox::DrawConst() const
00137e88 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
00137f20 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
00137fd4 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
001380ac 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
001380e8 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
001382d0 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
001382d0 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00138468 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00138550 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00138550 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00138554 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00138568 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00138608 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00138608 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00138664 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00138664 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00138704 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00138704 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00138760 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
00138768 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
00138890 00000088 T CTRPluginFramework::TouchKey::Draw()
00138918 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001389b0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
001389b0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00138a5c 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
00138b0c 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
00138bac 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
00138bc4 00000030 T CTRPluginFramework::TouchKeyString::operator()()
00138bf4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00138bf4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00138c08 00000024 T CTRPluginFramework::UIContainer::Draw()
00138c2c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
00138c60 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
00138c84 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
00138d5c 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
00138da0 000000e4 T CTRPluginFramework::Converter::Converter()
00138da0 000000e4 T CTRPluginFramework::Converter::Converter()
00138e84 00000010 T CTRPluginFramework::Converter::Instance()
00138e94 00000108 T CTRPluginFramework::Converter::_Draw()
00138f9c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00138f9c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00138fb0 000001e0 T CTRPluginFramework::Converter::operator()()
00139190 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00139208 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00139208 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00139254 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
00139310 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
001393f8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013945c 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
00139770 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
00139868 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
00139ab0 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
00139d30 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00139d30 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00139d34 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
00139d50 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00139d64 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
00139dc8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00139e40 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
00139f00 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0013a1bc 00000228 T CTRPluginFramework::GuideReader::GuideReader()
0013a1bc 00000228 T CTRPluginFramework::GuideReader::GuideReader()
0013a3e4 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
0013a7f8 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0013a810 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a890 00000154 T CTRPluginFramework::GuideReader::Draw()
0013a9e4 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0013aa54 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013aa54 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013aa58 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
0013aa74 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013aa88 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
0013aaec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
0013ab64 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0013ab80 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
0013abac 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
0013ac2c 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0013ad44 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0013ad74 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
0013adb8 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0013adfc 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0013ae30 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
0013ae84 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
0013aed8 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0013b158 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
0013b190 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
0013b774 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013b774 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013b9a0 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0013b9e4 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0013bbcc 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0013bc24 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
0013bd0c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013bd8c 00000044 T CTRPluginFramework::HexEditor::_Update()
0013bdd0 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
0013bf20 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0013c1d0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0013c248 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013c248 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013c324 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013c324 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013c43c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0013c478 00000030 T CTRPluginFramework::Menu::~Menu()
0013c478 00000030 T CTRPluginFramework::Menu::~Menu()
0013c4a8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0013c4b4 00000008 T CTRPluginFramework::Menu::GetFolder() const
0013c4bc 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0013c4c4 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
0013c4ec 000003a4 T CTRPluginFramework::Menu::Draw() const
0013c890 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
0013c914 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
0013c998 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0013cbc8 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0013cd38 00000068 T CTRPluginFramework::Menu::ShowNote()
0013cda0 00000008 T CTRPluginFramework::Menu::CloseNote()
0013cda8 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0013cdb0 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0013cdf0 00000044 T CTRPluginFramework::Menu::Pop()
0013ce34 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0013cef0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013cef0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013cf10 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013cf2c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013cf2c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013cfc0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013cfc0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d020 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d020 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013d080 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013d084 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
0013d090 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
0013d09c 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
0013d0a8 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
0013d0b4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013d0b4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013d0b8 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013d0b8 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013d0bc 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013d0d8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013d0f4 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013d108 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013d11c 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0013d204 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0013d240 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0013d298 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013d34c 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013d42c 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0013d4b8 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0013d4e4 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013d548 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013d5ac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
0013d624 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
0013d668 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0013d674 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
0013d9a0 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0013daa4 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0013dd04 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0013de08 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0013e1e4 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0013e2b4 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013e334 0000006c T CTRPluginFramework::PluginMenuHome::Init()
0013e3a0 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0013e424 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0013e480 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013e480 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013e5d8 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
0013e610 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013e610 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013ed2c 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013eda4 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013ee24 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013eea4 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013efb0 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013efb8 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013efdc 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013f000 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013f024 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013f04c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013f074 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013f09c 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013f0bc 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00140500 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
00140564 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
00140584 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
001405a8 00000004 t addrMapNodeDestructor(rbtree_node*)
001405ac 000000d8 T mappableAlloc
00140684 00000050 T mappableFree
001406d4 00000008 T envGetHandle
001406dc 0000005c t getSysTime
00140738 000000fc T __libctru_gtod
00140834 00000014 W __appExit
00140848 00000078 W __libctru_exit
001408c0 00000050 T rbtree_node_next
00140910 00000004 T operator delete[](void*)
00140914 00000004 T operator new[](unsigned int)
00140918 0000005c T __cxa_guard_acquire
00140974 0000000c T __cxa_guard_release
00140980 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
001409e0 00000070 T __cxa_init_primary_exception
00140a50 00000054 T __cxa_throw
00140aa4 000000b0 T __cxa_rethrow
00140b54 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00140b54 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00140b74 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
00140ba0 00000004 T std::exception::~exception()
00140ba0 00000004 T std::exception::~exception()
00140ba4 00000004 T std::bad_exception::~bad_exception()
00140ba4 00000004 T std::bad_exception::~bad_exception()
00140ba8 0000000c T transaction clone for std::exception::what() const
00140ba8 0000000c T std::exception::what() const
00140bb4 0000000c T transaction clone for std::bad_exception::what() const
00140bb4 0000000c T std::bad_exception::what() const
00140bc0 00000018 T std::bad_exception::~bad_exception()
00140bd8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00140bd8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00140bf8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00140c24 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00140c90 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00140d64 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00140da8 0000000c T __cxa_get_globals_fast
00140db4 0000000c T __cxa_get_globals
00140dc0 00000004 T operator delete(void*, unsigned int)
00140dc4 000000d0 T __cxa_begin_catch
00140e94 000000d8 T __cxa_end_catch
00140f6c 00000004 T std::type_info::~type_info()
00140f6c 00000004 T std::type_info::~type_info()
00140f70 00000008 T std::type_info::__is_pointer_p() const
00140f70 00000008 T std::type_info::__is_function_p() const
00140f78 0000004c T std::type_info::operator==(std::type_info const&) const
00140fc4 00000008 T __cxa_pure_virtual
00140fcc 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00141134 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
00141194 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00141274 0000074c T __gxx_personality_v0
001419c0 00000004 T operator delete(void*)
001419c4 0000005c T operator new(unsigned int)
00141a20 00000010 T __aeabi_atexit
00141a30 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
00141b00 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
00141bb4 00000044 T __cxa_allocate_exception
00141bf8 00000030 T __cxa_free_exception
00141c28 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00141c68 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00141cc4 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00141cd8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00141cd8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00141cf8 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00141d24 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00141d8c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00141db8 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00141dfc 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
00141e14 00000014 T std::__detail::_List_node_base::_M_unhook()
00141e28 0000002c T std::__throw_bad_alloc()
00141e54 00000040 T std::__throw_logic_error(char const*)
00141e94 00000040 T std::__throw_invalid_argument(char const*)
00141ed4 00000040 T std::__throw_length_error(char const*)
00141f14 00000040 T std::__throw_out_of_range(char const*)
00141f54 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
00141fd0 00000038 T std::logic_error::logic_error(char const*)
00141fd0 00000038 T std::logic_error::logic_error(char const*)
00142008 00000020 T std::invalid_argument::invalid_argument(char const*)
00142008 00000020 T std::invalid_argument::invalid_argument(char const*)
00142028 00000020 T std::length_error::length_error(char const*)
00142028 00000020 T std::length_error::length_error(char const*)
00142048 00000020 T std::out_of_range::out_of_range(char const*)
00142048 00000020 T std::out_of_range::out_of_range(char const*)
00142068 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
001420ec 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
001420f0 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
001421a0 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
001421a0 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
001421e0 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00142234 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00142248 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0014226c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
00142290 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142348 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
00142458 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
001424cc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001424cc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00142538 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00142538 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0014255c 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001425ec 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00142700 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0014276c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
001427d8 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00142800 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00142844 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0014285c 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
00142960 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
001429a8 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
00142c30 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
00142c68 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142cb4 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
00142d14 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
00142da8 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142db8 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142dc8 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
00142df4 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
00142e3c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
00142e84 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
00142f2c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
00142f3c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
00142fac 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
00142fdc 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
00143028 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
001430d8 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001430d8 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00143108 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
001431b8 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
00143230 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
001432a0 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
00143318 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
00143418 00000014 T std::get_new_handler()
0014342c 00000034 T __cxxabiv1::__terminate(void (*)())
00143460 00000018 T std::terminate()
00143478 0000000c T __cxxabiv1::__unexpected(void (*)())
00143484 00000018 T std::unexpected()
0014349c 00000014 T std::get_terminate()
001434b0 00000014 T std::get_unexpected()
001434c4 0000000c T std::bad_alloc::what() const
001434d0 00000020 T std::bad_alloc::~bad_alloc()
001434d0 00000020 T std::bad_alloc::~bad_alloc()
001434f0 0000002c T std::bad_alloc::~bad_alloc()
0014351c T __cxa_end_cleanup
0014352c 00000138 T __cxa_type_match
00143664 000000b4 T __cxa_begin_cleanup
00143718 000000b4 T __gnu_end_cleanup
001437cc 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0014383c 0000002c T __cxa_call_terminate
00143868 0000013c T __cxa_call_unexpected
001439a4 00000008 T std::logic_error::what() const
001439ac 00000064 T std::logic_error::~logic_error()
001439ac 00000064 T std::logic_error::~logic_error()
00143a10 0000001c T std::logic_error::~logic_error()
00143a2c 00000020 T std::invalid_argument::~invalid_argument()
00143a2c 00000020 T std::invalid_argument::~invalid_argument()
00143a4c 00000028 T std::invalid_argument::~invalid_argument()
00143a74 00000020 T std::length_error::~length_error()
00143a74 00000020 T std::length_error::~length_error()
00143a94 00000028 T std::length_error::~length_error()
00143abc 00000020 T std::out_of_range::~out_of_range()
00143abc 00000020 T std::out_of_range::~out_of_range()
00143adc 00000028 T std::out_of_range::~out_of_range()
00143b08 00000174 T ceil
00143c7c 000000b8 T ceilf
00143d38 00000174 T floor
00143eac 00000088 T roundf
00143f38 00000020 T log2
00143f58 0000015c T log
001440b8 000002c4 T __ieee754_log
0014437c 00000008 T matherr
00144388 00000010 T nan
00144398 0000002c t __aeabi_f2lz
00144398 0000002c T __fixsfdi
001443c8 00000050 t __aeabi_f2ulz
001443c8 00000050 T __fixunssfdi
00144418 00000158 t __udivmoddi4
00144570 00000018 t selfrel_offset31
00144588 0000008c t search_EIT_table
00144614 00000040 t __gnu_unwind_get_pr_addr
00144654 00000118 t get_eit_entry
0014476c 00000088 t restore_non_core_regs
001447f4 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
00144808 00000004 t _Unwind_DebugHook
0014480c 00000068 t unwind_phase2
00144874 00000134 t unwind_phase2_forced
001449a8 000000a8 t __gnu_Unwind_RaiseException
00144a50 00000024 t __gnu_Unwind_ForcedUnwind
00144a74 00000074 t __gnu_Unwind_Resume
00144ae8 00000020 t __gnu_Unwind_Resume_or_Rethrow
00144b08 00000004 t _Unwind_Complete
00144b0c 00000018 t _Unwind_DeleteException
00144b24 00000068 t _Unwind_VRS_Get
00144b8c 0000002c t _Unwind_GetGR
00144bb8 00000068 t _Unwind_VRS_Set
00144c20 0000002c t _Unwind_SetGR
00144c4c 000000c0 t __gnu_Unwind_Backtrace
00144d0c 0000044c t __gnu_unwind_pr_common
00145158 00000008 T __aeabi_unwind_cpp_pr0
00145160 00000008 W __aeabi_unwind_cpp_pr1
00145168 00000008 W __aeabi_unwind_cpp_pr2
00145170 00000418 t _Unwind_VRS_Pop
00145588 00000060 t next_unwind_byte
001455e8 0000002c t _Unwind_GetGR.constprop.0
00145614 00000004 t unwind_UCB_from_context
00145618 000003c8 t __gnu_unwind_execute
001459e0 00000048 t __gnu_unwind_frame
00145a28 00000010 t _Unwind_GetRegionStart
00145a38 0000001c t _Unwind_GetLanguageSpecificData
00145a54 00000008 t _Unwind_GetDataRelBase
00145a5c 00000008 t _Unwind_GetTextRelBase
00145a64 00000010 T ctime
00145a74 00000014 T __cxa_atexit
00145a88 0000000c T __errno
00145a94 00000034 T exit
00145ac8 00000040 T __libc_fini_array
00145b08 0000007c T __libc_init_array
00145b84 0000001c T isspace
00145ba0 0000001c T isxdigit
00145bbc 0000001c T localtime
00145bd8 00000364 T localtime_r
00145f3c 00000024 T __locale_mb_cur_max
00145f60 00000008 T __locale_ctype_ptr_l
00145f68 00000024 T __locale_ctype_ptr
00145f8c 00000018 T malloc
00145fa4 00000018 T free
00145fbc 000007a8 T _malloc_r
00146764 000002fc T __utf8_mbtowc
00146a60 00000100 T memchr
00146b60 000000fc T memcmp
00146c5c 0000010c T memcpy
00146d68 0000013c T memmove
00146ea4 00000110 T memset
00146fb4 0000000c T __malloc_lock
00146fc0 0000000c T __malloc_unlock
00146fcc 00000044 T rand
00147010 00000064 T sprintf
00147074 00000008 T __seofread
0014707c 000000f0 T strcpy
0014716c 00000158 t iso_year_adjust
001472c4 00001024 t __strftime
001482e8 00000050 T strftime
00148338 0000005c T strlen
00148394 000000f8 T strncmp
0014848c 000000d8 T strncpy
00148564 00000054 t sulp
001485b8 00001464 T _strtod_l
00149a20 000000b8 T strtof
00149ad8 000001bc t _strtol_l.isra.0
00149c94 00000050 T _strtol_r
00149ce8 00000260 t _strtoull_l.isra.0
00149f48 00000050 T _strtoull_r
00149f98 000001d0 t _strtoul_l.isra.0
0014a168 00000050 T _strtoul_r
0014a1b8 00000054 T strtoul
0014a20c 000074a0 t get_arg
001516b0 00003e2c T _svfprintf_r
001554dc 00000038 T time
00155514 00000218 T __tzcalc_limits
0015572c 0000000c T __tz_lock
00155738 0000000c T __tz_unlock
00155744 00000010 T _tzset_unlocked
00155754 0000049c T _tzset_unlocked_r
00155bf0 000000a0 T _vsnprintf_r
00155c90 00000038 T vsnprintf
00155cc8 000000a0 T _wcrtomb_r
00155d68 00000020 T _wcsrtombs_r
00155d88 000000e8 T __utf8_wctomb
00155e70 0000000c T abs
00155e7c 0000001c T asctime
00155e98 00000078 T asctime_r
00155f10 000000f4 T __register_exitproc
00156004 00000170 T __call_exitprocs
00156174 000001bc t quorem
00156330 00001224 T _dtoa_r
00157554 000000f8 T _malloc_trim_r
0015764c 000002e4 T _free_r
00157930 00000104 t rshift
00157a34 000007f8 T __gethex
0015822c 00000060 T __match
0015828c 00000254 T __hexnan
001584e0 000000c8 T _findenv_r
001585a8 00000018 T _getenv_r
001585c0 0000000c T __gettzinfo
001585cc 00000280 T gmtime_r
0015884c 0000000c T labs
00158858 00000008 T __localeconv_l
00158860 00000024 T _localeconv_r
00158884 00000088 T _Balloc
0015890c 0000001c T _Bfree
00158928 000000d0 T __multadd
001589f8 000000e0 T __s2b
00158ad8 00000058 T __hi0bits
00158b30 0000009c T __lo0bits
00158bcc 00000020 T __i2b
00158bec 000001d4 T __multiply
00158dc0 00000100 T __pow5mult
00158ec0 000000e8 T __lshift
00158fa8 0000005c T __mcmp
00159004 00000168 T __mdiff
0015916c 00000078 T __ulp
001591e4 000000d0 T __b2d
001592b4 00000104 T __d2b
001593b8 00000084 T __ratio
0015943c 00000088 T __copybits
001594c4 00000078 T __any_on
0015953c 0000000c T nanf
00159548 0000009c T frexp
001595e4 00000064 T siprintf
00159648 00000074 T siscanf
001596bc 000000c8 T sniprintf
00159784 000074a0 t get_arg
00160c24 00000188 T __ssprint_r
00160dac 0000295c T _svfiprintf_r
00163708 000000dc T _sungetc_r
001637e4 0000006c T __ssrefill_r
00163850 000000c8 T _sfread_r
00163918 00001d84 T __ssvfiscanf_r
0016569c 000000a4 T __submore
00165740 00000170 T _wcsnrtombs_l
001658b0 00000064 T _wcsnrtombs_r
00165914 00000090 T _calloc_r
001659a4 0000000c T __env_lock
001659b0 0000000c T __env_unlock
001659bc 00000074 T iswspace
00165a30 000001e0 t __jp2uc
00165c10 000000c4 T _jp2uc
00165cd4 000000b4 T _mbrtowc_r
00165d88 000004d0 T _realloc_r
00166258 000000cc T __sccl
00166324 00000274 t _strtoll_l.isra.0
00166598 00000050 T _strtoll_r
001665e8 0000002c T _gettimeofday_r
00166614 00000070 T _sbrk_r
00166684 00000024 T _exit
001666a8 00000018 T __libc_lock_acquire
001666c0 00000018 T __libc_lock_release
001666d8 00000018 T __libc_lock_acquire_recursive
001666f0 00000018 T __libc_lock_release_recursive
00166708 00000028 T __getreent
00166730 T _fini
00166780 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
00166968 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
00166974 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
00166988 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
001669b0 00000030 r ._184
001669e8 00000058 r CTRPluginFramework::g_OSDPattern
00166a40 00000a00 r font
00167440 00000038 r CTRPluginFramework::stable
00167478 00000038 r CTRPluginFramework::ktable
001674b0 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
001674cc 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
001674e0 00000030 r ._184
00167530 00000038 R vtable for CTRPluginFramework::Search32
00167568 00000038 R vtable for CTRPluginFramework::Search
001675a0 00000005 r CSWTCH.47
001675a8 00000014 R vtable for CTRPluginFramework::ARCode
001675bc 0000002d r ._89
001675ec 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0016766c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
00167678 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
00167680 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
00167688 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
00167690 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
001676ac 00000004 R About15_array_length
001676b0 00000384 r About15_array
00167a34 00000004 R AddFavorite25_array_length
00167a38 000009c4 r AddFavorite25_array
001683fc 00000004 R AddFavoriteFilled25_array_length
00168400 000009c4 r AddFavoriteFilled25_array
00168dc4 00000004 R CapsLockOn15_array_length
00168dc8 00000384 r CapsLockOn15_array
0016914c 00000004 R CapsLockOnFilled15_array_length
00169150 00000384 r CapsLockOnFilled15_array
001694d4 00000004 R CheckedCheckbox_array_length
001694d8 00000384 r CheckedCheckbox_array
0016985c 00000004 R ClearSymbol15_array_length
00169860 00000384 r ClearSymbol15_array
00169be4 00000004 R ClearSymbolFilled15_array_length
00169be8 00000384 r ClearSymbolFilled15_array
00169f6c 00000004 R Clipboard25_array_length
00169f70 000009c4 r Clipboard25_array
0016a934 00000004 R ClipboardFilled25_array_length
0016a938 000009c4 r ClipboardFilled25_array
0016b2fc 00000004 R CloseWindow20_array_length
0016b300 00000640 r CloseWindow20_array
0016b940 00000004 R CloseWindowFilled20_array_length
0016b944 00000640 r CloseWindowFilled20_array
0016bf84 00000004 R Controller15_array_length
0016bf88 00000384 r Controller15_array
0016c30c 00000004 R Cut25_array_length
0016c310 000009c4 r Cut25_array
0016ccd4 00000004 R CutFilled25_array_length
0016ccd8 000009c4 r CutFilled25_array
0016d69c 00000004 R Duplicate25_array_length
0016d6a0 000009c4 r Duplicate25_array
0016e064 00000004 R DuplicateFilled25_array_length
0016e068 000009c4 r DuplicateFilled25_array
0016ea2c 00000004 R Edit25_array_length
0016ea30 000009c4 r Edit25_array
0016f3f4 00000004 R EditFilled25_array_length
0016f3f8 000009c4 r EditFilled25_array
0016fdbc 00000004 R EnterKey15_array_length
0016fdc0 00000384 r EnterKey15_array
00170144 00000004 R EnterKeyFilled15_array_length
00170148 00000384 r EnterKeyFilled15_array
001704cc 00000004 R File15_array_length
001704d0 00000384 r File15_array
00170854 00000004 R FolderFilled_array_length
00170858 00000384 r FolderFilled_array
00170bdc 00000004 R GameController15_array_length
00170be0 00000384 r GameController15_array
00170f64 00000004 R GameController25_array_length
00170f68 000009c4 r GameController25_array
0017192c 00000004 R GameControllerFilled25_array_length
00171930 000009c4 r GameControllerFilled25_array
001722f4 00000004 R Grid15_array_length
001722f8 00000384 r Grid15_array
0017267c 00000004 R HandCursor15_array_length
00172680 00000384 r HandCursor15_array
00172a04 00000004 R Info25_array_length
00172a08 000009c4 r Info25_array
001733cc 00000004 R InfoFilled25_array_length
001733d0 000009c4 r InfoFilled25_array
00173d94 00000004 R Keyboard25_array_length
00173d98 000009c4 r Keyboard25_array
0017475c 00000004 R KeyboardFilled25_array_length
00174760 000009c4 r KeyboardFilled25_array
00175124 00000004 R Maintenance15_array_length
00175128 00000384 r Maintenance15_array
001754ac 00000004 R More15_array_length
001754b0 00000384 r More15_array
00175834 00000004 R Plus25_array_length
00175838 000009c4 r Plus25_array
001761fc 00000004 R PlusFilled25_array_length
00176200 000009c4 r PlusFilled25_array
00176bc4 00000004 R RAM15_array_length
00176bc8 00000384 r RAM15_array
00176f4c 00000004 R Restart15_array_length
00176f50 00000384 r Restart15_array
001772d4 00000004 R Rocket40_array_length
001772d8 00001900 r Rocket40_array
00178bd8 00000004 R Save25_array_length
00178bdc 000009c4 r Save25_array
001795a0 00000004 R Search15_array_length
001795a4 00000384 r Search15_array
00179928 00000004 R Settings15_array_length
0017992c 00000384 r Settings15_array
00179cb0 00000004 R Shutdown15_array_length
00179cb4 00000384 r Shutdown15_array
0017a038 00000004 R Star15_array_length
0017a03c 00000384 r Star15_array
0017a3c0 00000004 R Trash25_array_length
0017a3c4 000009c4 r Trash25_array
0017ad88 00000004 R TrashFilled25_array_length
0017ad8c 000009c4 r TrashFilled25_array
0017b750 00000004 R UnCheckedCheckbox_array_length
0017b754 00000384 r UnCheckedCheckbox_array
0017bad8 00000004 R UserManualFilled15_array_length
0017badc 00000384 r UserManualFilled15_array
0017be60 0000001c R vtable for CTRPluginFramework::CheckBox
0017be7c 0000001c R vtable for CTRPluginFramework::ComboBox
0017be98 0000001c R vtable for CTRPluginFramework::FloatingButton
0017beb4 0000001c R vtable for CTRPluginFramework::NumericTextBox
0017bed0 0000001c R vtable for CTRPluginFramework::TextBox
0017beec 0000001c R vtable for CTRPluginFramework::TouchKey
0017bf08 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
0017bf28 00000280 r CTRPluginFramework::_cursorPositions
0017c1a8 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0017c1b0 00000048 r CTRPluginFramework::g_ctrpf
0017c1f8 00000030 r CTRPluginFramework::g_byme
0017e18c 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
0017e1a8 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
0017e310 00000014 V vtable for CTRPluginFramework::MenuItem
0017e324 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017e340 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017e3b0 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
0017e3cc 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
0017e3e8 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
0017e404 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0017f42c 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0017f450 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0017f5d0 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0017f5ec 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0017f608 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0017f654 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0017f660 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0017f684 00000014 R vtable for __gnu_cxx::recursive_init_error
0017f6bc 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0017f6c4 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0017f6cc 0000000c R typeinfo for std::bad_exception
0017f6d8 00000008 R typeinfo for std::exception
0017f6e0 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0017f700 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0017f724 00000012 R typeinfo name for std::bad_exception
0017f738 0000000d R typeinfo name for std::exception
0017f748 00000014 R vtable for std::bad_exception
0017f75c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0017f768 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0017f790 0000002c R vtable for __cxxabiv1::__si_class_type_info
0017f7bc 00000008 R typeinfo for std::type_info
0017f7c4 0000000d R typeinfo name for std::type_info
0017f7d4 0000000c R typeinfo for __cxxabiv1::__class_type_info
0017f7e0 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0017f804 0000002c R vtable for __cxxabiv1::__class_type_info
0017fa18 0000000c R typeinfo for std::bad_alloc
0017fa24 0000000d R typeinfo name for std::bad_alloc
0017fa34 00000014 R vtable for std::bad_alloc
0017fa48 0000000c R typeinfo for std::logic_error
0017fa54 0000000c R typeinfo for std::length_error
0017fa60 0000000c R typeinfo for std::out_of_range
0017fa6c 0000000c R typeinfo for std::invalid_argument
0017fa78 00000010 R typeinfo name for std::logic_error
0017fa88 00000011 R typeinfo name for std::length_error
0017fa9c 00000011 R typeinfo name for std::out_of_range
0017fab0 00000015 R typeinfo name for std::invalid_argument
0017fac8 00000014 R vtable for std::logic_error
0017fadc 00000014 R vtable for std::length_error
0017faf0 00000014 R vtable for std::out_of_range
0017fb04 00000014 R vtable for std::invalid_argument
0017fb1c 00000004 R _global_impure_ptr
0017fb64 00000060 R __month_lengths
0017fc50 00000014 r fpi.7439
0017fc64 00000014 r fpinan.7475
0017fc78 00000028 r tinytens
0017fce4 00000010 r blanks.8562
0017fcf4 00000010 r zeroes.8563
0017fd04 000000fc R _C_time_locale
0017ffcc 00000015 r day_name.6011
0017ffe4 00000024 r mon_name.6012
00180008 00000101 R _ctype_
0018011c 00000100 R __hexdig
00180220 00000028 R __mprec_bigtens
00180248 000000c8 R __mprec_tens
00180310 0000000c r p05.7353
0018031c 0000006c R __action_table
00180388 00000100 R __chclass
00180488 0000006c R __state_table
001804f4 00000010 r blanks.8541
00180504 00000010 r zeroes.8542
00180514 00000022 r basefix.8096
0018054c 000000bc r a1
00180608 000000bc r a2
001806c4 0000005b r a3
00180720 00000070 r a6
00180790 000000a2 r a7
00180834 00000040 r a8
00180874 0000172a r b02cf
00181fa0 00001a7c r d02f4
00183c88 R __exidx_start
00183ea8 R __exidx_end
00183ea8 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
00183eac 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
00183eb0 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
00183eb4 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
00183eb8 00000001 D CTRPluginFramework::g_keepRunning
00183ebc 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
00183ec0 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
00183ec4 00000001 D CTRPluginFramework::PrivColor::_format
00183ec8 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00183ecc 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00183ed0 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
00183ed1 00000001 D CTRPluginFramework::SystemImpl::_language
00183ed4 00000004 D g_KProcessPIDOffset
00183ed8 00000004 D About15
00183edc 00000004 D AddFavorite25
00183ee0 00000004 D AddFavoriteFilled25
00183ee4 00000004 D CapsLockOn15
00183ee8 00000004 D CapsLockOnFilled15
00183eec 00000004 D CheckedCheckbox
00183ef0 00000004 D ClearSymbol15
00183ef4 00000004 D ClearSymbolFilled15
00183ef8 00000004 D Clipboard25
00183efc 00000004 D ClipboardFilled25
00183f00 00000004 D CloseWindow20
00183f04 00000004 D CloseWindowFilled20
00183f08 00000004 D Controller15
00183f0c 00000004 D Cut25
00183f10 00000004 D CutFilled25
00183f14 00000004 D Duplicate25
00183f18 00000004 D DuplicateFilled25
00183f1c 00000004 D Edit25
00183f20 00000004 D EditFilled25
00183f24 00000004 D EnterKey15
00183f28 00000004 D EnterKeyFilled15
00183f2c 00000004 D File15
00183f30 00000004 D FolderFilled
00183f34 00000004 D GameController15
00183f38 00000004 D GameController25
00183f3c 00000004 D GameControllerFilled25
00183f40 00000004 D Grid15
00183f44 00000004 D HandCursor15
00183f48 00000004 D Info25
00183f4c 00000004 D InfoFilled25
00183f50 00000004 D Keyboard25
00183f54 00000004 D KeyboardFilled25
00183f58 00000004 D Maintenance15
00183f5c 00000004 D More15
00183f60 00000004 D Plus25
00183f64 00000004 D PlusFilled25
00183f68 00000004 D RAM15
00183f6c 00000004 D Restart15
00183f70 00000004 D Rocket40
00183f74 00000004 D Save25
00183f78 00000004 D Search15
00183f7c 00000004 D Settings15
00183f80 00000004 D Shutdown15
00183f84 00000004 D Star15
00183f88 00000004 D Trash25
00183f8c 00000004 D TrashFilled25
00183f90 00000004 D UnCheckedCheckbox
00183f94 00000004 D UserManualFilled15
00183f98 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
00183f9c D __dso_handle
00183fa0 00000004 D __cxxabiv1::__unexpected_handler
00183fa4 00000004 D __cxxabiv1::__terminate_handler
00183fa8 00000001 D __fdlib_version
00183fac 00000004 D _impure_ptr
00183fb0 00000460 d impure_data
00184410 0000016c D __global_locale
0018457c 00000408 D __malloc_av_
00184984 00000004 D __malloc_sbrk_base
00184988 00000004 D __malloc_trim_threshold
0018498c 0000000c d __malloc_lock_object
00184998 00000004 d __tz_lock_object
0018499c 00000008 D _tzname
001849a4 0000000c D __atexit_lock
001849b0 00000040 d tzinfo
001849f0 00000004 D environ
001849f4 0000000c d __env_lock_object
00184a00 a _DYNAMIC
00184ad8 a _GLOBAL_OFFSET_TABLE_
00184af0 t __frame_dummy_init_array_entry
00184af0 T __init_array_start
00184af0 B __preinit_array_end
00184af0 B __preinit_array_start
00184af0 D __tdata_lma
00184af0 D __tdata_lma_end
00184af0 D __TMC_END__
00184b3c t __do_global_dtors_aux_fini_array_entry
00184b3c T __fini_array_start
00184b3c T __init_array_end
00184b40 T __fini_array_end
00184b40 r __rel_dyn_start
0019b218 B __c_bss_start
0019b218 r __rel_dyn_end
0019b218 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0019b21c 00000004 B CTRPluginFramework::offset
0019b220 00000004 B CTRPluginFramework::data
0019b224 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0019b228 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0019b22c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0019b230 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0019b234 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0019b238 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
0019b23c 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
0019b23d 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0019b23e 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019b23f 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::item
0019b240 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::execute
0019b241 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0019b242 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0019b243 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0019b244 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019b245 00000001 b CTRPluginFramework::customMessage(CTRPluginFramework::MenuEntry*)::messageID
0019b246 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019b248 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
0019b24c 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::execute
0019b250 00000004 B CTRPluginFramework::random
0019b254 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0019b256 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0019b258 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019b259 00000001 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019b25c 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0019b260 00000004 B CTRPluginFramework::g_itemPointer
0019b264 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0019b268 00000004 B CTRPluginFramework::g_oldRacePointer5CC
0019b26c 00000004 B CTRPluginFramework::g_FNsPointer
0019b270 00000004 B CTRPluginFramework::g_raceCondition
0019b274 00000004 B CTRPluginFramework::g_racePointer
0019b278 00000004 B CTRPluginFramework::dataZ
0019b27c 00000004 B CTRPluginFramework::dataY
0019b280 00000004 B CTRPluginFramework::dataX
0019b288 00000050 B CTRPluginFramework::QuickMenu::_instance
0019b2d8 00000008 B CTRPluginFramework::_sdmcArchive
0019b2e0 00000004 B CTRPluginFramework::g_continueGameEvent
0019b2e4 00000004 B __ctru_heap_size
0019b2e8 00000004 B g_gspEventThreadPriority
0019b2ec 00000004 B CTRPluginFramework::g_keepEvent
0019b2f0 00000004 B g_mainThread
0019b2f4 00000004 b onLoadCroLock
0019b2f8 00000038 b g_loadCroHook
0019b330 00000004 B croReturn
0019b334 00000004 B CTRPluginFramework::g_keepThreadHandle
0019b338 00000004 B CTRPluginFramework::g_resumeEvent
0019b340 00004000 b CTRPluginFramework::keepThreadStack
0019f340 00010000 b CTRPluginFramework::threadStack
001af340 00000004 B CTRPluginFramework::Color::Black
001af344 00000004 B CTRPluginFramework::Color::Blank
001af348 00000004 B CTRPluginFramework::Color::Blue
001af34c 00000004 B CTRPluginFramework::Color::BlackGrey
001af350 00000004 B CTRPluginFramework::Color::Brown
001af354 00000004 B CTRPluginFramework::Color::Cyan
001af358 00000004 B CTRPluginFramework::Color::DarkGrey
001af35c 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001af360 00000004 B CTRPluginFramework::Color::DimGrey
001af364 00000004 B CTRPluginFramework::Color::DodgerBlue
001af368 00000004 B CTRPluginFramework::Color::Gainsboro
001af36c 00000004 B CTRPluginFramework::Color::ForestGreen
001af370 00000004 B CTRPluginFramework::Color::Green
001af374 00000004 B CTRPluginFramework::Color::Grey
001af378 00000004 B CTRPluginFramework::Color::LimeGreen
001af37c 00000004 B CTRPluginFramework::Color::Magenta
001af380 00000004 B CTRPluginFramework::Color::Orange
001af384 00000004 B CTRPluginFramework::Color::Red
001af388 00000004 B CTRPluginFramework::Color::Silver
001af38c 00000004 B CTRPluginFramework::Color::SkyBlue
001af390 00000004 B CTRPluginFramework::Color::Turquoise
001af394 00000004 B CTRPluginFramework::Color::Yellow
001af398 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001af3a0 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001af3a8 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001af3b0 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001af3b4 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001af3b8 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001af3bc 00000180 b CTRPluginFramework::g_keyName
001af53c 00000004 b CTRPluginFramework::g_runningInstance
001af540 00000004 B CTRPluginFramework::Controller::_keysDown
001af544 00000004 B CTRPluginFramework::Controller::_keysHeld
001af548 00000004 B CTRPluginFramework::Controller::_keysReleased
001af54c 00000018 b CTRPluginFramework::_workingDirectory
001af564 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001b1568 00000004 B CTRPluginFramework::System::OnAbort
001b1570 00000008 B CTRPluginFramework::Time::Zero
001b1578 000009c4 b CTRPluginFramework::g_rng
001b1f40 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001b1f41 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001b1f42 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001b1f43 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001b1f44 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001b1f45 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001b1f46 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001b1f47 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001b1f48 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001b1f49 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001b1f4a 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001b1f4c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001b1f50 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001b1f58 00000078 B CTRPluginFramework::Preferences::Settings
001b1fd0 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001b1fd1 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001b1fd2 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001b1fd4 00000004 b CTRPluginFramework::defaultSysFont
001b1fd8 00000004 B CTRPluginFramework::g_fontAllocated
001b1fdc 00000004 b CTRPluginFramework::tileData
001b1fe0 00000004 b CTRPluginFramework::glyph
001b1fe4 00000004 B CTRPluginFramework::g_glyphAllocated
001b1fe8 0000000c B CTRPluginFramework::OSDImpl::RecLock
001b1ff4 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001b2000 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001b2018 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001b2030 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001b2068 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001b206c 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001b2074 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001b2098 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001b20a4 00000004 b CTRPluginFramework::g_second
001b20a8 00000010 b CTRPluginFramework::g_fpsClock
001b20b8 00000038 B CTRPluginFramework::OSDHook2
001b20f0 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001b20f4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001b20f5 00000001 B CTRPluginFramework::OSDImpl::MessColors
001b20f8 00000001 B CTRPluginFramework::PrivColor::_useClamp
001b20fc 00000010 B CTRPluginFramework::PrivColor::_clampArea
001b210c 00000001 B CTRPluginFramework::Renderer::_target
001b2110 00000004 B CTRPluginFramework::Renderer::_screen
001b2114 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001b2118 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001b211c 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001b2120 00000028 B CTRPluginFramework::Window::BottomWindow
001b2148 00000028 B CTRPluginFramework::Window::TopWindow
001b2170 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b2180 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b2190 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b2194 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b2198 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b219c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b21ac 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b21b0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b21c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b21c4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b21d4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b21d8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b21e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b21e8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b21f0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b21f8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b2200 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001b2204 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001b2210 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001b221c 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001b2228 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2230 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2238 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b223c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b224c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001b2250 00000004 b CTRPluginFramework::__pmARinstance
001b2254 00000004 b CTRPluginFramework::g_radioId
001b2258 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001b225c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001b2260 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001b2268 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001b226c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001b2270 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b2278 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b2298 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b22a8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b22b8 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b22bc 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b22c0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b22c8 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b22d0 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001b22d8 00000004 b CTRPluginFramework::g_mode
001b22dc 00000004 b CTRPluginFramework::g_HookMode
001b22e0 00000004 B CTRPluginFramework::g_index
001b22e4 00000004 B CTRPluginFramework::g_OpenFileLock
001b22e8 00000004 B CTRPluginFramework::g_filenames
001b22ec 00000004 b CTRPluginFramework::g_buffer2
001b22f0 00000030 b CTRPluginFramework::g_hookExportFile
001b2320 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001b2358 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001b235c 00000004 b CTRPluginFramework::g_buffer
001b2360 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001b2364 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b2368 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b2370 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b2378 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b2380 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b2388 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b2390 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001b2394 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001b23a4 00000004 B CTRPluginFramework::_pool
001b23a8 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001b23aa 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001b23b0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001b23b4 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001b23b8 00000008 b CTRPluginFramework::Heap::g_heapPool
001b23c0 0000000c b sAddrMap
001b23d0 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001b23d4 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001b2438 00000004 B CTRPluginFramework::ProcessImpl::_processID
001b243c 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001b2440 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001b2444 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001b2448 00000008 B CTRPluginFramework::ProcessImpl::_processName
001b2450 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001b2458 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001b245c 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001b2460 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001b246c 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001b2470 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001b2474 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001b2478 00000038 b CTRPluginFramework::_topBuf
001b24b0 00000004 B CTRPluginFramework::ScreenImpl::Top
001b24b4 00000038 b CTRPluginFramework::_botBuf
001b24ec 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001b24f0 00000001 B CTRPluginFramework::SystemImpl::_isInit
001b24f1 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001b24f4 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001b24f8 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001b24fc 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001b2500 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001b2504 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001b2508 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001b250c 0000000c B CTRPluginFramework::g_codeTypes
001b2518 00000001 b CTRPluginFramework::g_condAgainstData
001b2519 00000001 b CTRPluginFramework::g_newCondDataToggle
001b251c 00000004 b CTRPluginFramework::__arCodeEditor
001b2520 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b2524 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b2530 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001b2534 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b2538 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b2544 00000001 B CTRPluginFramework::g_heapError
001b2548 00000004 b cfguRefCount
001b254c 00000004 b cfguHandle
001b2550 00000004 b sharedFontAddr
001b2554 00000004 b srvRefCount
001b2558 00000004 b srv2Handle
001b255c 00000004 b arbiter
001b2560 00000004 b acRefCount
001b2564 00000004 b acHandle
001b2568 00000004 b amRefCount
001b256c 00000004 b amHandle
001b2570 0000000c b aptFirstHook
001b257c 00000004 b aptLockHandle
001b2580 00000004 b serviceName.7503
001b2584 00000004 b aptMessageFunc
001b2588 00000004 b aptMessageFuncData
001b258c 0000000c b aptEvents
001b2598 00000001 b aptHomeButtonState
001b259c 00000004 b aptRefCount
001b25a0 00000008 b aptSleepEvent
001b25a8 00000004 b aptEventHandlerThread
001b25ac 00000001 b flagInit.7855
001b25ad 00000001 b flagValue.7856
001b25b0 00001000 b aptParameters
001b35b0 00000004 b fsuHandle
001b35b8 00000080 b fsExemptArchives
001b3638 00000004 b fsuRefCount
001b363c 00000001 B fs
001b3640 00000004 b gspEventData
001b3644 00000038 b gspEvents
001b367c 0000001c b gspEventCounts
001b3698 00000001 b gspRunEvents
001b369c 00000004 b gspRefCount
001b36a0 00000004 b gfxSharedMemory
001b36a4 00000001 b gfxThreadID
001b36a5 00001000 b gspThreadEventStack
001b46a8 00000004 b hidRefCount
001b46ac 00000004 b kOld
001b46b0 00000004 b kHeld
001b46b4 00000004 b cPos
001b46b8 00000004 b tPos
001b46bc 00000006 b aVec
001b46c2 00000006 b gRate
001b46c8 00000004 b kDown
001b46cc 00000004 b kUp
001b46d0 00000004 b irrstRefCount
001b46d4 00000004 b kHeld
001b46d8 00000004 b csPos
001b46dc 00000004 B _tls_size
001b46e0 b saved_stack
001b46e8 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b46ec 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b4704 00000004 b CTRPluginFramework::__converter
001b4708 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001b470c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001b4720 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b4728 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b4730 00000004 B CTRPluginFramework::__g_hexEditor
001b4734 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b4738 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b4748 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001b4750 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001b4754 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b4758 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b4760 00000004 b CTRPluginFramework::g_ctrpfString
001b4764 00000004 b CTRPluginFramework::g_bymeString
001b4768 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b4770 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b4778 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b4780 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b4788 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001b478c 00000004 B CTRPluginFramework::ARHandler::ActiveData
001b4790 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001b4794 00000008 B CTRPluginFramework::ARHandler::Offset
001b479c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001b47a0 00000010 B CTRPluginFramework::ARHandler::Data
001b47b0 00000008 B CTRPluginFramework::ARHandler::Storage
001b47b8 00000001 b CTRPluginFramework::ToggleFloat
001b47bc 00000008 b sMappablePool
001b47c4 0000000c b sAddrMap
001b47d0 b completed.7759
001b47d4 b object.7764
001b47ec 0000000c b eh_globals
001b47f8 00000010 b (anonymous namespace)::emergency_pool
001b4808 00000010 V std::string::_Rep::_S_empty_rep_storage
001b4818 00000004 b (anonymous namespace)::__new_handler
001b481c 00000028 B __malloc_current_mallinfo
001b4844 00000004 B __malloc_max_sbrked_mem
001b4848 00000004 B __malloc_max_total_mem
001b484c 00000004 B __malloc_top_pad
001b4850 0000000b b __tzname_dst
001b485c 0000000b b __tzname_std
001b4868 00000004 b prev_tzenv
001b486c 00000004 B _daylight
001b4870 00000004 B _timezone
001b4874 00000004 b initial_env
001b4878 00000004 b heap_start.7089
001b487c 00000004 B fake_heap_end
001b4880 00000004 B fake_heap_start
001b4884 00000038 B __syscalls
001b48bc 00000004 B g_KProcessHandleDataOffset
001b48c0 00000080 B g_kernelParams
001b4940 00000004 B g_sharedFont
001b4944 00000004 B charPerSheet
001b4948 00000004 B gspEvent
001b494c 00000004 B gspGpuHandle
001b4950 00000004 B gspSharedMemHandle
001b4954 00000004 B gspThreadEventHandle
001b4958 00000004 B hidMemHandle
001b495c 00000004 B hidHandle
001b4960 00000014 B hidEvents
001b4974 00000004 B hidSharedMem
001b4978 00000004 B irrstMemHandle
001b497c 00000004 B irrstEvent
001b4980 00000004 B irrstHandle
001b4984 00000004 B irrstSharedMem
001b4988 00000004 B __ctru_linear_heap
001b498c 00000004 B __tmp
001b4990 00000004 B __ctru_linear_heap_size
001b4994 00000004 B __system_retAddr
001b4998 00000004 B __ctru_heap
001b499c B __c_bss_end
001b499c A __end__
001b499c B __tls_end
001b499c B __tls_start
