00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_uldivmod
07000e8c t deregister_tm_clones
07000eb8 t register_tm_clones
07000ef0 t __do_global_dtors_aux
07000f34 t frame_dummy
07000f68 000000c4 t unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .part.18]
0700102c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700102c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700104c 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.27]
070010b0 000001dc t CTRPluginFramework::ToggleTouchscreenForceOn()
0700128c 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07001290 00000004 T CTRPluginFramework::OnProcessExit()
07001294 000000ac T CTRPluginFramework::main()
07001340 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
070013b8 00000038 T OnLoadCro
070013f0 00000170 T CTRPluginFramework::Initialize()
07001560 000000b0 T CTRPluginFramework::ThreadExit()
07001610 00000060 T abort
07001670 0000003c T CTRPluginFramework::ThreadInit(void*)
070016ac 0000008c T LaunchMainThread
07001738 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700181c 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07001c24 0000000c t _GLOBAL__sub_I_g_mainThread
07001c30 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07001c30 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
07001c48 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07001c48 0000000c T CTRPluginFramework::Color::Color(unsigned long)
07001c54 00000008 T CTRPluginFramework::Color::ToU32() const
07001c60 00000120 T CTRPluginFramework::Color::Fade(double)
07001d80 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07001dc0 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07001e3c 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07002050 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
07002170 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07002170 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070021e0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
070021e0 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700220c 00000044 T CTRPluginFramework::PluginMenu::Run() const
07002250 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07002258 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07002268 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07002274 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
070022e4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
0700236c 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
070023b0 0000004c T CTRPluginFramework::Directory::Close() const
070023fc 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07002410 00000008 T CTRPluginFramework::Directory::IsOpen() const
07002418 00000040 T CTRPluginFramework::Directory::Directory()
07002418 00000040 T CTRPluginFramework::Directory::Directory()
07002458 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0700248c 00000060 T CTRPluginFramework::Directory::~Directory()
0700248c 00000060 T CTRPluginFramework::Directory::~Directory()
070024ec 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070024ec 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700250c 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070025a4 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700263c 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070026dc 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070027b0 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07002844 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07002990 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07002990 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070029e8 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07002b58 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07002b94 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07002b94 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07002bb0 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07002d20 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
07002d3c 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07002e64 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
07002edc 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
07002f44 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
07002ff0 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07003034 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07003210 000001b4 T CTRPluginFramework::Directory::_List() const
070033c4 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070034a4 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07003588 0000000c T CTRPluginFramework::FwkSettings::Get()
07003594 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
07003674 00000010 T CTRPluginFramework::Process::GetHandle()
07003684 00000010 T CTRPluginFramework::Process::GetTitleID()
07003694 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070036f0 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07003728 00000024 T CTRPluginFramework::Process::GetTextSize()
0700374c 00000008 T CTRPluginFramework::Process::Pause()
07003754 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07003764 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0700380c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07003810 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0700385c 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07003894 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070038d0 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070038f8 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07003918 0000002c T CTRPluginFramework::Hook::Hook()
07003918 0000002c T CTRPluginFramework::Hook::Hook()
07003944 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
0700395c 00000230 T CTRPluginFramework::Hook::Enable()
07003b8c 0000005c T CTRPluginFramework::Hook::Disable()
07003be8 00000014 T CTRPluginFramework::Mutex::Mutex()
07003be8 00000014 T CTRPluginFramework::Mutex::Mutex()
07003bfc 00000028 T CTRPluginFramework::Mutex::~Mutex()
07003bfc 00000028 T CTRPluginFramework::Mutex::~Mutex()
07003c24 00000004 T CTRPluginFramework::Mutex::Lock()
07003c28 00000014 T CTRPluginFramework::Mutex::TryLock()
07003c3c 00000004 T CTRPluginFramework::Mutex::Unlock()
07003c40 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07003c40 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07003c64 0000004c T CTRPluginFramework::Lock::~Lock()
07003c64 0000004c T CTRPluginFramework::Lock::~Lock()
07003cb0 00000074 T CTRPluginFramework::File::Close() const
07003d24 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
07003ddc 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
07003ecc 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07003ef8 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07003fdc 00000008 T CTRPluginFramework::File::Tell() const
07003fe4 00000030 T CTRPluginFramework::File::Rewind() const
07004014 00000034 T CTRPluginFramework::File::Flush() const
07004048 0000006c T CTRPluginFramework::File::GetSize() const
070040b4 00000008 T CTRPluginFramework::File::IsOpen() const
070040bc 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
070040d0 00000044 T CTRPluginFramework::File::File()
070040d0 00000044 T CTRPluginFramework::File::File()
07004114 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070041a8 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700427c 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004300 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070043a0 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070044a8 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070044a8 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07004514 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0700455c 00000014 T CTRPluginFramework::Time::Time()
0700455c 00000014 T CTRPluginFramework::Time::Time()
07004570 00000020 T CTRPluginFramework::Time::AsSeconds() const
07004590 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
070045a8 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
070045b0 00000028 T CTRPluginFramework::Seconds(float)
070045d8 00000010 T CTRPluginFramework::Milliseconds(int)
070045e8 00000008 T CTRPluginFramework::Microseconds(long long)
070045f0 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
07004604 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
07004618 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
0700462c 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
07004644 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
07004690 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
070046a8 00000010 T CTRPluginFramework::System::IsNew3DS()
070046b8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
07004730 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700478c 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
070047e8 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07004844 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07004888 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
07004908 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070049bc 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07004af8 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07004b30 0000001c T CTRPluginFramework::InitializeRandomEngine()
07004b4c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07004b4c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07004b88 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07004ddc 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07004ddc 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07004e20 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07005560 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005568 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070055ac 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
070056b8 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07005720 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700573c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
07005778 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700579c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070057c0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
07005838 00000024 W CTRPluginFramework::File::~File()
07005838 00000024 W CTRPluginFramework::File::~File()
0700585c 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
0700588c 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07005998 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07005b64 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
07005e44 000000cc T CTRPluginFramework::Preferences::LoadSettings()
07005f10 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07005fcc 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
07006088 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
070060e4 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
07006134 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
070061b4 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
07006384 00000004 T CTRPluginFramework::Preferences::Initialize()
07006388 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07006474 00000010 T CTRPluginFramework::Glyph::Width() const
07006484 00000060 T CTRPluginFramework::Font::Initialize()
070064e4 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07006838 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07006b3c 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07006c48 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07006cb0 00000020 T CTRPluginFramework::Font::GetGlyph(char)
07006cd0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07006d00 00000028 T CTRPluginFramework::Window::~Window()
07006d00 00000028 T CTRPluginFramework::Window::~Window()
07006d28 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07006d28 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07006dc8 00000064 T CTRPluginFramework::Window::Draw() const
07006e2c 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07006f04 00000018 T CTRPluginFramework::Window::DrawButton() const
07006f1c 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07006f34 00000018 T CTRPluginFramework::Window::MustClose() const
07006f4c 0000002c T CTRPluginFramework::Window::Close() const
07006f78 00000004 T CTRPluginFramework::Window::GetRect() const
07006f7c 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
07006fa8 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07007050 00000020 W CTRPluginFramework::Renderer::GetContext()
07007070 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
070071a0 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700726c 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
070073b8 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
070074fc 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
07007534 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
070076d4 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
07007898 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
07007acc 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07007b3c 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
07007ba8 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
07007bbc 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07007be0 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07007bfc 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07007c2c 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07007c5c 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07007c84 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07007cac 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07007ccc 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07007d08 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07007d50 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07007d94 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
07007eb0 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
07007ed0 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07007f40 00000038 t __tls_init
07007f40 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07007f78 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07007fb4 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07008028 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07008094 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700811c 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
070081b0 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07008240 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
070082b8 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
07008328 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0700834c 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07008370 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
07008370 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
070083b0 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070083b8 00000008 T CTRPluginFramework::BMPImage::Width() const
070083c0 00000008 T CTRPluginFramework::BMPImage::Height() const
070083c8 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070083d0 00000010 T CTRPluginFramework::BMPImage::data() const
070083e0 0000001c T CTRPluginFramework::BMPImage::end() const
070083fc 00000010 W CTRPluginFramework::BMPImage::DataClear()
0700840c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700840c 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
070084b4 0000003c T CTRPluginFramework::BMPImage::Unload()
070084f0 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
0700862c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07008634 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07008884 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07008a58 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07008aa0 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07008ad0 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07008ba4 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
07008c24 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07008c48 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07008d64 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07008d64 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07008db8 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
070090d8 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070090d8 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009124 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07009170 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07009480 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07009540 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
07009670 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
070097dc 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0700981c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700981c 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700983c 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070099ac 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07009aa0 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07009b34 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07009bdc 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07009e68 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07009e68 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
07009eac 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07009f00 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0700a088 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0700a134 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0700a178 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0700a7f8 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700a9a0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0700a9a0 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0700a9cc 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0700a9cc 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0700a9ec 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
0700aa9c 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
0700aaf8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700aaf8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700ab7c 0000000c T CTRPluginFramework::OSDImpl::Lock()
0700ab88 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0700aba4 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0700abb0 000000cc T CTRPluginFramework::OSDImpl::Draw()
0700ac7c 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0700ad54 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
0700ad80 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0700adc8 0000020c T CTRPluginFramework::InstallOSD()
0700afd4 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
0700b01c 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0700b0f4 00000108 T CTRPluginFramework::OSDImpl::Update()
0700b1fc 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0700b884 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0700b8ec 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0700b958 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0700bb78 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0700bba4 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0700bbe0 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0700bc1c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0700bc58 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0700bc94 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0700bcd0 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0700bcfc 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0700bd38 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0700bd74 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0700bdb0 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0700bdec 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0700be18 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0700be54 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0700be80 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0700beac 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
0700bee8 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0700bf14 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0700bf50 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0700bf7c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0700bfb0 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0700bfec 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0700c018 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0700c054 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0700c080 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0700c0ac 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0700c0d8 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0700c104 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0700c130 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0700c15c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0700c188 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0700c1b4 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0700c1f0 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0700c21c 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
0700c2ac 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0700c2ac 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0700c2cc 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700c2cc 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700c2fc 0000001c W CTRPluginFramework::TextBox::~TextBox()
0700c318 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c318 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c3f8 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0700c3f8 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0700c48c 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0700c4ac 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0700c634 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0700c654 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0700c670 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0700c68c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0700c694 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0700c69c 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700c69c 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700c6bc 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0700c7a0 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
0700ce9c 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0700cef4 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0700cfd8 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0700d014 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0700d144 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0700d280 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0700d338 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0700d440 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700d440 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700d4c4 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0700d5b8 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0700d6f0 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0700d888 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700d888 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700d984 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700d984 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700db24 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0700db9c 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0700db9c 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0700dc78 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0700dc78 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0700dd90 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0700ddcc 00000058 T CTRPluginFramework::Menu::CloseAll()
0700de24 00000030 T CTRPluginFramework::Menu::~Menu()
0700de24 00000030 T CTRPluginFramework::Menu::~Menu()
0700de54 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0700de60 00000008 T CTRPluginFramework::Menu::GetFolder() const
0700de68 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0700de70 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
0700deb0 00000384 T CTRPluginFramework::Menu::Draw() const
0700e234 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
0700e2c0 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
0700e34c 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0700e574 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0700e6e8 00000068 T CTRPluginFramework::Menu::ShowNote()
0700e750 00000008 T CTRPluginFramework::Menu::CloseNote()
0700e758 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0700e760 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0700e7a0 00000044 T CTRPluginFramework::Menu::Pop()
0700e7e4 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0700e8a8 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0700e960 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0700e968 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
0700e968 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
0700e990 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
0700e9ac 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700e9ac 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700ea80 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700ea9c 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ea9c 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700eb54 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0700eb68 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0700ebb8 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
0700ebd0 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0700ebf4 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
0700ec9c 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0700ecac 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0700ecd0 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0700ed30 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0700ed40 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0700ed50 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0700ed60 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0700edb8 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700ee6c 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700ef4c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
0700efc4 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700efc4 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700f488 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0700f7a8 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0700f8b0 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0700fd04 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0700fe20 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0700feac 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0700fee8 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0700ff14 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0700ffe4 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07010064 0000007c T CTRPluginFramework::PluginMenuHome::Init()
070100e0 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07010164 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
070101c0 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07010200 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07010330 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0701066c 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07010880 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07010898 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
070108ac 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
070108c0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070108d4 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07010a10 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
07010a14 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07010a18 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07010a30 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07010a48 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07010a60 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07010a78 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07010a90 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07010aa8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07010ac0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07010ad8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07010af0 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
07010b34 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07010bac 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07010c10 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07010ca8 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
07010e4c 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07010fd0 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0701107c 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070111a0 0000005c t CTRPluginFramework::Reboot()
070111fc 00000064 t CTRPluginFramework::Shutdown()
07011260 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07011454 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
07011e54 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07011e54 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07011fe4 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07012100 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0701218c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
070121cc 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701233c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
070123e8 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
07012a00 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07012a3c 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07012a78 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07012a88 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012a88 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07012b60 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07012b60 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07012b9c 0000001c T CTRPluginFramework::SubMenu::operator()()
07012bb8 00000200 T CTRPluginFramework::SubMenu::Draw()
07012db8 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07012e7c 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07012e84 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
07012ea0 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07013044 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07013090 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
07013090 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
07013094 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
07013098 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
0701309c 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
07013238 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
07013334 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07013470 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
070134e8 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07013738 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701398c 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07013b88 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07013d68 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07013d84 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
07013e40 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07013e5c 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07013ecc 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
07013efc 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07013f38 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
07013fe0 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
07014014 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
07014044 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
070140d0 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07014168 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07014234 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
070142f0 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
070143a0 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07014534 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07014544 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07014554 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07014564 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07014564 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070147d8 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701481c 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
070149e4 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07014aa8 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07014b00 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07014be4 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07014d54 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07014ed8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
07014f04 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
07014f04 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
07014f6c 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
07014f94 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
070150e8 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701515c 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
070152fc 00000160 T CTRPluginFramework::HexEditor::_Update()
0701545c 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070156fc 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07015710 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07015710 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07015738 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07015754 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701586c 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701586c 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701593c 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07015944 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07015958 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07015964 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701596c 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07015990 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
070159c0 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
070159dc 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07015a44 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07015a44 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07015a64 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07015a80 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07015a80 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07015b14 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015b14 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015b74 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015b74 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07015bd4 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07015bd8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
07015c50 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
07015d10 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07015d44 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701613c 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07016154 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07016418 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
07016418 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
070165d8 00000158 T CTRPluginFramework::GuideReader::Draw()
07016730 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070167a4 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701680c 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701680c 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
07016854 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
070168a0 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
070168ac 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
070168d8 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
07016934 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
070169bc 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
07016a20 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
07016a20 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
07016a80 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016a80 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016c2c 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016c2c 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016de8 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07016de8 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07016e4c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07016e54 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
07016e5c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07016e64 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07016e6c 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
07016e74 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
07016fd8 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07017430 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070174c0 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
07017540 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
070175c4 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07017724 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
070179a4 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07017f10 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07017f78 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07017fc8 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07018038 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07018040 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
07018104 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070182e0 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07018344 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07018370 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07018370 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07018390 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701845c 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
07018518 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
070185dc 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07018b48 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
070190b8 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
07019170 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07019bc4 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07019c7c 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0701a8c0 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0701a904 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0701a9c0 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0701ab84 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
0701abd4 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0701ac2c 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0701ac74 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0701af98 00000254 T CTRPluginFramework::KeyboardImpl::Run()
0701b1ec 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0701b264 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0701b278 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0701b29c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
0701b324 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
0701b434 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701b490 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
0701b528 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0701b528 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0701b778 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0701b7ac 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701b800 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0701b824 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0701b84c 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0701b928 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0701ba4c 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0701bc18 00000028 W CTRPluginFramework::ARCode::~ARCode()
0701bc18 00000028 W CTRPluginFramework::ARCode::~ARCode()
0701bc40 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0701bdb8 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0701bf34 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0701c09c 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
0701c0d8 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0701c220 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0701c250 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701c324 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0701c524 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0701c59c 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0701c664 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0701c81c 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0701c9c4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
0701ca3c 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
0701ca98 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0701cbb0 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0701cc14 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0701cd80 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0701cd80 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0701d1d8 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0701d594 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0701d604 000000f4 t CTRPluginFramework::ClearSearchFolder()
0701d6f8 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0701d72c 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0701d954 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0701d97c 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0701d9ec 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0701dab4 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0701daf0 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0701dd58 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0701de3c 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0701de7c 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0701deac 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0701df80 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0701e20c 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701e5c4 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
0701e61c 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701e61c 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701e648 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
0701e654 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
0701e660 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0701e7bc 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0701e7f8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
0701e804 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
0701e810 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
0701e830 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0701e9cc 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0701ea28 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0701eb84 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0701eb9c 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0701ecc0 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0701ed84 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0701ef34 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0701eff8 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0701f078 00000044 T CTRPluginFramework::Search::UpdateProgress()
0701f0bc 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0701f250 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
0701f2c8 00000008 T CTRPluginFramework::Search::GetHeader() const
0701f2d0 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0701f318 0000000c T CTRPluginFramework::Search::GetType() const
0701f324 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0701f33c 00000070 T CTRPluginFramework::Search::WriteHeader()
0701f3ac 00000058 T CTRPluginFramework::Search::WriteResults()
0701f404 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0701f450 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0701f690 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0701f690 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0701f8d0 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0701f998 00000088 T CTRPluginFramework::Search::CreateIndexTable()
0701fa20 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fa20 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fbc8 00000080 T CTRPluginFramework::Search::Cancel()
0701fc48 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0701fd60 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
0701fe24 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
0701fee4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
0701ff5c 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
070201c4 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07020454 00000048 W CTRPluginFramework::Search::~Search()
07020454 00000048 W CTRPluginFramework::Search::~Search()
0702049c 00000044 T CTRPluginFramework::Search32::~Search32()
0702049c 00000044 T CTRPluginFramework::Search32::~Search32()
070204e0 0000001c T CTRPluginFramework::Search32::~Search32()
070204fc 0000001c W CTRPluginFramework::Search::~Search()
07020518 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07020518 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07020740 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07020740 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07020760 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07020760 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070207d8 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07020930 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0702097c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07020ac0 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07020c04 0000003c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07020c40 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07020c70 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07020d34 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07020d70 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07020da8 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07020e88 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07020ed4 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
070211ec 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07021364 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07021650 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
070217f4 0000002c T CTRPluginFramework::Screenshot::Initialize()
07021820 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070218cc 00000094 T CTRPluginFramework::SystemImpl::Initialize()
07021960 0000003c T CTRPluginFramework::SystemImpl::Status()
0702199c 000000c8 T CTRPluginFramework::HookManager::Init()
07021a64 00000018 T CTRPluginFramework::HookManager::Lock()
07021a7c 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
07021b24 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
07021b84 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
07021b84 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
07021bbc 00000038 T CTRPluginFramework::Scheduler::Core::Core()
07021bbc 00000038 T CTRPluginFramework::Scheduler::Core::Core()
07021bf4 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07021c3c 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07021d48 000000d4 T CTRPluginFramework::Scheduler::Initialize()
07021e1c 00000050 T CTRPluginFramework::Scheduler::Exit()
07021e6c 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07021e6c 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07021eb4 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
07021f20 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07021ff0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07022020 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
0702203c 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
07022144 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0702215c 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0702215c 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070221a0 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
070221f4 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
070222d4 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
0702240c 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
070224a8 00000030 T CTRPluginFramework::ScreenImpl::Copy()
070224d8 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
070224e0 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07022544 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
070225a8 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07022618 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702268c 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
070226fc 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
070227cc 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
07022890 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070228ec 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
07022990 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
070229e8 000000bc T CTRPluginFramework::ScreenImpl::Clean()
07022aa4 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
07022b7c 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
07022be4 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
07022bec 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
07022bf4 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
07022bfc 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
07022c18 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
07022c34 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
07022c8c 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
07022cbc 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
07022d18 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07022d90 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07022db4 00000004 t addrMapNodeDestructor(rbtree_node*)
07022db8 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07022ee8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07022ef0 00000070 T CTRPluginFramework::Heap::Free(void*)
07022f60 0000000c T CTRPluginFramework::Heap::SpaceFree()
07022f6c 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07022f9c 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070230a0 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702327c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702327c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07023340 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
070233a0 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
070233ac 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
070233ec 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
070233fc 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07023414 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07023428 00000004 T Kernel::Initialize()
0702342c 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07023444 0000000c T KProcess::GetCurrent()
07023450 00000024 T KProcess::PatchCore2Access()
07023474 0000002c T KProcess::PatchCategory(unsigned long)
070234a0 00000014 T KProcess__PatchCategory
070234b4 0000002c T KProcess::PatchMaxPriority(unsigned long)
070234e0 00000014 T KProcess__PatchMaxPriority
070234f4 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
07023578 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
070235ac 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
070235ac 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
070235cc 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
070236b0 00000018 T IsPaused
070236c8 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
07023704 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07023720 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702373c 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
070237a4 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07023820 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
070238bc 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702396c 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07023a34 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
07023b08 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
07023ba0 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07023bfc 00000090 T CTRPluginFramework::EventManager::EventManager()
07023bfc 00000090 T CTRPluginFramework::EventManager::EventManager()
07023c8c 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07023dec 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
07023e28 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
070240c4 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
070241bc 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
070241c4 0000002c W MemBlock::Create(unsigned char*, unsigned long)
070241f0 00000034 W MemPool::DelBlock(MemBlock*)
07024224 0000005c T MemPool::CoalesceRight(MemBlock*)
07024280 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
07024398 000000fc T MemPool::Deallocate(MemChunk const&)
07024494 00000020 T MemPool::GetFreeSpace()
070244b4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070244d8 00000004 t addrMapNodeDestructor(rbtree_node*)
070244dc 00000154 T vramMemAlign
07024630 00000008 T vramAlloc
07024638 00000070 T vramFree
070246a8 00000030 t _GLOBAL__sub_I_vramMemAlign
070246d8 000001d8 T threadCreate
070248b0 0000002c T threadFree
070248dc 00000024 T threadJoin
07024900 00000020 T threadGetCurrent
07024920 0000003c T threadExit
0702495c 0000003c t _thread_begin
07024998 00000050 T srvExit
070249e8 00000034 T srvRegisterClient
07024a1c 00000064 T srvInit
07024a80 00000068 T srvGetServiceHandleDirect
07024ae8 00000004 T srvGetServiceHandle
07024aec 00000034 T srvPublishToSubscriber
07024b20 00000034 T errfExit
07024b54 00000058 T errfInit
07024bac 0000003c T ERRF_Throw
07024be8 00000090 T ERRF_ExceptionHandler
07024c78 000000a8 T fontEnsureMapped
07024d20 00000110 T fontGlyphIndexFromCodePoint
07024e30 00000074 T fontGetCharWidthInfo
07024ea4 0000000c T __sync_init
07024eb0 00000018 T __sync_fini
07024ec8 00000018 T LightLock_Init
07024ee0 0000008c T LightLock_Lock
07024f6c 00000034 T LightLock_TryLock
07024fa0 00000050 T LightLock_Unlock
07024ff0 00000018 T RecursiveLock_Init
07025008 00000030 T RecursiveLock_Lock
07025038 00000044 T RecursiveLock_TryLock
0702507c 00000034 T RecursiveLock_Unlock
070250b0 00000030 T LightEvent_Init
070250e0 00000060 T LightEvent_Clear
07025140 00000064 T LightEvent_Pulse
070251a4 000000b4 T LightEvent_Signal
07025258 000000a8 T LightEvent_Wait
07025300 000000a0 T cfguInit
070253a0 00000034 T cfguExit
070253d4 00000044 T CFGU_GetConfigInfoBlk2
07025418 00000014 T CFGU_GetSystemLanguage
0702542c 00000028 t fsSession
07025454 00000044 t fsSessionForArchive
07025498 00000038 T fsExit
070254d0 00000028 T FSUSER_Initialize
070254f8 000000b0 T fsInit
070255a8 00000080 T FSUSER_OpenFile
07025628 00000068 T FSUSER_DeleteFile
07025690 000000a4 T FSUSER_RenameFile
07025734 00000068 T FSUSER_DeleteDirectoryRecursively
0702579c 00000080 T FSUSER_CreateFile
0702581c 00000070 T FSUSER_CreateDirectory
0702588c 000000a4 T FSUSER_RenameDirectory
07025930 0000006c T FSUSER_OpenDirectory
0702599c 00000074 T FSUSER_OpenArchive
07025a10 00000058 T FSFILE_Read
07025a68 00000060 T FSFILE_Write
07025ac8 00000038 T FSFILE_GetSize
07025b00 00000028 T FSFILE_SetSize
07025b28 0000003c T FSFILE_Close
07025b64 00000024 T FSFILE_Flush
07025b88 00000054 T FSDIR_Read
07025bdc 0000003c T FSDIR_Close
07025c18 00000104 T aptSendCommand
07025d1c 0000006c T APT_CheckNew3DS
07025d88 00000048 T APT_GetSharedFont
07025dd0 000000a0 T amInit
07025e70 00000034 T amExit
07025ea4 00000088 T acInit
07025f2c 00000034 T acExit
07025f60 000000bc T hidExit
0702601c 00000034 T hidCheckSectionUpdateTime
07026050 00000174 T hidScanInput
070261c4 00000010 T hidKeysHeld
070261d4 00000010 T hidKeysDown
070261e4 00000010 T hidKeysUp
070261f4 00000018 T hidTouchRead
0702620c 00000090 T HIDUSER_GetHandles
0702629c 00000174 T hidInit
07026410 000000e8 t gspEventThreadMain
070264f8 000000a0 T gspInitEventHandler
07026598 00000040 T gspExitEventHandler
070265d8 0000008c T gspExit
07026664 0000005c T gspWaitForEvent
070266c0 00000064 T GSPGPU_RegisterInterruptRelayQueue
07026724 000000dc T gspInit
07026800 00000034 T irrstCheckSectionUpdateTime
07026834 00000070 T irrstScanInput
070268a4 0000001c T irrstKeysHeld
070268c0 00000050 T IRRST_GetHandles
07026910 00000034 T IRRST_Initialize
07026944 00000128 T irrstInit
07026a6c 0000002c T IRRST_Shutdown
07026a98 000000a8 T irrstExit
07026b40 00000028 t __ctru_get_reent
07026b68 000000ec T __system_initSyscalls
07026c54 000000ac T utf8_to_utf16
07026d00 00000138 T decode_utf8
07026e38 0000005c T decode_utf16
07026e94 000000d4 T utf16_to_utf8
07026f68 000000e0 T encode_utf8
07027048 00000054 T encode_utf16
0702709c 00000054 T rbtree_find
070270f0 00000014 t is_black
07027104 000002bc T rbtree_remove
070273c0 00000050 T rbtree_node_next
07027410 00000090 T rbtree_rotate
070274a0 00000174 t do_insert
07027614 00000008 T rbtree_insert
0702761c 00000010 T rbtree_init
0702762c T LoadCROHooked
07027640 T AR__ExecuteRoutine
07027668 t stackBak
07027670 T svcCustomBackdoor
07027678 T svcConvertVAToPA
07027680 T svcFlushDataCacheRange
07027688 T svcMapProcessMemoryEx
0702769c T svcUnmapProcessMemoryEx
070276a4 T svcControlProcess
070276ac T svcQueryMemory
070276dc T svcCreateThread
070276fc T svcExitThread
07027704 T svcSleepThread
0702770c T svcSetThreadPriority
07027714 T svcCreateEvent
07027728 T svcSignalEvent
07027730 T svcClearEvent
07027738 T svcMapMemoryBlock
07027740 T svcUnmapMemoryBlock
07027748 T svcCreateAddressArbiter
0702775c T svcArbitrateAddress
07027774 T svcCloseHandle
0702777c T svcWaitSynchronization
07027784 T svcWaitSynchronizationN
070277ac T svcGetSystemTick
070277b4 T svcGetSystemInfo
070277cc T svcGetProcessInfo
070277e4 T svcConnectToPort
070277f8 T svcSendSyncRequest
07027800 T svcOpenProcess
07027814 T svcGetProcessId
07027828 T svcBreak
07027830 T svcInvalidateProcessDataCache
07027838 T svcFlushProcessDataCache
07027840 T svcKernelSetState
07027848 T svcQueryProcessMemory
0702786c 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070278e8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070278e8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07027910 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07027910 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07027940 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07027948 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07027948 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07027990 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07027990 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070279cc 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
070279cc 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07027a08 00000008 T CTRPluginFramework::MessageBox::operator()() const
07027a10 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07027ad4 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07027b7c 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027b7c 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027bc4 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07027bc4 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07027c2c 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07027c2c 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07027c58 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07027c60 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07027c7c 00000028 T CTRPluginFramework::Keyboard::Open() const
07027ca4 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07027d1c 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07027dcc 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07027e20 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07027e88 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07027e90 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07027e98 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07027f34 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07027fc0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07028068 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07028150 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070281dc 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07028284 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0702836c 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070283f8 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
070284a0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07028588 00000028 t __tcf_0
070285b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07028628 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07028630 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
070286b0 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
0702872c 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07028804 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07028804 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07028844 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07028854 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07028914 00000020 T CTRPluginFramework::HotkeyManager::Count()
07028934 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07028a60 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07028b88 00000030 t CTRPluginFramework::GetCurrentTime()
07028bb8 00000014 T CTRPluginFramework::Clock::Clock()
07028bb8 00000014 T CTRPluginFramework::Clock::Clock()
07028bcc 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07028bcc 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
07028bd4 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
07028c0c 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07028c3c 00000044 T CTRPluginFramework::Clock::Restart()
07028c80 00000014 T CTRPluginFramework::Touch::IsDown()
07028c94 00000028 T CTRPluginFramework::Touch::GetPosition()
07028cbc 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07028cbc 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07028d40 00000048 T CTRPluginFramework::Task::~Task()
07028d40 00000048 T CTRPluginFramework::Task::~Task()
07028d88 00000030 T CTRPluginFramework::Task::Start() const
07028db8 00000044 T CTRPluginFramework::Task::Wait() const
07028dfc 00000014 T CTRPluginFramework::Task::Status() const
07028e10 00000014 T CTRPluginFramework::Controller::GetKeysDown()
07028e24 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
07028e40 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
07028e5c 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
07028e78 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
07028e94 0000002c T CTRPluginFramework::Controller::Update()
07028ec0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07028ec0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07028ee8 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07028f68 00000048 T CTRPluginFramework::LineWriter::Flush()
07028fb0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07028fb0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07028fcc 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029038 00000018 T CTRPluginFramework::LineWriter::Close()
07029050 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029114 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
0702918c 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
070294c8 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
070294c8 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
070294e8 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07029570 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07029570 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702969c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
070296d8 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070297d8 00000084 T CTRPluginFramework::ARCode::Update()
0702985c 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702985c 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07029880 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
070298a8 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070298a8 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07029960 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07029960 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07029994 00000040 T CTRPluginFramework::ARCodeContext::Update()
070299d4 00000090 T CTRPluginFramework::ARCodeContext::Clear()
07029a64 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07029b3c 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07029b3c 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
07029b5c 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
07029b74 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029c68 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
07029c84 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029d98 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029da8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
07029e20 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
07029e38 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07029e8c 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029ed0 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029f18 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702a3ec 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702a3ec 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702a430 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702a430 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702a444 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702a464 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702a5dc 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702a700 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0702ae34 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702ae84 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702ae84 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702aeec 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702af08 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702af08 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702af54 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
0702b070 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0702b100 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0702b218 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
0702b2a0 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0702b2fc 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702b2fc 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702b374 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702b374 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702b374 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702b374 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702b3c4 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0702c718 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702c718 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702c8ac 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0702cb60 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0702cbe8 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702cc2c 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0702cc40 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0702cc7c 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702cde4 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702ce20 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0702ce84 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0702cea8 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702ced0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0702ced0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0702cef8 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0702d278 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0702d8fc 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0702d948 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702da00 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0702de74 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702e340 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0702e438 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
0702e4c0 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
0702e4fc 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0702e820 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0702e89c 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0702e908 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0702e940 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0702e9bc 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0702ed88 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0702ef8c 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0702f02c 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0702f0e8 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0702f1a4 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0702f250 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0702f2dc 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702f454 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0702f568 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0702f610 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0702f678 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702f708 00000160 T ARM_Disasm::Decode01(unsigned long)
0702f868 00000028 T ARM_Disasm::Decode10(unsigned long)
0702f890 0000007c T ARM_Disasm::Decode11(unsigned long)
0702f90c 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
0702f974 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0702f9c4 00000118 T ARM_Disasm::DecodeALU(unsigned long)
0702fadc 000000c4 T ARM_Disasm::Decode00(unsigned long)
0702fba0 00000030 T ARM_Disasm::Decode(unsigned long)
0702fbd0 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
0702fca8 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0702ff8c 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0703027c 00000020 T CTRPluginFramework::Button::~Button()
0703027c 00000020 T CTRPluginFramework::Button::~Button()
0703029c 0000001c T CTRPluginFramework::Button::~Button()
070302b8 00000040 T CTRPluginFramework::Button::operator()()
070302f8 00000148 T CTRPluginFramework::Button::Draw()
07030440 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07030594 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07030594 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070306b8 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070306b8 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070306d8 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070306d8 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703076c 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703076c 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07030780 00000018 T CTRPluginFramework::Button::Enable(bool)
07030798 00000010 T CTRPluginFramework::Button::Enable()
070307a8 00000010 T CTRPluginFramework::Button::Disable()
070307b8 00000010 T CTRPluginFramework::Button::Lock()
070307c8 00000010 T CTRPluginFramework::Button::Execute()
070307d8 00000018 T CTRPluginFramework::Button::SetState(bool)
070307f0 00000010 T CTRPluginFramework::Button::GetState() const
07030800 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07030860 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
070309c8 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07030b34 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07030bd4 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07030dbc 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07030dec 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07030dec 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07030e00 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07030e00 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07030e20 00000024 T CTRPluginFramework::UIContainer::Draw()
07030e44 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07030e78 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07030f3c 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07030f7c 00000094 T CTRPluginFramework::ComboBox::Draw()
07031010 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07031010 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
0703105c 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07031078 000000a8 T CTRPluginFramework::ComboBox::operator()()
07031120 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07031120 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703116c 0000003c T CTRPluginFramework::ComboBox::Clear()
070311a8 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070311f8 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703127c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703127c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07031280 00000014 T CTRPluginFramework::FloatingButton::Draw()
07031294 00000014 T CTRPluginFramework::FloatingButton::operator()()
070312a8 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
070312bc 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
0703147c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703147c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070314bc 00000008 W CTRPluginFramework::Drawable::operator()()
070314c4 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070314c8 000002f0 T CTRPluginFramework::TextBox::Draw()
070317b8 00000094 T CTRPluginFramework::TextBox::TextBox()
070317b8 00000094 T CTRPluginFramework::TextBox::TextBox()
0703184c 0000000c T CTRPluginFramework::TextBox::Open() const
07031858 0000000c T CTRPluginFramework::TextBox::Close() const
07031864 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0703186c 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07031ab4 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07031ac0 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07031b58 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07031c0c 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07031c64 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
07031c94 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07031d50 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
07031e0c 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
07031fd4 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07031fd4 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07032118 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07032200 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032200 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032378 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032378 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070324d0 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07032548 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
070327fc 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07032998 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07032998 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07032a58 0000009c T CTRPluginFramework::TouchKeyString::Draw()
07032af4 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07032b94 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07032bac 00000030 T CTRPluginFramework::TouchKeyString::operator()()
07032bdc 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07032c7c 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07032c7c 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07032d2c 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07032d2c 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07032dd8 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07032dd8 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07032e58 00000040 T CTRPluginFramework::TouchKey::Clear()
07032e98 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07032e98 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07032eb8 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07032ed4 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07032edc 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07032f3c 00000060 T CTRPluginFramework::TouchKey::Draw()
07032f9c 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07033038 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070330fc 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070330fc 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0703324c 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703324c 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0703326c 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07033288 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07033304 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
0703333c 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070333a4 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
0703349c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070334ac 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070334bc 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070334c4 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070334d0 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070334d0 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07033538 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070335ac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
07033624 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07033624 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07033670 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07033730 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07033868 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07033890 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070338f4 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07033c04 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07033cf8 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07033f40 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703426c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
070342f4 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
0703438c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07034408 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
070344bc 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07034648 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07034690 00000148 T CTRPluginFramework::SearchMenu::_Export()
070347d8 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
07034930 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
07034a14 00000030 W std::__cxx11::to_string(unsigned long)
07034a44 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07034a44 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07034af8 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07034b7c 00000548 T CTRPluginFramework::SearchMenu::Draw()
070350c4 00000230 T CTRPluginFramework::SearchMenu::Update()
070352f4 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07035804 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07035894 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070359b0 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
07035a20 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
07035ac4 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07035af0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07035af0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07035b20 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07035b20 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07035b8c 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07035ce0 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07035d1c 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035d1c 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035e88 000000e4 T CTRPluginFramework::Converter::Converter()
07035e88 000000e4 T CTRPluginFramework::Converter::Converter()
07035f6c 00000010 T CTRPluginFramework::Converter::Instance()
07035f7c 00000108 T CTRPluginFramework::Converter::_Draw()
07036084 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
07036084 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
07036098 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
070362b4 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07036738 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07036bc0 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703703c 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07037664 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07037f70 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07038880 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07039154 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07039d94 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703a638 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703af74 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b898 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c634 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d298 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d9dc 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703dde4 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703e4c4 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703e754 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703e9fc 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703ec8c 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0703ecc0 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703efe4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0703f008 00000004 t addrMapNodeDestructor(rbtree_node*)
0703f00c 000000d8 T mappableAlloc
0703f0e4 00000050 T mappableFree
0703f134 00000090 T __system_allocateHeaps
0703f1c4 0000005c t getSysTime
0703f220 000000fc T __libctru_gtod
0703f31c 00000008 T envGetHandle
0703f324 00000004 T envDestroyHandles
0703f328 00000020 T __libctru_exit
0703f348 00000020 T __appExit
0703f368 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703f368 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703f394 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703f394 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703f3ac 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703f4b4 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
0703f514 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0703f51c 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0703f540 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0703f564 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0703f588 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0703f5b0 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0703f5d8 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0703f600 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0703f6d0 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07041544 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
070415b4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
070415d4 00000004 T operator delete[](void*)
070415d8 00000004 T operator new[](unsigned int)
070415dc 0000005c T __cxa_guard_acquire
07041638 0000000c T __cxa_guard_release
07041644 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
070416a4 00000070 T __cxa_init_primary_exception
07041714 00000054 T __cxa_throw
07041768 000000b0 T __cxa_rethrow
07041818 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07041818 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07041838 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07041864 00000004 T std::exception::~exception()
07041864 00000004 T std::exception::~exception()
07041868 00000004 T std::bad_exception::~bad_exception()
07041868 00000004 T std::bad_exception::~bad_exception()
0704186c 0000000c T transaction clone for std::exception::what() const
0704186c 0000000c T std::exception::what() const
07041878 0000000c T transaction clone for std::bad_exception::what() const
07041878 0000000c T std::bad_exception::what() const
07041884 00000018 T std::bad_exception::~bad_exception()
0704189c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704189c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070418bc 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070418e8 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07041954 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07041a28 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07041a6c 0000000c T __cxa_get_globals_fast
07041a78 0000000c T __cxa_get_globals
07041a84 00000004 T operator delete(void*, unsigned int)
07041a88 000000d0 T __cxa_begin_catch
07041b58 000000d8 T __cxa_end_catch
07041c30 00000004 T std::type_info::~type_info()
07041c30 00000004 T std::type_info::~type_info()
07041c34 00000008 T std::type_info::__is_pointer_p() const
07041c34 00000008 T std::type_info::__is_function_p() const
07041c3c 0000004c T std::type_info::operator==(std::type_info const&) const
07041c88 00000008 T __cxa_pure_virtual
07041c90 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07041df8 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
07041e58 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07041f38 0000074c T __gxx_personality_v0
07042684 00000004 T operator delete(void*)
07042688 0000005c T operator new(unsigned int)
070426e4 00000010 T __aeabi_atexit
070426f4 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
070427c4 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
07042878 00000044 T __cxa_allocate_exception
070428bc 00000030 T __cxa_free_exception
070428ec 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704292c 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07042988 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704299c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704299c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
070429bc 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
070429e8 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07042a50 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07042a7c 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07042ac0 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07042ad8 00000014 T std::__detail::_List_node_base::_M_unhook()
07042aec 0000002c T std::__throw_bad_alloc()
07042b18 00000040 T std::__throw_logic_error(char const*)
07042b58 00000040 T std::__throw_invalid_argument(char const*)
07042b98 00000040 T std::__throw_length_error(char const*)
07042bd8 00000040 T std::__throw_out_of_range(char const*)
07042c18 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
07042c94 00000038 T std::logic_error::logic_error(char const*)
07042c94 00000038 T std::logic_error::logic_error(char const*)
07042ccc 00000020 T std::invalid_argument::invalid_argument(char const*)
07042ccc 00000020 T std::invalid_argument::invalid_argument(char const*)
07042cec 00000020 T std::length_error::length_error(char const*)
07042cec 00000020 T std::length_error::length_error(char const*)
07042d0c 00000020 T std::out_of_range::out_of_range(char const*)
07042d0c 00000020 T std::out_of_range::out_of_range(char const*)
07042d2c 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07042db0 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07042db4 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
07042e64 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07042e64 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07042ea4 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07042ef8 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07042f0c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07042f30 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07042f54 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704300c 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0704311c 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07043190 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07043190 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070431fc 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
070431fc 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07043220 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070432b0 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
070433c4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07043430 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0704349c 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
070434e0 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
070434f8 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
070435fc 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
07043634 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
070438bc 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
070438f4 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07043940 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
070439a0 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07043a34 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07043a44 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07043a54 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07043a80 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07043ac8 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07043b10 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07043bb8 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
07043bc8 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07043c38 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07043c68 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
07043cb4 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
07043d64 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07043d64 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07043d94 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07043e0c 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
07043e7c 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
07043ef4 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07043ff4 00000014 T std::get_new_handler()
07044008 00000034 T __cxxabiv1::__terminate(void (*)())
0704403c 00000018 T std::terminate()
07044054 0000000c T __cxxabiv1::__unexpected(void (*)())
07044060 00000018 T std::unexpected()
07044078 00000014 T std::get_terminate()
0704408c 00000014 T std::get_unexpected()
070440a0 0000000c T std::bad_alloc::what() const
070440ac 00000020 T std::bad_alloc::~bad_alloc()
070440ac 00000020 T std::bad_alloc::~bad_alloc()
070440cc 0000002c T std::bad_alloc::~bad_alloc()
070440f8 T __cxa_end_cleanup
07044108 00000138 T __cxa_type_match
07044240 000000b4 T __cxa_begin_cleanup
070442f4 000000b4 T __gnu_end_cleanup
070443a8 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07044418 0000002c T __cxa_call_terminate
07044444 0000013c T __cxa_call_unexpected
07044580 00000008 T std::logic_error::what() const
07044588 00000064 T std::logic_error::~logic_error()
07044588 00000064 T std::logic_error::~logic_error()
070445ec 0000001c T std::logic_error::~logic_error()
07044608 00000020 T std::invalid_argument::~invalid_argument()
07044608 00000020 T std::invalid_argument::~invalid_argument()
07044628 00000028 T std::invalid_argument::~invalid_argument()
07044650 00000020 T std::length_error::~length_error()
07044650 00000020 T std::length_error::~length_error()
07044670 00000028 T std::length_error::~length_error()
07044698 00000020 T std::out_of_range::~out_of_range()
07044698 00000020 T std::out_of_range::~out_of_range()
070446b8 00000028 T std::out_of_range::~out_of_range()
070446e0 00000174 T ceil
07044854 000000b8 T ceilf
07044910 00000174 T floor
07044a84 00000088 T roundf
07044b10 00000020 T log2
07044b30 0000015c T log
07044c90 000002c4 T __ieee754_log
07044f54 00000008 T matherr
07044f60 00000010 T nan
07044f70 0000002c T __aeabi_f2lz
07044f70 0000002c T __fixsfdi
07044f9c 0000002c T __aeabi_d2lz
07044f9c 0000002c T __fixdfdi
07044fc8 00000050 T __aeabi_f2ulz
07044fc8 00000050 T __fixunssfdi
07045018 00000050 T __aeabi_d2ulz
07045018 00000050 T __fixunsdfdi
07045068 00000158 T __udivmoddi4
070451c0 00000018 t selfrel_offset31
070451d8 0000008c t search_EIT_table
07045264 00000040 t __gnu_unwind_get_pr_addr
070452a4 00000118 t get_eit_entry
070453bc 00000088 t restore_non_core_regs
07045444 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
07045458 00000004 t _Unwind_DebugHook
0704545c 00000068 t unwind_phase2
070454c4 00000134 t unwind_phase2_forced
070455f8 000000a8 T __gnu_Unwind_RaiseException
070456a0 00000024 T __gnu_Unwind_ForcedUnwind
070456c4 00000074 T __gnu_Unwind_Resume
07045738 00000020 T __gnu_Unwind_Resume_or_Rethrow
07045758 00000004 T _Unwind_Complete
0704575c 00000018 T _Unwind_DeleteException
07045774 00000068 T _Unwind_VRS_Get
070457dc 0000002c t _Unwind_GetGR
07045808 00000068 T _Unwind_VRS_Set
07045870 0000002c t _Unwind_SetGR
0704589c 000000c0 T __gnu_Unwind_Backtrace
0704595c 0000044c t __gnu_unwind_pr_common
07045da8 00000008 T __aeabi_unwind_cpp_pr0
07045db0 00000008 W __aeabi_unwind_cpp_pr1
07045db8 00000008 W __aeabi_unwind_cpp_pr2
07045dc0 00000418 T _Unwind_VRS_Pop
070461d8 00000060 t next_unwind_byte
07046238 0000002c t _Unwind_GetGR.constprop.0
07046264 00000004 t unwind_UCB_from_context
07046268 000003c8 T __gnu_unwind_execute
07046630 00000048 T __gnu_unwind_frame
07046678 00000010 T _Unwind_GetRegionStart
07046688 0000001c T _Unwind_GetLanguageSpecificData
070466a4 00000008 T _Unwind_GetDataRelBase
070466ac 00000008 T _Unwind_GetTextRelBase
070466b4 00000010 T ctime
070466c4 00000014 T __cxa_atexit
070466d8 0000000c T __errno
070466e4 0000007c T __libc_init_array
07046760 0000001c T isspace
0704677c 0000001c T isxdigit
07046798 0000001c T localtime
070467b4 00000364 T localtime_r
07046b18 00000024 T __locale_mb_cur_max
07046b3c 00000008 T __locale_ctype_ptr_l
07046b44 00000024 T __locale_ctype_ptr
07046b68 00000020 T memalign
07046b88 00000158 T _memalign_r
07046ce0 00000018 T malloc
07046cf8 00000018 T free
07046d10 000007a8 T _malloc_r
070474b8 000002fc T __utf8_mbtowc
070477b4 00000100 T memchr
070478b4 000000fc T memcmp
070479b0 0000010c T memcpy
07047abc 0000013c T memmove
07047bf8 00000110 T memset
07047d08 0000000c T __malloc_lock
07047d14 0000000c T __malloc_unlock
07047d20 000000c8 T snprintf
07047de8 00000064 T sprintf
07047e4c 00000008 T __seofread
07047e54 000000f0 T strcpy
07047f44 00000158 t iso_year_adjust
0704809c 00001024 t __strftime
070490c0 00000050 T strftime
07049110 0000005c T strlen
0704916c 000000f8 T strncmp
07049264 000000d8 T strncpy
0704933c 00000054 t sulp
07049390 00001464 T _strtod_l
0704a7f8 000000b8 T strtof
0704a8b0 000001bc t _strtol_l.isra.0
0704aa6c 00000050 T _strtol_r
0704aac0 00000260 t _strtoull_l.isra.0
0704ad20 00000050 T _strtoull_r
0704ad70 000001d0 t _strtoul_l.isra.0
0704af40 00000050 T _strtoul_r
0704af90 00000054 T strtoul
0704afe4 000074a0 t get_arg
07052488 00003e2c T _svfprintf_r
070562b4 00000038 T time
070562ec 00000218 T __tzcalc_limits
07056504 0000000c T __tz_lock
07056510 0000000c T __tz_unlock
0705651c 00000010 T _tzset_unlocked
0705652c 0000049c T _tzset_unlocked_r
070569c8 000000a0 T _vsnprintf_r
07056a68 00000038 T vsnprintf
07056aa0 000000a0 T _wcrtomb_r
07056b40 00000020 T _wcsrtombs_r
07056b60 000000e8 T __utf8_wctomb
07056c48 0000000c T abs
07056c54 0000001c T asctime
07056c70 00000078 T asctime_r
07056ce8 000000f4 T __register_exitproc
07056ddc 000001bc t quorem
07056f98 00001224 T _dtoa_r
070581bc 000000f8 T _malloc_trim_r
070582b4 000002e4 T _free_r
07058598 00000104 t rshift
0705869c 000007f8 T __gethex
07058e94 00000060 T __match
07058ef4 00000254 T __hexnan
07059148 000000c8 T _findenv_r
07059210 00000018 T _getenv_r
07059228 0000000c T __gettzinfo
07059234 00000280 T gmtime_r
070594b4 0000000c T labs
070594c0 00000008 T __localeconv_l
070594c8 00000024 T _localeconv_r
070594ec 00000088 T _Balloc
07059574 0000001c T _Bfree
07059590 000000d0 T __multadd
07059660 000000e0 T __s2b
07059740 00000058 T __hi0bits
07059798 0000009c T __lo0bits
07059834 00000020 T __i2b
07059854 000001d4 T __multiply
07059a28 00000100 T __pow5mult
07059b28 000000e8 T __lshift
07059c10 0000005c T __mcmp
07059c6c 00000168 T __mdiff
07059dd4 00000078 T __ulp
07059e4c 000000d0 T __b2d
07059f1c 00000104 T __d2b
0705a020 00000084 T __ratio
0705a0a4 00000088 T __copybits
0705a12c 00000078 T __any_on
0705a1a4 0000000c T nanf
0705a1b0 0000009c T frexp
0705a24c 00000064 T siprintf
0705a2b0 00000074 T siscanf
0705a324 000000c8 T sniprintf
0705a3ec 000074a0 t get_arg
0706188c 00000188 T __ssprint_r
07061a14 0000295c T _svfiprintf_r
07064370 000000dc T _sungetc_r
0706444c 0000006c T __ssrefill_r
070644b8 000000c8 T _sfread_r
07064580 00001d84 T __ssvfiscanf_r
07066304 000000a4 T __submore
070663a8 00000170 T _wcsnrtombs_l
07066518 00000064 T _wcsnrtombs_r
0706657c 00000090 T _calloc_r
0706660c 0000000c T __env_lock
07066618 0000000c T __env_unlock
07066624 00000074 T iswspace
07066698 000001e0 t __jp2uc
07066878 000000c4 T _jp2uc
0706693c 000000b4 T _mbrtowc_r
070669f0 000004d0 T _realloc_r
07066ec0 000000cc T __sccl
07066f8c 00000274 t _strtoll_l.isra.0
07067200 00000050 T _strtoll_r
07067250 0000002c T _gettimeofday_r
0706727c 00000070 T _sbrk_r
070672ec 00000018 T __libc_lock_acquire
07067304 00000018 T __libc_lock_release
0706731c 00000018 T __libc_lock_acquire_recursive
07067334 00000018 T __libc_lock_release_recursive
0706734c 00000028 T __getreent
07067374 T _fini
0706738c 00000030 r ._184
070673f8 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07067438 00000058 r CTRPluginFramework::g_OSDPattern
070674c0 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
070674d4 00000048 r CTRPluginFramework::g_ctrpf
0706751c 00000030 r CTRPluginFramework::g_byme
07067578 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
07067590 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
070675a8 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
070675c0 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
070675d8 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
070675e0 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
070675fc 00000038 R vtable for CTRPluginFramework::Search
07067634 00000038 R vtable for CTRPluginFramework::Search32
0706766c 00000005 r CSWTCH.74
07067674 00000004 R Search15_array_length
07067678 00000384 r Search15_array
070679fc 00000004 R UnCheckedCheckbox_array_length
07067a00 00000384 r UnCheckedCheckbox_array
07067d84 00000004 R Unsplash15_array_length
07067d88 00000384 r Unsplash15_array
0706810c 00000004 R Plus25_array_length
07068110 000009c4 r Plus25_array
07068ad4 00000004 R GameControllerFilled25_array_length
07068ad8 000009c4 r GameControllerFilled25_array
0706949c 00000004 R About15_array_length
070694a0 00000384 r About15_array
07069824 00000004 R Trash25_array_length
07069828 000009c4 r Trash25_array
0706a1ec 00000004 R Cut25_array_length
0706a1f0 000009c4 r Cut25_array
0706abb4 00000004 R CloseWindow20_array_length
0706abb8 00000640 r CloseWindow20_array
0706b1f8 00000004 R AddFavoriteFilled25_array_length
0706b1fc 000009c4 r AddFavoriteFilled25_array
0706bbc0 00000004 R ClearSymbolFilled15_array_length
0706bbc4 00000384 r ClearSymbolFilled15_array
0706bf48 00000004 R ClipboardFilled25_array_length
0706bf4c 000009c4 r ClipboardFilled25_array
0706c910 00000004 R CheckedCheckbox_array_length
0706c914 00000384 r CheckedCheckbox_array
0706cc98 00000004 R CutFilled25_array_length
0706cc9c 000009c4 r CutFilled25_array
0706d660 00000004 R CapsLockOn15_array_length
0706d664 00000384 r CapsLockOn15_array
0706d9e8 00000004 R TrashFilled25_array_length
0706d9ec 000009c4 r TrashFilled25_array
0706e3b0 00000004 R RAM15_array_length
0706e3b4 00000384 r RAM15_array
0706e738 00000004 R More15_array_length
0706e73c 00000384 r More15_array
0706eac0 00000004 R InfoFilled25_array_length
0706eac4 000009c4 r InfoFilled25_array
0706f488 00000004 R CloseWindowFilled20_array_length
0706f48c 00000640 r CloseWindowFilled20_array
0706facc 00000004 R HandCursor15_array_length
0706fad0 00000384 r HandCursor15_array
0706fe54 00000004 R EnterKey15_array_length
0706fe58 00000384 r EnterKey15_array
070701dc 00000004 R Duplicate25_array_length
070701e0 000009c4 r Duplicate25_array
07070ba4 00000004 R Settings15_array_length
07070ba8 00000384 r Settings15_array
07070f2c 00000004 R File15_array_length
07070f30 00000384 r File15_array
070712b4 00000004 R AddFavorite25_array_length
070712b8 000009c4 r AddFavorite25_array
07071c7c 00000004 R Edit25_array_length
07071c80 000009c4 r Edit25_array
07072644 00000004 R DuplicateFilled25_array_length
07072648 000009c4 r DuplicateFilled25_array
0707300c 00000004 R Save25_array_length
07073010 000009c4 r Save25_array
070739d4 00000004 R Clipboard25_array_length
070739d8 000009c4 r Clipboard25_array
0707439c 00000004 R Info25_array_length
070743a0 000009c4 r Info25_array
07074d64 00000004 R EditFilled25_array_length
07074d68 000009c4 r EditFilled25_array
0707572c 00000004 R KeyboardFilled25_array_length
07075730 000009c4 r KeyboardFilled25_array
070760f4 00000004 R PlusFilled25_array_length
070760f8 000009c4 r PlusFilled25_array
07076abc 00000004 R Shutdown15_array_length
07076ac0 00000384 r Shutdown15_array
07076e44 00000004 R ClearSymbol15_array_length
07076e48 00000384 r ClearSymbol15_array
070771cc 00000004 R Maintenance15_array_length
070771d0 00000384 r Maintenance15_array
07077554 00000004 R Controller15_array_length
07077558 00000384 r Controller15_array
070778dc 00000004 R Grid15_array_length
070778e0 00000384 r Grid15_array
07077c64 00000004 R Keyboard25_array_length
07077c68 000009c4 r Keyboard25_array
0707862c 00000004 R CapsLockOnFilled15_array_length
07078630 00000384 r CapsLockOnFilled15_array
070789b4 00000004 R UserManualFilled15_array_length
070789b8 00000384 r UserManualFilled15_array
07078d3c 00000004 R Rocket40_array_length
07078d40 00001900 r Rocket40_array
0707a640 00000004 R Star15_array_length
0707a644 00000384 r Star15_array
0707a9c8 00000004 R EnterKeyFilled15_array_length
0707a9cc 00000384 r EnterKeyFilled15_array
0707ad50 00000004 R GameController25_array_length
0707ad54 000009c4 r GameController25_array
0707b718 00000004 R FolderFilled_array_length
0707b71c 00000384 r FolderFilled_array
0707baa0 00000004 R Restart15_array_length
0707baa4 00000384 r Restart15_array
0707be58 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0707be74 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0707be80 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0707bf00 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0707bf14 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0707bf1c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0707bf24 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0707bf2c 00000040 r RegNames
0707bf6c 00000040 r cond_names
0707bfac 00000010 r shift_names
0707bfbc 0000001c R vtable for CTRPluginFramework::Button
0707bfd8 00000a00 r font
0707c9d8 0000001c R vtable for CTRPluginFramework::ComboBox
0707c9f4 0000001c R vtable for CTRPluginFramework::FloatingButton
0707ca10 0000001c R vtable for CTRPluginFramework::TextBox
0707ca2c 0000001c R vtable for CTRPluginFramework::TouchKey
0707ca48 0000001c R vtable for CTRPluginFramework::NumericTextBox
0707ca64 00000038 r CTRPluginFramework::stable
0707ca9c 00000038 r CTRPluginFramework::ktable
0707d04c 00000014 V vtable for CTRPluginFramework::MenuItem
0707d728 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0707ebd4 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0707ebe0 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0707ec04 00000014 R vtable for __gnu_cxx::recursive_init_error
0707ec3c 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0707ec44 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0707ec4c 0000000c R typeinfo for std::bad_exception
0707ec58 00000008 R typeinfo for std::exception
0707ec60 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0707ec80 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0707eca4 00000012 R typeinfo name for std::bad_exception
0707ecb8 0000000d R typeinfo name for std::exception
0707ecc8 00000014 R vtable for std::bad_exception
0707ecdc 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0707ece8 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0707ed10 0000002c R vtable for __cxxabiv1::__si_class_type_info
0707ed3c 00000008 R typeinfo for std::type_info
0707ed44 0000000d R typeinfo name for std::type_info
0707ed54 0000000c R typeinfo for __cxxabiv1::__class_type_info
0707ed60 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0707ed84 0000002c R vtable for __cxxabiv1::__class_type_info
0707efac 0000000c R typeinfo for std::bad_alloc
0707efb8 0000000d R typeinfo name for std::bad_alloc
0707efc8 00000014 R vtable for std::bad_alloc
0707efdc 0000000c R typeinfo for std::logic_error
0707efe8 0000000c R typeinfo for std::length_error
0707eff4 0000000c R typeinfo for std::out_of_range
0707f000 0000000c R typeinfo for std::invalid_argument
0707f00c 00000010 R typeinfo name for std::logic_error
0707f01c 00000011 R typeinfo name for std::length_error
0707f030 00000011 R typeinfo name for std::out_of_range
0707f044 00000015 R typeinfo name for std::invalid_argument
0707f05c 00000014 R vtable for std::logic_error
0707f070 00000014 R vtable for std::length_error
0707f084 00000014 R vtable for std::out_of_range
0707f098 00000014 R vtable for std::invalid_argument
0707f0b0 00000004 R _global_impure_ptr
0707f0fc 00000060 R __month_lengths
0707f1e8 00000014 r fpi.7439
0707f1fc 00000014 r fpinan.7475
0707f210 00000028 r tinytens
0707f27c 00000010 r blanks.8562
0707f28c 00000010 r zeroes.8563
0707f29c 000000fc R _C_time_locale
0707f564 00000015 r day_name.6011
0707f57c 00000024 r mon_name.6012
0707f5a0 00000101 R _ctype_
0707f6b4 00000100 R __hexdig
0707f7b8 00000028 R __mprec_bigtens
0707f7e0 000000c8 R __mprec_tens
0707f8a8 0000000c r p05.7353
0707f8b4 0000006c R __action_table
0707f920 00000100 R __chclass
0707fa20 0000006c R __state_table
0707fa8c 00000010 r blanks.8541
0707fa9c 00000010 r zeroes.8542
0707faac 00000022 r basefix.8096
0707fae4 000000bc r a1
0707fba0 000000bc r a2
0707fc5c 0000005b r a3
0707fcb8 00000070 r a6
0707fd28 000000a2 r a7
0707fdcc 00000040 r a8
0707fe0c 0000172a r b02cf
07081538 00001a7c r d02f4
070830d8 R __exidx_start
070832e8 R __exidx_end
070832e8 00000001 D CTRPluginFramework::g_keepRunning
070832ec 00000004 D CTRPluginFramework::FwkSettings::Header
070832f0 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070832f4 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070832f8 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
070832fc 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
07083300 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07083304 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07083308 00000004 D CTRPluginFramework::Screenshot::Screens
0708330c 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07083310 00000001 D CTRPluginFramework::SystemImpl::Language
07083311 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
07083314 00000004 D Search15
07083318 00000004 D UnCheckedCheckbox
0708331c 00000004 D Unsplash15
07083320 00000004 D Plus25
07083324 00000004 D GameControllerFilled25
07083328 00000004 D About15
0708332c 00000004 D Trash25
07083330 00000004 D Cut25
07083334 00000004 D CloseWindow20
07083338 00000004 D AddFavoriteFilled25
0708333c 00000004 D ClearSymbolFilled15
07083340 00000004 D ClipboardFilled25
07083344 00000004 D CheckedCheckbox
07083348 00000004 D CutFilled25
0708334c 00000004 D CapsLockOn15
07083350 00000004 D TrashFilled25
07083354 00000004 D RAM15
07083358 00000004 D More15
0708335c 00000004 D InfoFilled25
07083360 00000004 D CloseWindowFilled20
07083364 00000004 D HandCursor15
07083368 00000004 D EnterKey15
0708336c 00000004 D Duplicate25
07083370 00000004 D Settings15
07083374 00000004 D File15
07083378 00000004 D AddFavorite25
0708337c 00000004 D Edit25
07083380 00000004 D DuplicateFilled25
07083384 00000004 D Save25
07083388 00000004 D Clipboard25
0708338c 00000004 D Info25
07083390 00000004 D EditFilled25
07083394 00000004 D KeyboardFilled25
07083398 00000004 D PlusFilled25
0708339c 00000004 D Shutdown15
070833a0 00000004 D ClearSymbol15
070833a4 00000004 D Maintenance15
070833a8 00000004 D Controller15
070833ac 00000004 D Grid15
070833b0 00000004 D Keyboard25
070833b4 00000004 D CapsLockOnFilled15
070833b8 00000004 D UserManualFilled15
070833bc 00000004 D Rocket40
070833c0 00000004 D Star15
070833c4 00000004 D EnterKeyFilled15
070833c8 00000004 D GameController25
070833cc 00000004 D FolderFilled
070833d0 00000004 D Restart15
070833d4 000001f4 D opcode_names
070835c8 D __dso_handle
070835cc 00000004 D __cxxabiv1::__unexpected_handler
070835d0 00000004 D __cxxabiv1::__terminate_handler
070835d4 00000001 D __fdlib_version
070835d8 00000004 D _impure_ptr
070835e0 00000460 d impure_data
07083a40 0000016c D __global_locale
07083bac 00000408 D __malloc_av_
07083fb4 00000004 D __malloc_sbrk_base
07083fb8 00000004 D __malloc_trim_threshold
07083fbc 0000000c d __malloc_lock_object
07083fc8 00000004 d __tz_lock_object
07083fcc 00000008 D _tzname
07083fd4 0000000c D __atexit_lock
07083fe0 00000040 d tzinfo
07084020 00000004 D environ
07084024 0000000c d __env_lock_object
07084030 D __TMC_END__
07084040 d _GLOBAL_OFFSET_TABLE_
0708404c D __tdata_lma
07084058 t __frame_dummy_init_array_entry
07084058 T __init_array_start
07084058 B __preinit_array_end
07084058 B __preinit_array_start
07084058 D __tdata_lma_end
070840b0 t __do_global_dtors_aux_fini_array_entry
070840b0 T __init_array_end
070840b4 B __c_bss_start
070840b4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070840b8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070840bc 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070840c0 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070840d0 00000004 b g_onLoadCroLock
070840d4 00000004 B g_mainThread
070840d8 00000004 B CTRPluginFramework::g_keepEvent
070840dc 00000004 B CTRPluginFramework::g_continueGameEvent
070840e0 0000005c b CTRPluginFramework::exception_data
0708413c 00000004 B CTRPluginFramework::g_keepThreadHandle
07084140 00000018 b g_onLoadCroHook
07084158 00000008 B CTRPluginFramework::_sdmcArchive
07084160 00000004 B g_gspEventThreadPriority
07084164 00000004 B CTRPluginFramework::g_resumeEvent
07084168 00001000 b CTRPluginFramework::keepThreadStack
07085168 00000004 B __ctru_heap_size
0708516c 00000004 B CTRPluginFramework::Color::Black
07085170 00000004 B CTRPluginFramework::Color::White
07085174 00000004 B CTRPluginFramework::Color::Red
07085178 00000004 B CTRPluginFramework::Color::Lime
0708517c 00000004 B CTRPluginFramework::Color::Blue
07085180 00000004 B CTRPluginFramework::Color::Yellow
07085184 00000004 B CTRPluginFramework::Color::Cyan
07085188 00000004 B CTRPluginFramework::Color::Magenta
0708518c 00000004 B CTRPluginFramework::Color::Silver
07085190 00000004 B CTRPluginFramework::Color::Gray
07085194 00000004 B CTRPluginFramework::Color::Maroon
07085198 00000004 B CTRPluginFramework::Color::Olive
0708519c 00000004 B CTRPluginFramework::Color::Green
070851a0 00000004 B CTRPluginFramework::Color::Purple
070851a4 00000004 B CTRPluginFramework::Color::Teal
070851a8 00000004 B CTRPluginFramework::Color::Navy
070851ac 00000004 B CTRPluginFramework::Color::BlackGrey
070851b0 00000004 B CTRPluginFramework::Color::Brown
070851b4 00000004 B CTRPluginFramework::Color::DarkGrey
070851b8 00000004 B CTRPluginFramework::Color::DeepSkyBlue
070851bc 00000004 B CTRPluginFramework::Color::DimGrey
070851c0 00000004 B CTRPluginFramework::Color::DodgerBlue
070851c4 00000004 B CTRPluginFramework::Color::Gainsboro
070851c8 00000004 B CTRPluginFramework::Color::ForestGreen
070851cc 00000004 B CTRPluginFramework::Color::LimeGreen
070851d0 00000004 B CTRPluginFramework::Color::Orange
070851d4 00000004 B CTRPluginFramework::Color::SkyBlue
070851d8 00000004 B CTRPluginFramework::Color::Turquoise
070851dc 00000004 b CTRPluginFramework::g_runningInstance
070851e0 00000004 B CTRPluginFramework::__fileHandle
070851e8 00000008 B CTRPluginFramework::Time::Zero
070851f0 00000004 B CTRPluginFramework::System::OnAbort
070851f4 000009c4 b CTRPluginFramework::g_rng
07085bb8 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
07085bbc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07085bc0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07085bc4 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
07085bc5 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
07085bc6 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
07085bc7 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
07085bc8 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
07085bc9 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
07085bca 00000001 B CTRPluginFramework::Preferences::ShowTopFps
07085bcb 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
07085bcc 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07085bcd 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07085bd0 00000070 B CTRPluginFramework::Preferences::Settings
07085c40 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07085c58 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07085c70 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07085c88 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
07085c89 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
07085c8a 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
07085c8c 00000004 b CTRPluginFramework::defaultSysFont
07085c90 00000004 B CTRPluginFramework::g_fontAllocated
07085c94 00000004 b CTRPluginFramework::tileData
07085c98 00000004 b CTRPluginFramework::glyph
07085c9c 0000000c B CTRPluginFramework::Font::_mutex
07085ca8 00000004 B CTRPluginFramework::g_glyphAllocated
07085cac 00000028 B CTRPluginFramework::Window::BottomWindow
07085cd4 00000028 B CTRPluginFramework::Window::TopWindow
07085cfc 00000004 B CTRPluginFramework::RendererPriv::g_customColor
07085d00 00000008 B CTRPluginFramework::Renderer::hookContext
07085d08 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07085d0c 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07085d10 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07085d14 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07085d20 0000000c B CTRPluginFramework::OSDImpl::RecLock
07085d2c 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
07085d38 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07085d50 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07085d68 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
07085d6c 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
07085d74 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07085d78 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
07085d80 00000018 B CTRPluginFramework::OSDImpl::OSDHook
07085d98 00000010 b CTRPluginFramework::InstallOSD()::returnCode
07085da8 00000004 B CTRPluginFramework::OSDImpl::HookReturn
07085dac 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
07085db4 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
07085dd8 0000000c B CTRPluginFramework::OSDImpl::Callbacks
07085de4 00000004 b CTRPluginFramework::g_second
07085de8 00000010 b CTRPluginFramework::g_fpsClock
07085df8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
07085dfc 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
07085dfd 00000001 B CTRPluginFramework::OSDImpl::MessColors
07085e00 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
07085e04 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07085e08 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07085e10 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
07085e30 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07085e38 00000004 b CTRPluginFramework::g_ctrpfString
07085e3c 00000004 b CTRPluginFramework::g_bymeString
07085e40 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07085e48 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07085e50 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07085e58 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07085e60 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
07085e64 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07085e68 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07085e70 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
07085e78 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07085e7c 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07085e80 00000004 b CTRPluginFramework::g_mode
07085e84 00000004 b CTRPluginFramework::g_OpenFileLock
07085e88 00000004 b CTRPluginFramework::g_HookMode
07085e90 00000040 b CTRPluginFramework::g_hookExportFile
07085ed0 00000010 b CTRPluginFramework::g_returncode
07085ee0 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
07085ef8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
07085efc 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
07085f00 00000004 b CTRPluginFramework::g_screenshotEntry
07085f04 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07085f08 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
07085f0c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07085f10 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07085f14 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07085f18 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07085f28 00000004 B CTRPluginFramework::__g_hexEditor
07085f2c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07085f30 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07085f40 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
07085f44 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07085f48 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07085f58 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07085f68 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07085f78 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07085f7c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07085f80 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07085f84 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07085f94 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07085f98 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07085fa8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
07085fac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
07085fbc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07085fc0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07085fc8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07085fd0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07085fd8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07085fe0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07085fe8 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
07085fec 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
07085ff8 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
07086004 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07086010 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07086018 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07086020 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07086024 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07086034 00000004 b CTRPluginFramework::__pmARinstance
07086038 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708603c 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07086040 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07086050 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07086060 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
07086064 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
07086068 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07086070 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
07086080 00000004 b CTRPluginFramework::g_radioId
07086084 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
07086088 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0708608c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
07086090 00000004 B CTRPluginFramework::_pool
07086098 00000008 B CTRPluginFramework::Screenshot::_timer
070860a0 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070860a8 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070860b0 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070860c8 00000004 B CTRPluginFramework::Screenshot::_filecount
070860cc 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
070860e4 00000004 B CTRPluginFramework::Screenshot::_display
070860e8 00000004 B CTRPluginFramework::Screenshot::_mode
070860f0 00000008 B CTRPluginFramework::Screenshot::Timer
070860f8 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070860fc 00000004 B CTRPluginFramework::Screenshot::_task
07086100 00000004 B CTRPluginFramework::Screenshot::_count
07086104 00000008 b CTRPluginFramework::g_sleepEvent
0708610c 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07086110 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
07086114 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07086118 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708611c 00000004 B CTRPluginFramework::HookManager::instance
07086120 00000078 B CTRPluginFramework::Scheduler::_singleton
07086198 00000040 b CTRPluginFramework::_topBuf
070861d8 00000004 B CTRPluginFramework::ScreenImpl::Top
070861dc 00000040 b CTRPluginFramework::_botBuf
0708621c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
07086220 0000000c b CTRPluginFramework::Heap::_mutex
0708622c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07086230 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
07086234 00000008 b CTRPluginFramework::Heap::g_heapPool
0708623c 0000000c b sAddrMap
07086248 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07086260 0000000c B CTRPluginFramework::FSPath::FSMutex
07086270 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
07086274 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070862d8 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070862dc 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070862e0 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070862e8 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070862ec 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070862f0 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070862fc 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07086308 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07086318 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0708631a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
07086320 0000000c b _mutex
0708632c 00000008 b sVramPool
07086334 0000000c b sAddrMap
07086340 00000004 b srvRefCount
07086344 00000004 b srv2Handle
07086348 00000004 b errfRefCount
0708634c 00000004 b errfHandle
07086350 00000004 b sharedFontAddr
07086354 00000004 b arbiter
07086358 00000004 b cfguRefCount
0708635c 00000004 b cfguHandle
07086360 00000004 b fsuHandle
07086368 00000080 b fsExemptArchives
070863e8 00000004 b fsuRefCount
070863ec 00000001 B fs
070863f0 0000000c b aptFirstHook
070863fc 00000004 b serviceName.7785
07086400 00000004 b aptRefCount
07086404 0000000c b aptEvents
07086410 00000008 b aptSleepEvent
07086418 00000004 b aptEventHandlerThread
0708641c 00000004 b aptMessageFunc
07086420 00000004 b aptMessageFuncData
07086424 00000001 b aptHomeButtonState
07086425 00000001 b flagInit.8135
07086426 00000001 b flagValue.8136
07086428 00001000 b aptParameters
07087428 00001000 b __stack
07088428 00000004 b amRefCount
0708842c 00000004 b amHandle
07088430 00000004 b acRefCount
07088434 00000004 b acHandle
07088438 00000004 b hidRefCount
0708843c 00000004 b kOld
07088440 00000004 b kHeld
07088444 00000004 b cPos
07088448 00000004 b tPos
0708844c 00000006 b aVec
07088452 00000006 b gRate
07088458 00000004 b kDown
0708845c 00000004 b kUp
07088460 00000004 b gspEventData
07088464 00000038 b gspEvents
0708849c 0000001c b gspEventCounts
070884b8 00000001 b gspRunEvents
070884bc 00000004 b gspRefCount
070884c0 00000004 b gfxSharedMemory
070884c4 00000001 b gfxThreadID
070884c8 00000004 b irrstRefCount
070884cc 00000004 b kHeld
070884d0 00000004 b csPos
070884d4 00000004 b g_mainThreadVars
070884d8 b saved_stack
070884e0 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070884e8 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070884f0 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070884f8 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070884fc 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070884fe 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07088500 00000180 b CTRPluginFramework::g_keyName
07088680 00000004 B CTRPluginFramework::Controller::_keysDown
07088684 00000004 B CTRPluginFramework::Controller::_keysHeld
07088688 00000004 B CTRPluginFramework::Controller::_keysReleased
0708868c 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07088690 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070886a8 0000000c B CTRPluginFramework::g_codeTypes
070886b4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070886b8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070886c4 00000001 b CTRPluginFramework::g_condAgainstData
070886c5 00000001 b CTRPluginFramework::g_newCondDataToggle
070886c8 00000004 b CTRPluginFramework::__arCodeEditor
070886cc 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070886d0 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070886dc 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070886e0 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
070886e8 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
070886f0 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070886f8 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07088708 00000001 b CTRPluginFramework::g_progressLoop
07088710 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07088718 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07088720 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07088728 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07088730 00000004 b CTRPluginFramework::__converter
07088734 00000008 b sMappablePool
0708873c 0000000c b sAddrMap
07088748 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708874c 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
07088750 00000008 B CTRPluginFramework::ARHandler::Offset
07088758 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708875c 00000010 B CTRPluginFramework::ARHandler::Data
0708876c 00000008 B CTRPluginFramework::ARHandler::Storage
07088774 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
07088778 00000001 b CTRPluginFramework::ToggleFloat
0708877c 00000004 b CTRPluginFramework::g_context
07088780 00000fa0 b CTRPluginFramework::arStack
07089720 b completed.7759
07089724 b object.7764
0708973c 0000000c b eh_globals
07089748 00000010 b (anonymous namespace)::emergency_pool
07089758 00000010 V std::string::_Rep::_S_empty_rep_storage
07089768 00000004 b (anonymous namespace)::__new_handler
0708976c 00000028 B __malloc_current_mallinfo
07089794 00000004 B __malloc_max_sbrked_mem
07089798 00000004 B __malloc_max_total_mem
0708979c 00000004 B __malloc_top_pad
070897a0 0000000b b __tzname_dst
070897ac 0000000b b __tzname_std
070897b8 00000004 b prev_tzenv
070897bc 00000004 B _daylight
070897c0 00000004 B _timezone
070897c4 00000004 b initial_env
070897c8 00000004 b heap_start.7089
070897cc 00000004 B fake_heap_end
070897d0 00000004 B fake_heap_start
070897d4 00000038 B __syscalls
0708980c 00000004 B g_sharedFont
07089810 00000004 B charPerSheet
07089814 00000004 B hidMemHandle
07089818 00000004 B hidHandle
0708981c 00000014 B hidEvents
07089830 00000004 B hidSharedMem
07089834 00000004 B gspEventThread
07089838 00000004 B gspEvent
0708983c 00000004 B gspGpuHandle
07089840 00000004 B gspSharedMemHandle
07089844 00000004 B gspThreadEventHandle
07089848 00000004 B irrstMemHandle
0708984c 00000004 B irrstEvent
07089850 00000004 B irrstHandle
07089854 00000004 B irrstSharedMem
07089858 00000004 B __ctru_linear_heap
0708985c 00000004 B __tmp
07089860 00000004 B __ctru_linear_heap_size
07089864 00000004 B __system_retAddr
07089868 00000004 B __ctru_heap
0708986c B __c_bss_end
0708986c B __tls_start
0708988c A __end__
0708988c B __tls_end
